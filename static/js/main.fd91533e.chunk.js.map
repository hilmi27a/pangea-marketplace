{"version":3,"sources":["img/Avalanche.png","img/Moralis.png","helpers/formatters.js","helpers/networks.js","components/Blockie.jsx","components/Address/Address.jsx","components/LogosGlobal.jsx","hooks/useERC20Balance.js","components/Account.jsx","components/Chains/Logos.jsx","components/Chains/Chains.jsx","helpers/collections.js","components/MyAccount/MyAccount.jsx","components/MyAccount/MyOrders.jsx","components/MyAccount/NFTCollections.jsx","components/MyAccount/NFTListings.jsx","components/SearchCollections.jsx","components/Marketplace/NFTMarketPlace.jsx","components/AddressInput.jsx","components/CreatorsDashboard/components/AssetSelector.jsx","components/CreatorsDashboard/components/Transfer.jsx","img/tokens/drone-comm.png","img/tokens/drone-nav.png","img/tokens/drone-delivery.png","helpers/assetType.js","img/tokens/drone-recon.png","img/tokens/drone-dispatch.png","components/CreatorsDashboard/components/SearchAssetType.jsx","components/CreatorsDashboard/components/Form.jsx","components/GoogleMap/Autocomplete.jsx","components/GoogleMap/Markers.jsx","components/GoogleMap/CustomMarkers.jsx","components/CreatorsDashboard/components/MintFactory.jsx","components/CreatorsDashboard/components/OrderRequest.jsx","components/NativeBalance.jsx","components/CreatorsDashboard/CreatorsDashboard.jsx","components/Transactions.jsx","components/Home.jsx","components/MenuItems.jsx","components/PolygonWeb.jsx","App.jsx","index.js","img/hexic.png","img/metamask.svg"],"names":["getEllipsisTxt","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","currency","str","n","slice","length","getEllipsisNormal","networkConfigs","currencySymbol","blockExplorerUrl","wrapped","chainName","currencyName","rpcUrl","chainId","getNativeByChain","chain","getExplorer","Blockie","props","account","useMoralis","address","seed","currentWallet","toLowerCase","className","Avatar","active","size","styles","height","display","gap","backgroundColor","borderRadius","alignItems","Address","useState","setAddress","isClicked","setIsClicked","useEffect","paragraph","rows","width","title","Copy","xmlns","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","cursor","onClick","navigator","clipboard","writeText","d","id","avatar","copyable","Check","AvaxLogo","BSCLogo","ETHLogo","fillOpacity","PolygonLogo","useERC20Balance","params","useMoralisWeb3Api","isInitialized","walletAddress","assets","setAssets","fetchERC20Balance","then","balance","a","getTokenBalances","result","menuItems","key","value","icon","padding","justifyContent","marginTop","text","color","Account","authenticate","isAuthenticated","logout","Moralis","user","isWeb3EnableLoading","isWeb3Enabled","web3EnableError","enableWeb3","web3","isModalVisible","setIsModalVisible","useNativeBalance","data","nativeCrypto","nativeToken","selected","setSelected","username","email","company","marketplace","formInput","updateFormInput","imageUploading","setImageUploading","isProfileVisible","setIsProfileVisible","loading","setLoading","require","default","setAvatar","gasFee","setGasFee","unit","setUnit","newSelected","find","item","toggleEthUnits","signingMessage","e","file","target","files","imageFile","File","name","saveIPFS","imageURI","ipfs","alert","onUpdateProfile","set","save","catch","error","JSON","stringify","Web3","eth","getGasPrice","gas","parseFloat","toFixed","Units","FromWei","borderStyle","float","background","src","attributes","avatarURL","alt","marginLeft","textAlign","fontSize","wordWrap","overflow","marginRight","transform","textOverflow","fontWeight","visibility","visible","footer","onCancel","bodyStyle","paddingLeft","SettingOutlined","href","rel","SelectOutlined","type","cancelText","onOk","okText","spinning","tip","marginBottom","message","margin","opacity","placeholder","onChange","accept","htmlFor","zIndex","fontFamily","button","border","Chains","useChain","switchNetwork","console","log","menu","map","Item","overlay","trigger","DownOutlined","networkCollections","image","addr","getCollectionsByChain","netIcons","table","MyAccount","NFTCollectionsList","iconSelected","setIconSelected","queryItemImages","useMoralisQuery","queryMarketItems","parse","fetchMarketItems","filter","seller","owner","sort","b","updatedAt","getImage","addrs","document","getElementById","element","getName","columns","dataIndex","render","record","tokenId","collection","tags","tag","status","String","startsWith","toUpperCase","index","date","moment","format","token","nftContract","sold","price","dataSource","MyOrders","queryOrders","fetchOrders","getCollection","getAssetName","metaData","Get","getAssetImage","yourUrl","Httpreq","XMLHttpRequest","open","send","responseText","tokenURI","MARKETPLACE_ADDR","process","NFTs","flexWrap","WebkitBoxPack","maxWidth","MetaInfo","nftMeta","utcTimeStamp","cryptoSymbol","metadata","owner_of","token_address","whiteSpace","token_id","NFTCollections","setNFTCollections","setVisibility","nftToSell","setNftToSell","nftImage","setNftImage","setUtcTimeStamp","setPrice","contractProcessor","useWeb3ExecuteFunction","MARKET_ABI","contractABI","contractABIJson","listItemFunction","nft","currentPrice","options","contractAddress","functionName","abi","fetch","onSuccess","onError","Web3API","getNFTs","collectionNFTs","undefined","getNftCollections","backGroundColor","preview","position","img","dt_str","Date","timestamp","toString","handleSellClick","List","Ribbon","autoFocus","DRONE_DELIVERY_ICON","DRONE_DROP_ICON","GMAP_API_KEY","NFT_TOKEN_ADDR","priceEth","description","NFTListings","setDebug","NFTCreated","setNFTCreated","NFTOrdered","setNFTOrdered","NFTSold","setNFTSold","zoomCanvas","setZoomCanvas","nftAssets","setNfAssets","refresh","setRefresh","reloadTracking","setReloadTracking","setFetchOrders","Tracking","setTracking","SatelliteMap","setSatelliteMap","RoadMap","setRoadMap","staticMapURI","createdItems","soldItems","getNFTCreated","getOrders","testInit","testPath","countCycle","setcountCycle","incrementCounter","i","lat1","lat","lng1","lng","lat2","lng2","dlat","dlng","push","j","packageDroped","testRoute","OrdersList","Object","extend","reset","Query","get","objectId","obj","update","trackPath","query","equalTo","route","fillColor","delivered","path","tracking","forEach","handleAssetsClick","setTimeout","onCanvasClick","state","createSale","updateOrderProgress","orderList","NFT_ABI","awaitReceipt","executeFunction","on","receipt","txEvents","events","txTransfer","Transfer","txReturnVal","returnValues","createMarketItem","ETH","listingPrice","msgValue","updateMarketplace","queryMarket","market","matches","objId","itemId","updateMarket","updateOrders","marketId","setOrder","mapParameters","mapPath","pathColor","subType","radius","geoFence","pi","Math","PI","cos","sin","_meters","geodeticFencePoints","keyIdx","Orders","queryTarget","mainQuery","or","object","Promise","all","elm","priceUSD","priceWei","createdAt","meta","orderRequest","bulk","items","marketList","marketData","tokens","nftTransaction","query2","containedIn","tokenData","token_uri","confirmed","updateSoldMarketItem","orderId","ReloadOutlined","spin","textDecoration","buyNFT","window","innerWidth","innerHeight","top","onRefreshTracking","onConfirmClick","onRejectClick","alignContent","paddingRight","SearchCollections","totalPrice","setInputValue","Option","Select","showSearch","optionFilterProp","asset","Card","Meta","cart","priceList","Cart","closeCart","buy","clear","class","content","MenuInfo","NFTBalance","debug","nftToBuy","setNftToBuy","ordersUploading","setOrdersUploading","setCart","resetCart","setTotalPrice","resetTotalPrice","cartVisible","setCartVisible","nftCollections","setNftCollections","inputValue","addingToCart","reduce","x","y","notification","placement","now","metadataFile","base64","btoa","submitBulkOrders","metaURI","newOrder","getMarketNftCollections","Assets","limit","optionsNFT","getNFTsForContract","marketNFTs","mark","brand","Boolean","handleBuyClick","paddingTop","createBulkOrders","itemKey","splice","removeFromCart","borderBottom","actions","ShoppingCartOutlined","isSupportedDomain","domain","some","tld","endsWith","AddressInput","input","useRef","validatedAddress","setValidatedAddress","isDomain","setIsDomain","resolveDomain","resolve","updateAddress","useCallback","processPromise","promise","ens","getAddress","r","Cross","current","focus","x1","y1","x2","y2","ref","prefix","scale","SearchOutlined","suffix","disabled","AssetSelector","setAsset","nativeBalance","fullBalance","useMemo","decimals","symbol","logo","alignSelf","card","header","outline","textverflow","appearance","select","textWrapper","row","flexDirection","receiver","setReceiver","tx","setTx","amount","setAmount","isPending","setIsPending","openNotification","native","Token","transfer","hash","transactionHash","tranfer","strong","CreditCardOutlined","assetType","comm","delivery","nav","SearchAssetType","getAssetType","Form","weight","val","handleSubmit","assetPrice","assetBrand","assetName","assetDesc","assetWeight","React","createRef","assetUnit","this","Component","Wrapper","styled","div","AutoComplete","onPlaceChanged","addplace","place","autoComplete","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","searchInput","blur","clearSearchBox","bind","mapApi","types","places","Autocomplete","addListener","bindTo","event","clearInstanceListeners","onFocus","Marker","defaultProps","MarkerWaypoint","borderColor","borderWidth","left","wayPoints","main","boxShadow","typeList","Communication","Observation","Navigation","Courier","Emergency","MintFactory","fileUrl","setFileUrl","setCurrentLoc","typeNo","setTypeNo","coordinateList","setCoordinateList","geoFenceList","setGeofenceList","point","setInfoMeta","infoActive","setInfoActive","mapFullscreen","setMapFullscreen","InputForm","CurrentLoc","geolocation","getCurrentPosition","center","coords","latitude","longitude","GoogleMap","mapApiLoaded","mapInstance","geoCoder","zoom","draggable","onMarkerInteraction","childKey","childProps","mouse","setState","onMarkerInteractionMouseUp","_generateAddress","onMarkerClick","ev","maps","markerInfo","marker","add","_onChange","_onClick","addWayPoints","waypoint","apiHasLoaded","renderPolylines","addPlace","Polyline","geodesic","strokeColor","strokeOpacity","strokeWeight","setMap","bounds","LatLngBounds","LatLng","setCurrentLocation","Geocoder","geocode","results","formatted_address","onChildMouseDown","onChildMouseUp","onChildMouseMove","onChildClick","onChildMouseEnter","onMarkerMouseEnter","onChildMouseLeave","onMarkerMouseLeave","bootstrapURLKeys","libraries","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","url","bottom","FullscreenExitOutlined","right","FullscreenOutlined","memo","OrderRequest","tokenType","setTokenType","setDebugLog","RequestForm","useMasterKey","metadataURI","submitOrder","defaultActiveKey","indicatorColor","TabPane","tab","NativeBalance","formatted","Dashboard","tabSelected","setTabSelected","NFTMarketTransactions","Typography","Text","Home","isServerInfo","verticalAlign","MenuItems","pathname","useLocation","theme","mode","defaultSelectedKeys","to","PolygonWeb","init","loaded","container","fpsLimit","interactivity","enable","onHover","resize","modes","bubble","distance","duration","quantity","repulse","particles","links","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","detectRetina","Header","Layout","Footer","headerRight","socialMedia","Logo","App","exact","NFTMarketPlace","CreatorsDashboard","FacebookFilled","InstagramFilled","TwitterSquareFilled","YoutubeOutlined","LinkedinOutlined","APP_ID","SERVER_URL","Application","appId","serverUrl","ReactDOM"],"mappings":"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","file":"static/js/main.fd91533e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Avalanche.5378e81c.png\";","export default __webpack_public_path__ + \"static/media/Moralis.8843ed09.png\";","export const n6 = new Intl.NumberFormat(\"en-us\", {\r\n  style: \"decimal\",\r\n  minimumFractionDigits: 0,\r\n  maximumFractionDigits: 6,\r\n});\r\nexport const n4 = new Intl.NumberFormat(\"en-us\", {\r\n  style: \"decimal\",\r\n  minimumFractionDigits: 0,\r\n  maximumFractionDigits: 4,\r\n});\r\n\r\nexport const c2 = new Intl.NumberFormat(\"en-us\", {\r\n  style: \"currency\",\r\n  currency: \"USD\",\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\n/**\r\n * Returns a string of form \"abc...xyz\"\r\n * @param {string} str string to string\r\n * @param {number} n number of chars to keep at front/end\r\n * @returns {string}\r\n */\r\nexport const getEllipsisTxt = (str, n = 6) => {\r\n  if (str) {\r\n    return `${str.slice(0, n)}...${str.slice(str.length - n)}`;\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const getEllipsisNormal = (str, n = 6) => {\r\n  if (str) {\r\n    return `${str.slice(0, n)}...`;\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const tokenValue = (value, decimals) => (decimals ? value / Math.pow(10, decimals) : value);\r\n\r\n/**\r\n * Return a formatted string with the symbol at the end\r\n * @param {number} value integer value\r\n * @param {number} decimals number of decimals\r\n * @param {string} symbol token symbol\r\n * @returns {string}\r\n */\r\nexport const tokenValueTxt = (value, decimals, symbol) => `${n4.format(tokenValue(value, decimals))} ${symbol}`;\r\n","export const networkConfigs = {\r\n  \"0x1\": {\r\n    currencySymbol: \"ETH\",\r\n    blockExplorerUrl: \"https://etherscan.io/\",\r\n    wrapped: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\r\n  },\r\n  \"0x3\": {\r\n    currencySymbol: \"ETH\",\r\n    blockExplorerUrl: \"https://ropsten.etherscan.io/\",\r\n  },\r\n  \"0x4\": {\r\n    currencySymbol: \"ETH\",\r\n    blockExplorerUrl: \"https://kovan.etherscan.io/\",\r\n  },\r\n  \"0x2a\": {\r\n    currencySymbol: \"ETH\",\r\n    blockExplorerUrl: \"https://rinkeby.etherscan.io/\",\r\n  },\r\n  \"0x5\": {\r\n    currencySymbol: \"ETH\",\r\n    blockExplorerUrl: \"https://goerli.etherscan.io/\",\r\n  },\r\n  \"0x539\": {\r\n    chainName: \"Local Chain\",\r\n    currencyName: \"ETH\",\r\n    currencySymbol: \"ETH\",\r\n    rpcUrl: \"http://127.0.0.1:7545\",\r\n  },\r\n  \"0xa86a\": {\r\n    chainId: 43114,\r\n    chainName: \"Avalanche Mainnet\",\r\n    currencyName: \"AVAX\",\r\n    currencySymbol: \"AVAX\",\r\n    rpcUrl: \"https://api.avax.network/ext/bc/C/rpc\",\r\n    blockExplorerUrl: \"https://cchain.explorer.avax.network/\",\r\n  },\r\n  \"0xa869\": {\r\n    chainId: 43113,\r\n    chainName: \"Avalanche Fuji\",\r\n    currencyName: \"AVAX\",\r\n    currencySymbol: \"AVAX\",\r\n    rpcUrl: \"https://api.avax-test.network/ext/bc/C/rpc\",\r\n    blockExplorerUrl: \"https://cchain.explorer.avax.network/\",\r\n  },\r\n  \"0x38\": {\r\n    chainId: 56,\r\n    chainName: \"Smart Chain\",\r\n    currencyName: \"BNB\",\r\n    currencySymbol: \"BNB\",\r\n    rpcUrl: \"https://bsc-dataseed.binance.org/\",\r\n    blockExplorerUrl: \"https://bscscan.com/\",\r\n    wrapped: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\r\n  },\r\n  \"0x61\": {\r\n    chainId: 97,\r\n    chainName: \"Smart Chain - Testnet\",\r\n    currencyName: \"BNB\",\r\n    currencySymbol: \"BNB\",\r\n    rpcUrl: \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\r\n    blockExplorerUrl: \"https://testnet.bscscan.com/\",\r\n  },\r\n  \"0x89\": {\r\n    chainId: 137,\r\n    chainName: \"Polygon Mainnet\",\r\n    currencyName: \"MATIC\",\r\n    currencySymbol: \"MATIC\",\r\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com/\",\r\n    blockExplorerUrl: \"https://explorer-mainnet.maticvigil.com/\",\r\n    wrapped: \"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270\",\r\n  },\r\n  \"0x13881\": {\r\n    chainId: 80001,\r\n    chainName: \"Mumbai\",\r\n    currencyName: \"MATIC\",\r\n    currencySymbol: \"MATIC\",\r\n    rpcUrl: \"https://rpc-mumbai.matic.today/\",\r\n    blockExplorerUrl: \"https://mumbai.polygonscan.com/\",\r\n  },\r\n};\r\n\r\nexport const getNativeByChain = (chain) =>\r\n  networkConfigs[chain]?.currencySymbol || \"NATIVE\";\r\n\r\nexport const getChainById = (chain) => networkConfigs[chain]?.chainId || null;\r\n\r\nexport const getExplorer = (chain) => networkConfigs[chain]?.blockExplorerUrl;\r\n\r\nexport const getWrappedNative = (chain) =>\r\n  networkConfigs[chain]?.wrapped || null;\r\n","import { Skeleton } from \"antd\";\r\nimport Blockies from \"react-blockies\";\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\n/**\r\n * Shows a blockie image for the provided wallet address\r\n * @param {*} props\r\n * @returns <Blockies> JSX Elemenet\r\n */\r\n\r\nfunction Blockie(props) {\r\n  const { account } = useMoralis();\r\n  if (!props.address && !account) return <Skeleton.Avatar active size={40} />;\r\n\r\n  return (\r\n    <Blockies\r\n      seed={props.currentWallet ? account.toLowerCase() : props.address.toLowerCase()}\r\n      className=\"identicon\"\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Blockie;\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { getEllipsisTxt } from \"../../helpers/formatters\";\r\nimport Blockie from \"../Blockie\";\r\nimport \"./identicon.css\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nconst styles = {\r\n  address: {\r\n    height: \"36px\",\r\n    display: \"flex\",\r\n    gap: \"5px\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\r\n    borderRadius: \"9px\",\r\n    alignItems: \"center\",\r\n  },\r\n};\r\n\r\nfunction Address(props) {\r\n  const { account } = useMoralis();\r\n  const [address, setAddress] = useState();\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAddress(props?.address || account);\r\n  }, [account, props]);\r\n\r\n  if (!address) return <Skeleton paragraph={{ rows: 1, width: \"100%\" }} title={false} active />;\r\n\r\n  const Copy = () => (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"26\"\r\n      height=\"26\"\r\n      viewBox=\"0 0 24 24\"\r\n      strokeWidth=\"2\"\r\n      stroke=\"#1780FF\"\r\n      fill=\"none\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      style={{ cursor: \"pointer\" }}\r\n      onClick={() => {\r\n        navigator.clipboard.writeText(address);\r\n        setIsClicked(true);\r\n      }}\r\n    >\r\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n      <path d=\"M15 3v4a1 1 0 0 0 1 1h4\" />\r\n      <path d=\"M18 17h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h4l5 5v7a2 2 0 0 1 -2 2z\" />\r\n      <path d=\"M16 17v2a2 2 0 0 1 -2 2h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2\" />\r\n      <title id=\"copy-address\">Copy Address</title>\r\n    </svg>\r\n  );\r\n\r\n  return (\r\n    <div style={{ ...styles.address, ...props.style }}>\r\n      {props.avatar === \"left\" && <Blockie address={address} size={7} />}\r\n      <p>{props.size ? getEllipsisTxt(address, props.size) : address}</p>\r\n      {props.avatar === \"right\" && <Blockie address={address} size={7} />}\r\n      {props.copyable && (isClicked ? <Check /> : <Copy />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Address;\r\n\r\nconst Check = () => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"3\"\r\n    stroke=\"#21BF96\"\r\n    fill=\"none\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n  >\r\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n    <path d=\"M5 12l5 5l10 -10\" />\r\n    <title id=\"copied-address\">Copied!</title>\r\n  </svg>\r\n);\r\n","export const AvaxLogo = () => (\r\n  <svg width=\"25\" height=\"25\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M0 10C0 4.47715 4.47715 0 10 0H20C25.5228 0 30 4.47715 30 10V20C30 25.5228 25.5228 30 20 30H10C4.47715 30 0 25.5228 0 20V10Z\"\r\n      fill=\"#E84142\"\r\n    />\r\n    <path\r\n      d=\"M20.2914 15.3898C20.8111 14.4921 21.6497 14.4921 22.1693 15.3898L25.4056 21.0709C25.9252 21.9685 25.5 22.7008 24.4607 22.7008H17.941C16.9134 22.7008 16.4882 21.9685 16.9961 21.0709L20.2914 15.3898ZM14.0315 4.45277C14.5512 3.55513 15.378 3.55513 15.8977 4.45277L16.6182 5.75198L18.3189 8.74017C18.7323 9.59056 18.7323 10.5945 18.3189 11.4449L12.6142 21.3307C12.0945 22.1339 11.2323 22.6417 10.2756 22.7008H5.53942C4.50005 22.7008 4.07485 21.9803 4.59454 21.0709L14.0315 4.45277Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const BSCLogo = () => (\r\n  <svg width=\"25\" height=\"25\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M0 10C0 4.47715 4.47715 0 10 0H20C25.5228 0 30 4.47715 30 10V20C30 25.5228 25.5228 30 20 30H10C4.47715 30 0 25.5228 0 20V10Z\"\r\n      fill=\"#F3BA2F\"\r\n    />\r\n    <path\r\n      d=\"M11.3588 13.5038L15 9.8625L18.6431 13.5056L20.7619 11.3869L15 5.625L9.24 11.385L11.3588 13.5038ZM5.625 15L7.74375 12.8812L9.8625 15L7.74375 17.1188L5.625 15ZM11.3588 16.4963L15 20.1375L18.6431 16.4944L20.7619 18.6122L15 24.375L9.24 18.615L9.23719 18.6122L11.3588 16.4963ZM20.1375 15L22.2563 12.8812L24.375 15L22.2563 17.1188L20.1375 15ZM17.1488 14.9981H17.1506V15L15 17.1506L12.8522 15.0037L12.8484 15L12.8522 14.9972L13.2281 14.6203L13.4109 14.4375L15 12.8494L17.1497 14.9991L17.1488 14.9981Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const ETHLogo = () => (\r\n  <svg width=\"25\" height=\"25\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M0 10C0 4.47715 4.47715 0 10 0H20C25.5228 0 30 4.47715 30 10V20C30 25.5228 25.5228 30 20 30H10C4.47715 30 0 25.5228 0 20V10Z\"\r\n      fill=\"#627EEA\"\r\n    />\r\n    <path\r\n      d=\"M15.0294 3.75V12.0656L22.0578 15.2062L15.0294 3.75Z\"\r\n      fill=\"white\"\r\n      fillOpacity=\"0.602\"\r\n    />\r\n    <path d=\"M15.0294 3.75L8 15.2062L15.0294 12.0656V3.75Z\" fill=\"white\" />\r\n    <path\r\n      d=\"M15.0294 20.595V26.2453L22.0625 16.515L15.0294 20.595Z\"\r\n      fill=\"white\"\r\n      fillOpacity=\"0.602\"\r\n    />\r\n    <path d=\"M15.0294 26.2453V20.594L8 16.515L15.0294 26.2453Z\" fill=\"white\" />\r\n    <path\r\n      d=\"M15.0294 19.2872L22.0578 15.2063L15.0294 12.0675V19.2872Z\"\r\n      fill=\"white\"\r\n      fillOpacity=\"0.2\"\r\n    />\r\n    <path d=\"M8 15.2063L15.0294 19.2872V12.0675L8 15.2063Z\" fill=\"white\" fillOpacity=\"0.602\" />\r\n  </svg>\r\n);\r\n\r\nexport const PolygonLogo = () => (\r\n  <svg width=\"25\" height=\"25\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M0 10C0 4.47715 4.47715 0 10 0H20C25.5228 0 30 4.47715 30 10V20C30 25.5228 25.5228 30 20 30H10C4.47715 30 0 25.5228 0 20V10Z\"\r\n      fill=\"#8247E5\"\r\n    />\r\n    <path\r\n      d=\"M20.4896 11.5015C20.1157 11.2878 19.635 11.2878 19.2077 11.5015L16.2166 13.2641L14.1869 14.3858L11.2493 16.1484C10.8754 16.362 10.3947 16.362 9.96736 16.1484L7.67062 14.7596C7.29674 14.546 7.02967 14.1187 7.02967 13.638V10.9674C7.02967 10.5401 7.24332 10.1128 7.67062 9.8457L9.96736 8.51039C10.3412 8.29674 10.822 8.29674 11.2493 8.51039L13.546 9.89911C13.9199 10.1128 14.1869 10.5401 14.1869 11.0208V12.7834L16.2166 11.6083V9.79228C16.2166 9.36499 16.003 8.93769 15.5757 8.67062L11.3027 6.16024C10.9288 5.94659 10.4481 5.94659 10.0208 6.16024L5.64095 8.72404C5.21365 8.93769 5 9.36499 5 9.79228V14.8131C5 15.2404 5.21365 15.6677 5.64095 15.9347L9.96736 18.4451C10.3412 18.6588 10.822 18.6588 11.2493 18.4451L14.1869 16.7359L16.2166 15.5608L19.1543 13.8516C19.5282 13.638 20.0089 13.638 20.4362 13.8516L22.7329 15.1869C23.1068 15.4006 23.3739 15.8279 23.3739 16.3086V18.9792C23.3739 19.4065 23.1602 19.8338 22.7329 20.1009L20.4896 21.4362C20.1157 21.6499 19.635 21.6499 19.2077 21.4362L16.911 20.1009C16.5371 19.8872 16.27 19.4599 16.27 18.9792V17.27L14.2404 18.4451V20.2077C14.2404 20.635 14.454 21.0623 14.8813 21.3294L19.2077 23.8398C19.5816 24.0534 20.0623 24.0534 20.4896 23.8398L24.816 21.3294C25.1899 21.1157 25.457 20.6884 25.457 20.2077V15.1335C25.457 14.7062 25.2433 14.2789 24.816 14.0119L20.4896 11.5015Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n);\r\n","import { useEffect, useState } from \"react\";\r\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\r\n\r\nexport const useERC20Balance = (params) => {\r\n  const { account } = useMoralisWeb3Api();\r\n  const { isInitialized, chainId, account: walletAddress } = useMoralis();\r\n\r\n  const [assets, setAssets] = useState();\r\n\r\n  useEffect(() => {\r\n    if (isInitialized) {\r\n      fetchERC20Balance().then((balance) => setAssets(balance));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isInitialized, chainId, walletAddress]);\r\n\r\n  const fetchERC20Balance = async () => {\r\n    return await account\r\n      .getTokenBalances({ address: walletAddress, chain: params?.chain || chainId })\r\n      .then((result) => result);\r\n  };\r\n\r\n  return { fetchERC20Balance, assets };\r\n};\r\n","import { useMoralis, useMoralisQuery } from \"react-moralis\";\r\nimport { getEllipsisTxt } from \"helpers/formatters\";\r\nimport { getExplorer, getNativeByChain } from \"helpers/networks\";\r\nimport Blockie from \"./Blockie\";\r\nimport { Button, Card, Modal, Spin, Alert } from \"antd\";\r\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { useEffect, useState, useMemo } from \"react\";\r\nimport Address from \"./Address/Address\";\r\nimport { SelectOutlined } from \"@ant-design/icons\";\r\nimport { useNativeBalance } from \"react-moralis\";\r\nimport { AvaxLogo, PolygonLogo, BSCLogo, ETHLogo } from \"./LogosGlobal\";\r\nimport { useERC20Balance } from \"hooks/useERC20Balance\";\r\n\r\nconst menuItems = [\r\n  {\r\n    key: \"0x1\",\r\n    value: \"Ethereum\",\r\n    icon: <ETHLogo />,\r\n  },\r\n  {\r\n    key: \"0x539\",\r\n    value: \"Local Chain\",\r\n    icon: <ETHLogo />,\r\n  },\r\n  {\r\n    key: \"0x3\",\r\n    value: \"Ropsten Testnet\",\r\n    icon: <ETHLogo />,\r\n  },\r\n  {\r\n    key: \"0x4\",\r\n    value: \"Rinkeby Testnet\",\r\n    icon: <ETHLogo />,\r\n  },\r\n  {\r\n    key: \"0x2a\",\r\n    value: \"Kovan Testnet\",\r\n    icon: <ETHLogo />,\r\n  },\r\n  {\r\n    key: \"0x5\",\r\n    value: \"Goerli Testnet\",\r\n    icon: <ETHLogo />,\r\n  },\r\n  {\r\n    key: \"0x38\",\r\n    value: \"Binance\",\r\n    icon: <BSCLogo />,\r\n  },\r\n  {\r\n    key: \"0x61\",\r\n    value: \"Smart Chain Testnet\",\r\n    icon: <BSCLogo />,\r\n  },\r\n  {\r\n    key: \"0x89\",\r\n    value: \"Polygon\",\r\n    icon: <PolygonLogo />,\r\n  },\r\n  {\r\n    key: \"0x13881\",\r\n    value: \"Mumbai\",\r\n    icon: <PolygonLogo />,\r\n  },\r\n  {\r\n    key: \"0xa86a\",\r\n    value: \"Avalanche\",\r\n    icon: <AvaxLogo />,\r\n  },\r\n  {\r\n    key: \"0xa869\",\r\n    value: \"Fuji\",\r\n    icon: <AvaxLogo />,\r\n  },\r\n];\r\n\r\nconst styles = {\r\n  account: {\r\n    height: \"42px\",\r\n    padding: \"0 15px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"192px\",//\"fit-content\",\r\n    marginTop:\"5px\",\r\n    borderRadius: \"12px\",\r\n    backgroundColor: \"black\",//\"rgb(244, 244, 244)\",\r\n    cursor: \"pointer\",\r\n  },\r\n  text: {\r\n    color: \"orange\",\r\n  },\r\n};\r\nfunction Account(props) {\r\n  const { authenticate, isAuthenticated, logout, account, chainId, Moralis, user, isWeb3Enabled, isWeb3EnableLoading, web3EnableError, enableWeb3, web3 } = useMoralis();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const { data: balance, nativeToken } = useNativeBalance(props);\r\n  const nativeCrypto = getNativeByChain(chainId)\r\n  const [selected, setSelected] = useState(menuItems[10]);\r\n  const [formInput, updateFormInput] = useState({ username: null, email: null, company: null, marketplace:null})\r\n  const [imageUploading, setImageUploading] = useState(false);\r\n  const [isProfileVisible, setIsProfileVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [avatar, setAvatar] = useState(require('../img/hexic.png').default)\r\n  const [gasFee, setGasFee] = useState()\r\n  const [unit, setUnit] = useState(\"GWei\")\r\n  const { assets } = useERC20Balance();\r\n\r\n  useEffect(async () => {\r\n    if (!chainId) return menuItems[11];\r\n    const newSelected = menuItems.find((item) => item.key === chainId);\r\n    setSelected(newSelected);\r\n    toggleEthUnits()\r\n    // setGasFee(gas)\r\n\r\n  }, [chainId, isWeb3EnableLoading]);\r\n\r\n  useEffect(() => {\r\n    if(isAuthenticated)\r\n      logout()\r\n    authenticate({ signingMessage: \"Logging In...\" })\r\n\r\n    // alert(\"current assets: \" + JSON.stringify(nativeToken));\r\n  }, [account]);\r\n\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div style={styles.account} onClick={() => authenticate({ signingMessage: \"Logging In...\" })}>\r\n        <p style={styles.text}>Authenticate</p>\r\n      </div>\r\n    );\r\n  }\r\n  async function onAvatarChange(e) {\r\n    const file = e.target.files[0]\r\n    try {\r\n        setImageUploading(true)\r\n        const imageFile = new Moralis.File(file.name, file)\r\n        await imageFile.saveIPFS()\r\n        const imageURI = imageFile.ipfs()\r\n\r\n        setAvatar(imageURI)\r\n        \r\n        setImageUploading(false)\r\n    } catch (error) {\r\n        setImageUploading(false)\r\n        alert('Error uploading imageURI: ', error)\r\n    }  \r\n    setImageUploading(false)\r\n  }\r\n\r\n  async function onUpdateProfile(){\r\n\r\n    const { username, email, company, marketplace } = formInput\r\n\r\n        if(username != null) user.set(\"username\", username)\r\n        if(email != null) user.set(\"email\", email)\r\n        if(company != null) user.set(\"company\", company)\r\n        if(avatar != null) user.set(\"avatarURL\", avatar)\r\n        if(marketplace != null) user.set(\"marketplace\", marketplace)\r\n        await user.save()\r\n        .then(() => {\r\n          alert(\"Update User Profile Successful!\")\r\n          setLoading(false)\r\n        }) \r\n        .catch(function(error) {\r\n        // There was an error.\r\n        alert(\"Fail to update User Profile #\" + account + \"\\n\" + JSON.stringify(error))\r\n        setLoading(false)\r\n      });\r\n\r\n  }\r\n\r\n  async function toggleEthUnits(){\r\n\r\n    const web3 = await Moralis.Web3.enableWeb3()  \r\n    const gas = await web3.eth.getGasPrice()\r\n    if (parseFloat(gas) < 1000) {\r\n      setGasFee(parseFloat(gas))\r\n      setUnit(\"Wei\")\r\n    }\r\n    else if (parseFloat(gas) >= 1000 && gas <= 1000000) {\r\n      setGasFee((parseFloat(gas)/1000).toFixed(6))\r\n      setUnit(\"KWei\")\r\n    }\r\n    else if (parseFloat(gas) >= 1000000 && gas <= 1000000000) {\r\n      setGasFee((parseFloat(gas)/1000000).toFixed(6))\r\n      setUnit(\"MWei\")\r\n    }\r\n    else if (parseFloat(gas) >= 1000 && gas <= 1000000000000) {\r\n      setGasFee((parseFloat(gas)/1000000000).toFixed(6))\r\n      setUnit(\"GWei\")\r\n    }\r\n    else if (parseFloat(gas) > 1000000000000) {\r\n      setGasFee(parseFloat(Moralis.Units.FromWei(gas, 18).toFixed(6)))\r\n      setUnit(nativeCrypto)\r\n    }\r\n      \r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <div onClick={() => setIsModalVisible(true)} className=\"popup\" style={{width: \"192px\", display: \"inline-block\", borderStyle:\"none\", borderRadius: \"10px 10px 10px 10px\",  marginTop: \"10px\",float: \"right\"}}> \r\n        \r\n        <div id=\"popupInfo\">\r\n        \r\n           <div className=\"popuptext\" style={{float:\"right\"}}>\r\n            <div style={{background:\"black\", borderRadius: \"6px 6px 0px 0px\", height: \"56px\", marginTop:\"-8px\"}}>\r\n              <img src={user.attributes.avatarURL? user.attributes.avatarURL : require('../img/hexic.png').default} alt='' style={{marginTop:\"0px\", marginLeft:\"10px\", height: \"48px\", width: \"48px\", borderRadius:\"50%\"}}></img>\r\n              <p style={{color:\"white\"}}>Crypto Wallet</p>\r\n            </div>\r\n            <div style={{textAlign:\"center\",  width:\"350px\"}}>\r\n              <p style={{fontSize: \"medium\", color:\"white\", wordWrap: \"break-word\", height:\"32px\"}}>Account</p>\r\n              <p style={{fontSize: \"medium\", color:\"white\", overflow: \"hidden\"}} id=\"accountId\">{getEllipsisTxt(account, 6)}</p>\r\n              <hr style={{width: \"198px\", marginLeft: \"auto\", marginRight: \"auto\"}}></hr>\r\n    \r\n              <div style={{display:\"inline-block\", textAlign:\"center\", marginTop:\"25px\"}}>\r\n                  <div style={{marginTop:\"-5px\", height:\"32px\", transform: \"scale(1.5)\"}}>{selected.icon}</div>\r\n                  <p style={{fontSize: \"medium\", color:\"white\", height:\"32px\"}}>{selected.value}</p>\r\n                  <div>\r\n                    <p style={{fontSize: \"medium\", color:\"white\", height:\"32px\"}}>Chain ID: <span id=\"chainId\">{chainId}</span></p>\r\n                    <p style={{fontSize: \"medium\", color:\"white\", height:\"32px\"}}>Gas Fee: </p>\r\n                    <span id=\"gasId\" style={{color:\"white\", height:\"32px\"}}>{gasFee} {unit}</span>\r\n                  </div>\r\n                </div>\r\n                <hr style={{width: \"198px\", marginLeft: \"auto\", marginRight: \"auto\"}}></hr>\r\n                <div style={{display:\"inline-block\", width:\"250px\"}}>\r\n                  <p style={{fontSize: \"medium\", color:\"white\", overflow: \"hidden\", textOverflow: \"ellipsis\", display:\"inline-block\", height:\"38px\"}}>Balance: </p>\r\n                  <p id=\"balanceInfo\"  style={{fontSize: \"medium\", color:\"white\", fontWeight:\"bold\", overflow: \"hidden\", textOverflow: \"ellipsis\", display:\"inline-block\", width:\"150px\", height:\"38px\"}}>\r\n                    {parseFloat(Moralis.Units.FromWei(balance.balance, 18).toFixed(6))} {nativeCrypto}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>  \r\n        <div id=\"connectToWallet\" style={{display:\"inline-block\", fontSize: \"small\", height:\"40px\", width: \"200px\", float: \"right\", \r\n            fontWeight: \"bold\", backgroundColor: \"rgb(207, 177, 8)\", borderStyle: \"hidden\", borderRadius: \"6px 6px 6px 6px\", color: \"black\", padding: \"2px\"}}>\r\n            \r\n            <img src={user.attributes.avatarURL? user.attributes.avatarURL : require('../img/metamask.svg').default} style={{borderStyle:\"none\", borderRadius:\"50%\", visibility:\"visible\", marginTop:\"-4px\", height: \"42px\", width: \"42px\"}}></img>\r\n            <div>\r\n              <div style={{marginTop:\"-20px\", marginRight:\"auto\", marginLeft:\"auto\"}}>{ user.attributes.email? user.attributes.username : getEllipsisTxt(account, 6)}</div>\r\n              <div style={{marginTop:\"-44px\"}}>Balance: {parseFloat(Moralis.Units.FromWei(balance.balance, 18).toFixed(3))} {nativeCrypto}</div>\r\n            </div>\r\n        </div>\r\n         \r\n      </div>\r\n      <Modal\r\n        visible={isModalVisible}\r\n        footer={null}\r\n        onCancel={() => setIsModalVisible(false)}\r\n        bodyStyle={{\r\n          padding: \"15px\",\r\n          fontSize: \"17px\",\r\n          fontWeight: \"500\",\r\n        }}\r\n        style={{ fontSize: \"16px\", fontWeight: \"500\" }}\r\n        width=\"400px\"\r\n      >\r\n        Account\r\n        <Card\r\n          style={{\r\n            marginTop: \"10px\",\r\n            borderRadius: \"1rem\",\r\n          }}\r\n          bodyStyle={{ padding: \"15px\" }}\r\n        >\r\n          <img src={user.attributes.avatarURL? user.attributes.avatarURL : require('../img/metamask.svg').default} style={{borderRadius:\"50%\", marginLeft:\"-14px\", height: \"64px\", width: \"64px\"}}></img>\r\n          {user.attributes.email? (   \r\n            <div style={{paddingLeft:\"64px\"}}>\r\n              <h1 style={{display:\"block\", textAlign:\"left\", fontSize:\"x-large\", color:\"gray\"}}>{user.attributes.username}</h1>\r\n              <h1 style={{display:\"block\", textAlign:\"left\", fontSize:\"large\", color:\"gray\"}}>{user.attributes.company}</h1>\r\n            </div>\r\n          ) : (\r\n            <Address size={6} copyable style={{ fontSize: \"10px\" }} />\r\n          )}\r\n          <div onClick={() => setIsProfileVisible(true)} style={{ cursor:\"pointer\", display:\"inline-block\", marginTop: \"10px\", padding: \"0 10px\" }} >\r\n            <SettingOutlined key=\"settings\" style={{ marginRight: \"5px\" }} />Settings\r\n          </div>\r\n          <div style={{ display:\"inline-block\", marginTop: \"10px\", float:\"right\", padding: \"0 10px\" }}>\r\n            <a href={`${getExplorer(chainId)}/address/${account}`} target=\"_blank\" rel=\"noreferrer\">\r\n              <SelectOutlined style={{ marginRight: \"5px\" }} />\r\n              View on Explorer\r\n            </a>\r\n          </div>\r\n        </Card>\r\n        <Button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          style={{\r\n            width: \"100%\",\r\n            marginTop: \"10px\",\r\n            borderRadius: \"0.5rem\",\r\n            fontSize: \"16px\",\r\n            fontWeight: \"500\",\r\n          }}\r\n          onClick={() => {\r\n            logout();\r\n            setIsModalVisible(false);\r\n          }}\r\n        >\r\n          Disconnect Wallet\r\n        </Button>\r\n      </Modal>\r\n\r\n      <Modal\r\n            title=\"Profile\"\r\n            visible={isProfileVisible}\r\n            onCancel={() => setIsProfileVisible(false)}\r\n            cancelText=\"Return\"\r\n            onOk={() => onUpdateProfile()}\r\n            okText=\"Submit\"\r\n            width={500}\r\n            bodyStyle={{\r\n              padding: \"15px\",\r\n              fontSize: \"17px\",\r\n              fontWeight: \"500\",\r\n            }}\r\n            style={{ fontSize: \"16px\", fontWeight: \"500\" }}\r\n            \r\n            footer={[\r\n              <Button type=\"primary\" onClick={() => onUpdateProfile()}>\r\n                Submit\r\n              </Button>,\r\n              <Button onClick={() => setIsProfileVisible(false)}>\r\n                Return\r\n              </Button>,\r\n            ]}\r\n          >\r\n          <Spin spinning={loading} size=\"large\" tip=\"In Progress...\">\r\n         <div style={{\r\n            marginRight:\"auto\",\r\n            marginLeft:\"auto\",\r\n            textAlign:\"center\"}}>\r\n            <img\r\n              src={avatar}\r\n              style={{\r\n                height: \"240px\",\r\n              width: \"240px\",\r\n              overflow: \"hidden\",\r\n              borderRadius: \"10px\",\r\n              marginTop: \"-15px\",\r\n              marginBottom: \"15px\",\r\n              marginLeft:\"25%\",\r\n              marginRight:\"auto\",\r\n              textAlign:\"center\"\r\n              }}\r\n            />\r\n            <Alert\r\n              message=\"Edit Profile\"\r\n              type=\"info\"\r\n              style={{\r\n                textAlign:\"center\",\r\n                width: \"400px\",\r\n                margin: \"auto\",\r\n                borderRadius: \"10px\",\r\n                marginBottom: \"15px\",\r\n            }}/>\r\n            <div style={{opacity:\"0.7\"}}>\r\n              <input \r\n                  id=\"username\"\r\n                  placeholder=\"Username\"\r\n                  className=\"\"\r\n                  type=\"text\"\r\n                  style={{width:\"400px\", marginTop:\"10px\"}}\r\n                  onChange={e => updateFormInput({ ...formInput, username: e.target.value })}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                  id=\"email\"\r\n                  placeholder=\"e-Mail\"\r\n                  className=\"\"\r\n                  type=\"text\"\r\n                  style={{width:\"400px\", marginTop:\"10px\"}}\r\n                  onChange={e => updateFormInput({ ...formInput, email: e.target.value })}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                  id=\"company\"\r\n                  placeholder=\"Company\"\r\n                  type=\"text\"\r\n                  style={{width:\"400px\", marginTop:\"10px\"}}\r\n                  onChange={e => updateFormInput({ ...formInput, company: e.target.value })}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                  id=\"marketplace\"\r\n                  placeholder=\"Market Address\"\r\n                  type=\"text\"\r\n                  style={{width:\"400px\", marginTop:\"10px\"}}\r\n                  onChange={e => updateFormInput({ ...formInput, marketplace: e.target.value })}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                  id=\"avatarPic\"\r\n                  style={{display:\"none\"}}\r\n                  type=\"file\"\r\n                  name=\"avatar\"\r\n                  className=\"\"\r\n                  accept=\"image/*\"\r\n                  onChange={onAvatarChange}\r\n              />\r\n            </div>\r\n            <div htmlFor=\"avatarPic\" style={{width:\"400px\", zIndex:\"2\", marginLeft:\"auto\", marginRight:\"auto\", marginTop:\"10px\", textAlign:\"center\"}} >\r\n                <Spin spinning={imageUploading} size=\"large\" tip=\"Uploading...\">\r\n                    <button id=\"avatarSelect\" htmlFor=\"avatarPic\" style={{margin:\"10px 0px\"}}>\r\n                        <label htmlFor=\"avatarPic\" style={{zIndex:\"1\", cursor:\"pointer\", width:\"400px\", height:\"28px\"}}>Select Avatar</label>\r\n                    </button>\r\n                </Spin>\r\n            </div>\r\n          </div>\r\n        </Spin>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Account;\r\n","export const AvaxLogo = () => (\r\n  <svg width=\"25\" height=\"25\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M0 10C0 4.47715 4.47715 0 10 0H20C25.5228 0 30 4.47715 30 10V20C30 25.5228 25.5228 30 20 30H10C4.47715 30 0 25.5228 0 20V10Z\"\r\n      fill=\"#E84142\"\r\n    />\r\n    <path\r\n      d=\"M20.2914 15.3898C20.8111 14.4921 21.6497 14.4921 22.1693 15.3898L25.4056 21.0709C25.9252 21.9685 25.5 22.7008 24.4607 22.7008H17.941C16.9134 22.7008 16.4882 21.9685 16.9961 21.0709L20.2914 15.3898ZM14.0315 4.45277C14.5512 3.55513 15.378 3.55513 15.8977 4.45277L16.6182 5.75198L18.3189 8.74017C18.7323 9.59056 18.7323 10.5945 18.3189 11.4449L12.6142 21.3307C12.0945 22.1339 11.2323 22.6417 10.2756 22.7008H5.53942C4.50005 22.7008 4.07485 21.9803 4.59454 21.0709L14.0315 4.45277Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const BSCLogo = () => (\r\n  <svg width=\"25\" height=\"25\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M0 10C0 4.47715 4.47715 0 10 0H20C25.5228 0 30 4.47715 30 10V20C30 25.5228 25.5228 30 20 30H10C4.47715 30 0 25.5228 0 20V10Z\"\r\n      fill=\"#F3BA2F\"\r\n    />\r\n    <path\r\n      d=\"M11.3588 13.5038L15 9.8625L18.6431 13.5056L20.7619 11.3869L15 5.625L9.24 11.385L11.3588 13.5038ZM5.625 15L7.74375 12.8812L9.8625 15L7.74375 17.1188L5.625 15ZM11.3588 16.4963L15 20.1375L18.6431 16.4944L20.7619 18.6122L15 24.375L9.24 18.615L9.23719 18.6122L11.3588 16.4963ZM20.1375 15L22.2563 12.8812L24.375 15L22.2563 17.1188L20.1375 15ZM17.1488 14.9981H17.1506V15L15 17.1506L12.8522 15.0037L12.8484 15L12.8522 14.9972L13.2281 14.6203L13.4109 14.4375L15 12.8494L17.1497 14.9991L17.1488 14.9981Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const ETHLogo = () => (\r\n  <svg width=\"25\" height=\"25\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M0 10C0 4.47715 4.47715 0 10 0H20C25.5228 0 30 4.47715 30 10V20C30 25.5228 25.5228 30 20 30H10C4.47715 30 0 25.5228 0 20V10Z\"\r\n      fill=\"#627EEA\"\r\n    />\r\n    <path\r\n      d=\"M15.0294 3.75V12.0656L22.0578 15.2062L15.0294 3.75Z\"\r\n      fill=\"white\"\r\n      fillOpacity=\"0.602\"\r\n    />\r\n    <path d=\"M15.0294 3.75L8 15.2062L15.0294 12.0656V3.75Z\" fill=\"white\" />\r\n    <path\r\n      d=\"M15.0294 20.595V26.2453L22.0625 16.515L15.0294 20.595Z\"\r\n      fill=\"white\"\r\n      fillOpacity=\"0.602\"\r\n    />\r\n    <path d=\"M15.0294 26.2453V20.594L8 16.515L15.0294 26.2453Z\" fill=\"white\" />\r\n    <path\r\n      d=\"M15.0294 19.2872L22.0578 15.2063L15.0294 12.0675V19.2872Z\"\r\n      fill=\"white\"\r\n      fillOpacity=\"0.2\"\r\n    />\r\n    <path d=\"M8 15.2063L15.0294 19.2872V12.0675L8 15.2063Z\" fill=\"white\" fillOpacity=\"0.602\" />\r\n  </svg>\r\n);\r\n\r\nexport const PolygonLogo = () => (\r\n  <svg width=\"25\" height=\"25\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M0 10C0 4.47715 4.47715 0 10 0H20C25.5228 0 30 4.47715 30 10V20C30 25.5228 25.5228 30 20 30H10C4.47715 30 0 25.5228 0 20V10Z\"\r\n      fill=\"#8247E5\"\r\n    />\r\n    <path\r\n      d=\"M20.4896 11.5015C20.1157 11.2878 19.635 11.2878 19.2077 11.5015L16.2166 13.2641L14.1869 14.3858L11.2493 16.1484C10.8754 16.362 10.3947 16.362 9.96736 16.1484L7.67062 14.7596C7.29674 14.546 7.02967 14.1187 7.02967 13.638V10.9674C7.02967 10.5401 7.24332 10.1128 7.67062 9.8457L9.96736 8.51039C10.3412 8.29674 10.822 8.29674 11.2493 8.51039L13.546 9.89911C13.9199 10.1128 14.1869 10.5401 14.1869 11.0208V12.7834L16.2166 11.6083V9.79228C16.2166 9.36499 16.003 8.93769 15.5757 8.67062L11.3027 6.16024C10.9288 5.94659 10.4481 5.94659 10.0208 6.16024L5.64095 8.72404C5.21365 8.93769 5 9.36499 5 9.79228V14.8131C5 15.2404 5.21365 15.6677 5.64095 15.9347L9.96736 18.4451C10.3412 18.6588 10.822 18.6588 11.2493 18.4451L14.1869 16.7359L16.2166 15.5608L19.1543 13.8516C19.5282 13.638 20.0089 13.638 20.4362 13.8516L22.7329 15.1869C23.1068 15.4006 23.3739 15.8279 23.3739 16.3086V18.9792C23.3739 19.4065 23.1602 19.8338 22.7329 20.1009L20.4896 21.4362C20.1157 21.6499 19.635 21.6499 19.2077 21.4362L16.911 20.1009C16.5371 19.8872 16.27 19.4599 16.27 18.9792V17.27L14.2404 18.4451V20.2077C14.2404 20.635 14.454 21.0623 14.8813 21.3294L19.2077 23.8398C19.5816 24.0534 20.0623 24.0534 20.4896 23.8398L24.816 21.3294C25.1899 21.1157 25.457 20.6884 25.457 20.2077V15.1335C25.457 14.7062 25.2433 14.2789 24.816 14.0119L20.4896 11.5015Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const PolygonCurrency = () => (\r\n  <svg width=\"18\" height=\"18\" viewBox=\"0 -16 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path\r\n        d=\"M29,10.2c-0.7-0.4-1.6-0.4-2.4,0L21,13.5l-3.8,2.1l-5.5,3.3c-0.7,0.4-1.6,0.4-2.4,0L5,16.3\r\n        c-0.7-0.4-1.2-1.2-1.2-2.1v-5c0-0.8,0.4-1.6,1.2-2.1l4.3-2.5c0.7-0.4,1.6-0.4,2.4,0L16,7.2c0.7,0.4,1.2,1.2,1.2,2.1v3.3l3.8-2.2V7\r\n        c0-0.8-0.4-1.6-1.2-2.1l-8-4.7c-0.7-0.4-1.6-0.4-2.4,0L1.2,5C0.4,5.4,0,6.2,0,7v9.4c0,0.8,0.4,1.6,1.2,2.1l8.1,4.7\r\n        c0.7,0.4,1.6,0.4,2.4,0l5.5-3.2l3.8-2.2l5.5-3.2c0.7-0.4,1.6-0.4,2.4,0l4.3,2.5c0.7,0.4,1.2,1.2,1.2,2.1v5c0,0.8-0.4,1.6-1.2,2.1\r\n        L29,28.8c-0.7,0.4-1.6,0.4-2.4,0l-4.3-2.5c-0.7-0.4-1.2-1.2-1.2-2.1V21l-3.8,2.2v3.3c0,0.8,0.4,1.6,1.2,2.1l8.1,4.7\r\n        c0.7,0.4,1.6,0.4,2.4,0l8.1-4.7c0.7-0.4,1.2-1.2,1.2-2.1V17c0-0.8-0.4-1.6-1.2-2.1L29,10.2z\"\r\n        fill=\"#8247E5\"\r\n      />\r\n    </svg>\r\n  )","import { useEffect, useState } from \"react\";\r\nimport { Menu, Dropdown, Button } from \"antd\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport { AvaxLogo, PolygonLogo, BSCLogo, ETHLogo } from \"./Logos\";\r\nimport { useChain } from \"react-moralis\";\r\n\r\nconst styles = {\r\n  item: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"42px\",\r\n    fontWeight: \"500\",\r\n    fontFamily: \"Roboto, sans-serif\",\r\n    fontSize: \"14px\",\r\n    padding: \"0 10px\", \r\n    background: \"black\",\r\n    color: \"white\"\r\n  },\r\n  button: {\r\n    border: \"0px solid rgb(231, 234, 243)\",\r\n    borderRadius: \"12px\",\r\n  },\r\n};\r\n\r\nconst menuItems = [\r\n  {\r\n    key: \"0x1\",\r\n    value: \"Ethereum\",\r\n    icon: <ETHLogo />,\r\n  },\r\n  {\r\n    key: \"0xa86a\",\r\n    value: \"Avalanche\",\r\n    icon: <AvaxLogo />,\r\n  },\r\n  {\r\n    key: \"0xa869\",\r\n    value: \"Fuji\",\r\n    icon: <AvaxLogo />,\r\n  },\r\n];\r\n\r\nfunction Chains() {\r\n  const { switchNetwork, chainId, chain } = useChain();\r\n  const [selected, setSelected] = useState({});\r\n\r\n  console.log(\"chain\", chain)\r\n\r\n  useEffect(() => {\r\n    if (!chainId) return null;\r\n    const newSelected = menuItems.find((item) => item.key === chainId);\r\n    setSelected(newSelected);\r\n    console.log(\"current chainId: \", chainId);\r\n  }, [chainId]);\r\n\r\n  const handleMenuClick = (e) => {\r\n    console.log(\"switch to: \", e.key);\r\n    switchNetwork(e.key);\r\n  };\r\n\r\n  const menu = (\r\n    <Menu onClick={handleMenuClick}>\r\n      {menuItems.map((item) => (\r\n        <Menu.Item key={item.key} icon={item.icon} style={styles.item}>\r\n          <span style={{ marginLeft: \"5px\" }}>{item.value}</span>\r\n        </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Dropdown overlay={menu} trigger={[\"click\"]}>\r\n        <Button key={selected?.key} icon={selected?.icon} style={{ ...styles.button, ...styles.item}}>\r\n          <span style={{ marginLeft: \"5px\", background: \"black\", color: \"white\" }}>{selected?.value}</span>\r\n          <DownOutlined style={{ color: \"white\" }}/>\r\n        </Button>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chains;\r\n","export const networkCollections = {\r\n    \"0xa869\": [\r\n      //Add Your Collections here\r\n      {\r\n        image:\"https://ipfs.moralis.io:2053/ipfs/QmZVPUNgTDNBwedcvGrKMxfGboehHc6DJuJsGPVbD9RkJf\",\r\n        name: \"Avalanche Cafe\",\r\n        addr: \"0x5BC74C1e1A0068Adaf75FaBC02198Cc87b038bF1\",\r\n        type: \"Cafe\",\r\n      },\r\n      {\r\n        image:\"https://ipfs.moralis.io:2053/ipfs/Qmf2xh5dW7ATJNPX6rTp4ZsRMp7SrRM4X7aBnTQE2i3iAt\",\r\n        name: \"Pangea\",\r\n        addr: \"0x5BC74C1e1A0068Adaf75FaBC02198Cc87b038bF1\",\r\n        //\"0xE22f0924EFBae0E31ff949Ea082A696101049D57\",\r\n        type: \"Honeycomb\",\r\n      },\r\n    ],\r\n\r\n    \"0x13881\": [\r\n      //Add Your Collections here\r\n      {\r\n        image:\r\n          \"https://lh3.googleusercontent.com/BWCni9INm--eqCK800BbRkL10zGyflxfPwTHt4XphMSWG3XZvPx1JyGdfU9vSor8K046DJg-Q8Y4ioUlWHiCZqgR_L00w4vcbA-w=s0\",\r\n        name: \"Test Mages\",\r\n        addr: \"0x275d553f426355c20b134D944B5b28D31CDb83DA\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://ipfs.moralis.io:2053/ipfs/QmfLbpeVHxReWKNLaXTPcWiafi49eoAL4gRwMGuXtx2Eqe/images/14.png\",\r\n        name: \"Pixel Show\",\r\n        addr: \"0xCA34404dD8Bd6537BE76F3A51B379F8949bD7973\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://lh3.googleusercontent.com/Ju9CkWtV-1Okvf45wo8UctR-M9He2PjILP0oOvxE89AyiPPGtrR3gysu1Zgy0hjd2xKIgjJJtWIc0ybj4Vd7wv8t3pxDGHoJBzDB=s130\",\r\n        name: \"Pangea\",\r\n        addr: \"0xcd72d5b0B152b05B540c7AcDBd14A2dE191Db259\",\r\n      },\r\n    ],\r\n  \r\n    \"0x1\": [\r\n      {\r\n        image:\r\n          \"https://lh3.googleusercontent.com/Ju9CkWtV-1Okvf45wo8UctR-M9He2PjILP0oOvxE89AyiPPGtrR3gysu1Zgy0hjd2xKIgjJJtWIc0ybj4Vd7wv8t3pxDGHoJBzDB=s130\",\r\n        name: \"Bored Ape Yacht Club\",\r\n        addr: \"0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://lh3.googleusercontent.com/BdxvLseXcfl57BiuQcQYdJ64v-aI8din7WPk0Pgo3qQFhAUH-B6i-dCqqc_mCkRIzULmwzwecnohLhrcH8A9mpWIZqA7ygc52Sr81hE=s130\",\r\n        name: \"Crypto Punks\",\r\n        addr: \"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://lh3.googleusercontent.com/l1wZXP2hHFUQ3turU5VQ9PpgVVasyQ79-ChvCgjoU5xKkBA50OGoJqKZeMOR-qLrzqwIfd1HpYmiv23JWm0EZ14owiPYaufqzmj1=s0\",\r\n        name: \"Bored Ape Kennel Club\",\r\n        addr: \"0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://lh3.googleusercontent.com/7B0qai02OdHA8P_EOVK672qUliyjQdQDGNrACxs7WnTgZAkJa_wWURnIFKeOh5VTf8cfTqW3wQpozGedaC9mteKphEOtztls02RlWQ=s0\",\r\n        name: \"Doodles\",\r\n        addr: \"0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://lh3.googleusercontent.com/7gOej3SUvqALR-qkqL_ApAt97SpUKQOZQe88p8jPjeiDDcqITesbAdsLcWlsIg8oh7SRrTpUPfPlm12lb4xDahgP2h32pQQYCsuOM_s=s0\",\r\n        name: \"0N1 Force\",\r\n        addr: \"0x3bf2922f4520a8BA0c2eFC3D2a1539678DaD5e9D\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://lh3.googleusercontent.com/lHexKRMpw-aoSyB1WdFBff5yfANLReFxHzt1DOj_sg7mS14yARpuvYcUtsyyx-Nkpk6WTcUPFoG53VnLJezYi8hAs0OxNZwlw6Y-dmI=s0\",\r\n        name: \"Mutant Ape Yacht Club\",\r\n        addr: \"0x60E4d786628Fea6478F785A6d7e704777c86a7c6\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://lh3.googleusercontent.com/LIpf9z6Ux8uxn69auBME9FCTXpXqSYFo8ZLO1GaM8T7S3hiKScHaClXe0ZdhTv5br6FE2g5i-J5SobhKFsYfe6CIMCv-UfnrlYFWOM4=s0\",\r\n        name: \"CyberKongz\",\r\n        addr: \"0x57a204AA1042f6E66DD7730813f4024114d74f37\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://lh3.googleusercontent.com/LIov33kogXOK4XZd2ESj29sqm_Hww5JSdO7AFn5wjt8xgnJJ0UpNV9yITqxra3s_LMEW1AnnrgOVB_hDpjJRA1uF4skI5Sdi_9rULi8=s0\",\r\n        name: \"Cool Cats NFT\",\r\n        addr: \"0x1A92f7381B9F03921564a437210bB9396471050C\",\r\n      },\r\n    ],\r\n  };\r\n  \r\n  export const getCollectionsByChain = (chain) => networkCollections[chain];","import React, { useState, useEffect } from \"react\";\r\nimport { useMoralis, useMoralisQuery } from \"react-moralis\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { AvaxLogo, PolygonLogo, BSCLogo, ETHLogo } from \"../LogosGlobal\";\r\nimport { getCollectionsByChain } from \"helpers/collections\";\r\n\r\nconst netIcons = [\r\n    {\r\n      key: \"0x1\",\r\n      value: \"Ethereum\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x539\",\r\n      value: \"Local Chain\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x3\",\r\n      value: \"Ropsten Testnet\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x4\",\r\n      value: \"Rinkeby Testnet\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x2a\",\r\n      value: \"Kovan Testnet\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x5\",\r\n      value: \"Goerli Testnet\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x38\",\r\n      value: \"Binance\",\r\n      icon: <BSCLogo />,\r\n    },\r\n    {\r\n      key: \"0x61\",\r\n      value: \"Smart Chain Testnet\",\r\n      icon: <BSCLogo />,\r\n    },\r\n    {\r\n      key: \"0x89\",\r\n      value: \"Polygon\",\r\n      icon: <PolygonLogo />,\r\n    },\r\n    {\r\n      key: \"0x13881\",\r\n      value: \"Mumbai\",\r\n      icon: <PolygonLogo />,\r\n    },\r\n    {\r\n      key: \"0xa86a\",\r\n      value: \"Avalanche\",\r\n      icon: <AvaxLogo />,\r\n    },\r\n    {\r\n      key: \"0xa869\",\r\n      value: \"Fuji\",\r\n      icon: <AvaxLogo />,\r\n    },\r\n  ];\r\n  \r\nconst styles = {\r\n  table: {\r\n    margin: \"0 auto\",\r\n    width: \"1000px\",\r\n  },\r\n};\r\n\r\nfunction MyAccount() {\r\n    const { Moralis, chainId, account } = useMoralis();\r\n    const NFTCollectionsList = getCollectionsByChain(chainId)\r\n    const [iconSelected, setIconSelected] = useState(netIcons[10]);\r\n    const queryItemImages = useMoralisQuery(\"ItemImages\");\r\n    const fetchItemImages = JSON.parse(\r\n      JSON.stringify(queryItemImages.data, [\r\n        \"nftContract\",\r\n        \"tokenId\",\r\n        \"name\",\r\n        \"image\",\r\n      ])\r\n    );\r\n    const queryMarketItems = useMoralisQuery(\"Assets\");\r\n    const fetchMarketItems = JSON.parse(\r\n      JSON.stringify(queryMarketItems.data, [\r\n        \"updatedAt\",\r\n        \"price\",\r\n        \"nftContract\",\r\n        \"address\",\r\n        \"itemId\",\r\n        \"sold\",\r\n        \"tokenId\",\r\n        \"seller\",\r\n        \"owner\",\r\n      ])\r\n    )\r\n      .filter(\r\n        (item) => item.seller === account || item.owner === account\r\n      )\r\n      .sort((a, b) =>\r\n        a.updatedAt < b.updatedAt ? 1 : b.updatedAt < a.updatedAt ? -1 : 0\r\n      );\r\n  \r\n    useEffect(() => {\r\n    if (!chainId) return netIcons[11];\r\n    const newSelected = netIcons.find((item) => item.key === chainId);\r\n    setIconSelected(newSelected);\r\n    }, [chainId]);\r\n    \r\n    function getImage(addrs, id) {\r\n\r\n        var doc = document.getElementById(\"doc\")\r\n        const element = NFTCollectionsList.find(\r\n            function (e) {\r\n                if( e.addr.toLowerCase() == addrs){\r\n                    return e\r\n                }\r\n            }\r\n        )\r\n        return element?.image;\r\n    }\r\n  \r\n    function getName(addrs, id) {\r\n\r\n        const element = NFTCollectionsList.find(\r\n            (e) => {\r\n                if( e.addr.toLowerCase() == addrs){\r\n                    return e\r\n                }\r\n            }\r\n        )\r\n        return element?.name;\r\n    }\r\n  \r\n    const columns = [\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n      },\r\n      {\r\n        title: \"Token ID\",\r\n        key: \"tokenId\",\r\n        render: (text, record) => (\r\n          <Space size=\"middle\">\r\n            <span>#{record.tokenId}</span>\r\n          </Space>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Collection\",\r\n        key: \"collection\",\r\n        render: (text, record) => (\r\n          <Space size=\"middle\">\r\n            <img src={getImage(record.collection, record.tokenId)} style={{ width: \"30px\", height:\"30px\", borderRadius:\"4px\"}} />\r\n            <span>{getName(record.collection, record.tokenId)}</span>\r\n          </Space>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Transaction Status\",\r\n        key: \"tags\",\r\n        dataIndex: \"tags\",\r\n        render: (tags) => (\r\n          <>\r\n            {tags.map((tag) => {\r\n                let color = \"purple\" //\"volcano\"\r\n                let status = \"WAITING\"\r\n                if (String(tag).startsWith(\"seller\")) \r\n                    {\r\n                    if (String(tag).startsWith(\"seller\" + \"true\")) {\r\n                        color = \"green\"\r\n                        status = \"SOLD\"\r\n                    }\r\n                    else if (String(tag).startsWith(\"seller\" + \"false\")) {\r\n                        color = \"volcano\"\r\n                        status = \"WAITING\"\r\n                    }           \r\n                }\r\n                else if (String(tag).startsWith(\"owner\")) \r\n                    {\r\n                    if (tag == \"owner\" + \"true\" + account) {\r\n                        color = \"geekblue\"\r\n                        status = \"OWNED\"\r\n                    }\r\n                    else if (String(tag).startsWith(\"owner\" + \"false\")) {\r\n                        color = \"purple\"\r\n                        status = \"BUY\"\r\n                    }\r\n                    else if (String(tag).startsWith(\"owner\" + \"true\")) {\r\n                        color = \"grey\"\r\n                        status = \"N/A\"\r\n                    }\r\n                }\r\n      \r\n                return (\r\n                <Tag color={color} key={tag}>\r\n                  {status.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Price\",\r\n        key: \"price\",\r\n        dataIndex: \"price\",\r\n        render: (e) => (\r\n          <Space size=\"small\">\r\n            {iconSelected.icon}\r\n            <span>{e}</span>\r\n          </Space>\r\n        ),\r\n      }\r\n    ];\r\n  \r\n    const data = fetchMarketItems?.map((item, index) => ({\r\n      key: index,\r\n      date: moment(item.updatedAt).format(\"DD-MM-YYYY HH:mm\"),\r\n      token: item.nftContract,\r\n      collection: item.address,\r\n      tokenId: item.tokenId,\r\n      tags: [\r\n        \"owner\"+ item.sold + item.owner, \r\n        \"seller\"+ item.sold + item.seller, \r\n        //item.sold\r\n        ],\r\n      price: item.price / (\"1e\" + 18)\r\n    }));\r\n  \r\n    return (\r\n      <>\r\n      <div style={{zIndex:\"1\", marginTop:\"-50px\"}}>\r\n        <div style={{width:\"100%\"}}> \r\n            <h1 style={{fontSize:\"x-large\", color:\"gray\"}}>&#x1F6D2;💸Transactions</h1>\r\n        </div>\r\n        <div style={styles.table}>\r\n          <Table columns={columns} dataSource={data} style={{opacity:\"0.7\"}}/>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default MyAccount;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useMoralis, useMoralisQuery } from \"react-moralis\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { AvaxLogo, PolygonLogo, BSCLogo, ETHLogo } from \"../LogosGlobal\";\r\nimport { getCollectionsByChain } from \"helpers/collections\";\r\n\r\nconst netIcons = [\r\n    {\r\n      key: \"0x1\",\r\n      value: \"Ethereum\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x539\",\r\n      value: \"Local Chain\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x3\",\r\n      value: \"Ropsten Testnet\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x4\",\r\n      value: \"Rinkeby Testnet\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x2a\",\r\n      value: \"Kovan Testnet\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x5\",\r\n      value: \"Goerli Testnet\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x38\",\r\n      value: \"Binance\",\r\n      icon: <BSCLogo />,\r\n    },\r\n    {\r\n      key: \"0x61\",\r\n      value: \"Smart Chain Testnet\",\r\n      icon: <BSCLogo />,\r\n    },\r\n    {\r\n      key: \"0x89\",\r\n      value: \"Polygon\",\r\n      icon: <PolygonLogo />,\r\n    },\r\n    {\r\n      key: \"0x13881\",\r\n      value: \"Mumbai\",\r\n      icon: <PolygonLogo />,\r\n    },\r\n    {\r\n      key: \"0xa86a\",\r\n      value: \"Avalanche\",\r\n      icon: <AvaxLogo />,\r\n    },\r\n    {\r\n      key: \"0xa869\",\r\n      value: \"Fuji\",\r\n      icon: <AvaxLogo />,\r\n    },\r\n  ];\r\n  \r\nconst styles = {\r\n  table: {\r\n    margin: \"0 auto\",\r\n    width: \"1000px\",\r\n  },\r\n};\r\n\r\nfunction MyOrders() {\r\n\r\n    const { chainId, account } = useMoralis();\r\n    const NFTCollectionsList = getCollectionsByChain(chainId)\r\n    const [iconSelected, setIconSelected] = useState(netIcons[10]);\r\n    \r\n    const queryOrders = useMoralisQuery(\"Orders\");\r\n    const fetchOrders = JSON.parse(\r\n      JSON.stringify(queryOrders.data, [\r\n        \"updatedAt\",\r\n        \"price\",\r\n        \"nftContract\",\r\n        \"marketplace\",\r\n        \"company\",\r\n        \"tokenId\",\r\n        \"tokenURI\",\r\n        \"target\",\r\n        \"status\",\r\n      ])\r\n    )\r\n      .filter(\r\n        (item) => item.target === account\r\n      )\r\n      .sort((a, b) =>\r\n        a.updatedAt < b.updatedAt ? 1 : b.updatedAt < a.updatedAt ? -1 : 0\r\n      );\r\n  \r\n    useEffect(() => {\r\n    if (!chainId) return netIcons[11];\r\n    const newSelected = netIcons.find((item) => item.key === chainId);\r\n    setIconSelected(newSelected);\r\n    }, [chainId]);\r\n    \r\n    function getImage(addrs, id) {\r\n\r\n        const element = NFTCollectionsList.find(\r\n            function (e) {\r\n                if( e.addr.toLowerCase() === addrs.toLowerCase()){\r\n                    return e\r\n                }\r\n            }\r\n        )\r\n        return element?.image;\r\n    }\r\n  \r\n    function getCollection(addrs, id) {\r\n    \r\n        const element = NFTCollectionsList.find(\r\n            (e) => {\r\n                if( e.addr.toLowerCase() === addrs.toLowerCase()){\r\n                    return e\r\n                }\r\n            }\r\n        )\r\n        return element?.name;\r\n    }\r\n  \r\n    function getAssetName(addrs, id) {\r\n      var metaData = JSON.parse(Get(addrs))\r\n      return metaData?.name;\r\n    }\r\n\r\n    function getAssetImage(addrs, id) {\r\n      var metaData = JSON.parse(Get(addrs))\r\n      return metaData?.image;\r\n    }\r\n    \r\n    function Get(yourUrl){\r\n      var Httpreq = new XMLHttpRequest(); // a new request\r\n      Httpreq.open(\"GET\",yourUrl,false);\r\n      Httpreq.send(null);\r\n      return Httpreq.responseText;          \r\n    }\r\n\r\n    const columns = [\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n      },\r\n      {\r\n        title: \"Token ID\",\r\n        key: \"tokenId\",\r\n        render: (text, record) => (\r\n          <Space size=\"middle\">\r\n            <span>#{record.tokenId}</span>\r\n          </Space>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Asset\",\r\n        key: \"asset\",\r\n        render: (text, record) => (\r\n          <Space size=\"middle\">\r\n            <img src={getAssetImage(record.tokenURI, record.tokenId)} alt=\"\" style={{ width: \"30px\", height:\"30px\", borderRadius:\"4px\"}} />\r\n            <span>{getAssetName(record.tokenURI, record.tokenId)}</span>\r\n          </Space>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Collection\",\r\n        key: \"collection\",\r\n        render: (text, record) => (\r\n          <Space size=\"middle\">\r\n            <img src={getImage(record.collection, record.tokenId)} alt=\"\" style={{ width: \"30px\", height:\"30px\", borderRadius:\"4px\"}} />\r\n            <span>{getCollection(record.collection, record.tokenId)}</span>\r\n          </Space>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Transaction Status\",\r\n        key: \"status\",\r\n        render: (text, record) => (\r\n          <Tag color={record.status === \"Pending\"? \"magenta\" \r\n              : record.status === \"Published\"? \"volcano\"\r\n              : record.status === \"In-Progress\"? \"purple\"\r\n              : record.status === \"Completed\"? \"black\"\r\n              : record.status === \"Rejected\"? \"grey\" : \"grey\"}>\r\n            <span>{record.status.toUpperCase()}</span>\r\n          </Tag>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Price\",\r\n        key: \"price\",\r\n        dataIndex: \"price\",\r\n        render: (e) => (\r\n          <Space size=\"small\">\r\n            {iconSelected.icon}\r\n            <span>{e}</span>\r\n          </Space>\r\n        ),\r\n      }\r\n    ];\r\n  \r\n    const data = fetchOrders?.map((item, index) => ({\r\n      key: index,\r\n      date: moment(item.updatedAt).format(\"DD-MM-YYYY HH:mm\"),\r\n      token: item.nftContract,\r\n      tokenURI: item.tokenURI,\r\n      collection: item.marketplace,\r\n      tokenId: item.tokenId,\r\n      status: item.status,\r\n      price: item.price / (\"1e\" + 18)\r\n    }));\r\n  \r\n    return (\r\n      <>\r\n      <div style={{zIndex:\"1\", marginTop:\"-50px\"}}>\r\n        <div style={{width:\"100%\"}}> \r\n            <h1 style={{fontSize:\"x-large\", color:\"gray\"}}>&#x1F6D2;Orders</h1>\r\n        </div>\r\n        <div style={styles.table}>\r\n          <Table columns={columns} dataSource={data} style={{opacity:\"0.7\"}}/>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default MyOrders;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\r\nimport { Alert, Badge, Modal, Input } from \"antd\";\r\nimport { getNativeByChain } from \"helpers/networks\";\r\nimport { getEllipsisTxt, getEllipsisNormal } from \"helpers/formatters\";\r\n\r\n\r\n// import NFT_ABI from \"contracts/abi/NFT_ABI.json\"\r\nimport MARKET_ABI from  \"contracts/abi/MARKET_ABI.json\"\r\n\r\nconst MARKETPLACE_ADDR = process.env.REACT_APP_PANGEA_MARKETPLACE_ADDR\r\n// const NFT_TOKEN_ADDR = process.env.REACT_APP_PANGEA_TOKEN_ADDR;\r\n\r\n\r\nconst styles = {\r\n  NFTs: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    WebkitBoxPack: \"start\",\r\n    justifyContent: \"flex-start\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"1000px\",\r\n    width: \"100%\",\r\n    gap: \"10px\",\r\n  },\r\n};\r\n\r\nconst MetaInfo = ({nftMeta, cryptoSymbol, utcTimeStamp}) => (\r\n  <div style={{width:\"450px\"}}>  \r\n    <pre id=\"metaSeller\" style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", overflow: \"hidden\", textOverflow: \"ellipsis\"}}><b>Company     : </b>{JSON.parse(nftMeta.metadata)?.company? JSON.parse(nftMeta.metadata)?.company : nftMeta.name}</pre>\r\n    <pre id=\"metaSeller\" style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", overflow: \"hidden\", textOverflow: \"ellipsis\"}}><b>Account ID  : </b>{getEllipsisTxt(nftMeta.owner_of, 8)}</pre>\r\n    <pre id=\"metaPrice\"  style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\"}}><b>Token Addr  : </b>{getEllipsisTxt(nftMeta.token_address, 8)}</pre>\r\n    <pre id=\"metaTime\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", whiteSpace:\"pre-wrap\"}}><b>Timestamp   : </b>{utcTimeStamp}</pre>\r\n    <pre id=\"metaTime\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\"}}><b>Token ID    : </b>{nftMeta.token_id}</pre>\r\n    <pre id=\"metaDesc\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", whiteSpace:\"pre-wrap\"}}><b>Description : </b>{\"JSON.parse(nftMeta.metadata)?.description\"}</pre>\r\n    <pre id=\"metaData\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", whiteSpace:\"pre-wrap\"}}><b>Meta:</b></pre>\r\n    <pre id=\"metaData\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"96px\", marginTop:\"-10px\", textAlign:\"left\", whiteSpace:\"pre-wrap\"}}>{JSON.stringify(nftMeta)}</pre>\r\n  </div>\r\n)\r\n\r\nfunction NFTCollections() {\r\n  const [NFTCollections, setNFTCollections] = useState();\r\n  const { Moralis, chainId, account } = useMoralis();\r\n  const [visible, setVisibility] = useState(false);\r\n  const [nftToSell, setNftToSell] = useState(null);\r\n  \r\n  const [nftImage, setNftImage] = useState('');\r\n  const [utcTimeStamp, setUtcTimeStamp] = useState(null);\r\n  const [price, setPrice] = useState();\r\n  const contractProcessor = useWeb3ExecuteFunction()\r\n  const nativeCrypto = getNativeByChain(chainId)\r\n  const [contractABI, setContractABI] = useState(JSON.stringify(MARKET_ABI));\r\n  const contractABIJson = JSON.parse(contractABI)\r\n  const listItemFunction = \"createMarketItem\"\r\n\r\n  useEffect(() => {\r\n    // Moralis.start({ SERVER_URL, APP_ID });\r\n    getNftCollections()\r\n  }, [chainId, account])\r\n\r\n\r\n  async function List(nft, currentPrice){\r\n\r\n    const price = currentPrice * (\"1e\" + 18)\r\n    const options = {\r\n      contractAddress: MARKETPLACE_ADDR,\r\n      functionName: listItemFunction,\r\n      abi: contractABIJson,\r\n      params: {\r\n        nftContract: nft.token_address,\r\n        tokenId: nft.token_id,\r\n        price: String(price)\r\n      }\r\n    }\r\n    await contractProcessor.fetch({\r\n      params: options,\r\n      onSuccess: () => {\r\n        alert(\"Item Listed\")\r\n      },\r\n      onError: (error) => {\r\n        alert(\"something went wrong...\\n\" + error + \"\\n\")\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleSellClick = (nft, img) => {\r\n    var dt = new Date(JSON.parse(nft.metadata).timestamp)\r\n    var dt_str = dt.toString()// toUTCString()\r\n    if (dt_str == \"Invalid Date\") { dt_str = \"Timestamp Not Available!\" }\r\n\r\n    setUtcTimeStamp(dt_str)\r\n    setNftImage(img)\r\n    setNftToSell(nft);\r\n    setVisibility(true);\r\n  };\r\n  \r\n  async function getNftCollections(){\r\n\r\n    // get NFTs for user\r\n    const collectionNFTs = await Moralis.Web3API.account.getNFTs({ chain: chainId });\r\n    var doc = document.getElementById(\"dcx\")\r\n\r\n       \r\n    if(collectionNFTs?.result !== undefined){\r\n        setNFTCollections(collectionNFTs)      \r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n       <div style={styles.NFTs}>\r\n        <div style={{width:\"100%\", textAlign:\"center\", zIndex:\"0\"}}> \r\n          <pre id=\"dcx\"></pre>\r\n  \r\n          <h1 style={{display:\"block\", fontSize:\"x-large\", color:\"gray\"}} >Collections</h1> \r\n          <div style={{display:\"inline-block\", textAlign:\"center\", width:\"1080px\", transform: \"scale(0.8)\"}}>\r\n          <ul id=\"grid\" style={{backGroundColor:\"black\"}} className=\"clear\">\r\n              \r\n              { NFTCollections?.result && NFTCollections.result.map((nft, index) => (\r\n                    \r\n                      <li key={nft.key} className=\"overflow-hidden\">\r\n                        <div className=\"hexagon\">\r\n                          \r\n                          <div className=\"hexText bg-black\" style={{height:\"20%\", marginTop:\"64%\"}} >\r\n                            <p className=\"font-xl\" >{JSON.parse(nft.metadata).name? (JSON.parse(nft.metadata).name) : getEllipsisNormal(nft.name, 12)}</p>\r\n                          </div>\r\n                          <img id={nft.key} preview={false}\r\n                              src={nft.metadata.image? nft.metadata.image : JSON.parse(nft.metadata).image}\r\n                              className=\"zoomIn\" \r\n                              style={{cursor:\"pointer\", position:\"absolute\", marginTop:\"0\", zIndex:\"-1\"}} />\r\n                          <button id=\"btn-publish\" className=\"rounded\" style={{zIndex:\"2\", marginTop:\"80%\"}} onClick={() => handleSellClick(nft, JSON.parse(nft.metadata).image)}>Publish</button>\r\n \r\n                        </div>\r\n                      </li> \r\n              ))\r\n            }\r\n          </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {nftToSell != undefined &&(\r\n      <Modal\r\n            title={JSON.parse(nftToSell?.metadata)?.name? JSON.parse(nftToSell?.metadata).name : nftToSell.name }\r\n            visible={visible}\r\n            onCancel={() => setVisibility(false)}\r\n            onOk={() => List(nftToSell, price)}\r\n            okText=\"Publish\"\r\n          >\r\n            <div style={{display:\"block\",\r\n                width: \"250px\",\r\n                marginRight:\"auto\",\r\n                marginLeft:\"auto\",\r\n                textAlign:\"center\"}}>\r\n              <img\r\n                src={nftImage}\r\n                style={{display:\"block\",\r\n                  width: \"250px\",\r\n                  borderRadius: \"10px\",\r\n                  marginTop: \"-15px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              />\r\n              <Badge.Ribbon text=\"Owned!\" color=\"blue\"></Badge.Ribbon>\r\n            \r\n            </div>\r\n            <Alert\r\n              message=\"This NFT is currently owned. Publish on marketplace to sell!\"\r\n              type=\"info\"\r\n              style={{\r\n                width: \"480px\",\r\n                margin: \"auto\",\r\n                borderRadius: \"10px\",\r\n                marginBottom: \"15px\",\r\n              }}\r\n            />\r\n            <MetaInfo nftMeta={nftToSell} cryptoSymbol={nativeCrypto} utcTimeStamp={utcTimeStamp}/>\r\n            <Input autoFocus placeholder=\"Set Price in MATIC\" onChange={e => setPrice(e.target.value)} />\r\n        </Modal>\r\n        )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NFTCollections;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\r\nimport { Alert, Badge, Button, Card, Modal, Spin } from \"antd\";\r\nimport { ReloadOutlined } from \"@ant-design/icons\";\r\nimport { getNativeByChain } from \"helpers/networks\";\r\nimport { getEllipsisTxt, getEllipsisNormal } from \"helpers/formatters\";\r\n\r\nimport NFT_ABI from \"contracts/abi/NFT_ABI.json\"\r\nimport MARKET_ABI from  \"contracts/abi/MARKET_ABI.json\"\r\n\r\nconst DRONE_DELIVERY_ICON = \"https://ipfs.moralis.io:2053/ipfs/QmUtJ4m4XaTPs6mXCGqDh8Zzf1yDxw9mGn74YGC94DfWUy\"\r\nconst DRONE_DROP_ICON = \"https://ipfs.moralis.io:2053/ipfs/QmeadARAfFZXCkeha7XELiQsjeHdtKPXAm3xAhuP1ZMnxt\"\r\n\r\nconst GMAP_API_KEY = process.env.REACT_APP_GMAP_API_KEY\r\nconst MARKETPLACE_ADDR = process.env.REACT_APP_PANGEA_MARKETPLACE_ADDR\r\nconst NFT_TOKEN_ADDR = process.env.REACT_APP_PANGEA_TOKEN_ADDR;\r\n\r\nconst styles = {\r\n  NFTs: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    WebkitBoxPack: \"start\",\r\n    justifyContent: \"flex-start\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"1000px\",\r\n    width: \"100%\",\r\n    gap: \"10px\",\r\n  },\r\n};\r\n\r\nconst MetaInfo = ({nftMeta, cryptoSymbol, utcTimeStamp}) => (\r\n  <div style={{width:\"450px\"}}>  \r\n    <pre id=\"metaSeller\" style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", overflow: \"hidden\", textOverflow: \"ellipsis\"}}><b>Company     : </b>{(nftMeta)?.company? (nftMeta).company : nftMeta.name}</pre>\r\n    <pre id=\"metaSeller\" style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", overflow: \"hidden\", textOverflow: \"ellipsis\"}}><b>Account ID  : </b>{getEllipsisTxt(nftMeta.owner, 8)}</pre>\r\n    <pre id=\"metaPrice\"  style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\"}}><b>Token Addr  : </b>{getEllipsisTxt(nftMeta.nftContract, 8)}</pre>\r\n    <pre id=\"metaPrice\"  style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\"}}><b>Price       : </b>{nftMeta.priceEth} {cryptoSymbol}</pre>\r\n    <pre id=\"metaTime\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", whiteSpace:\"pre-wrap\"}}><b>Timestamp   : </b>{utcTimeStamp}</pre>\r\n    <pre id=\"metaTime\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\"}}><b>Token ID    : </b>{nftMeta.tokenId}</pre>\r\n    <pre id=\"metaDesc\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", whiteSpace:\"pre-wrap\"}}><b>Description : </b>{(nftMeta)?.description}</pre>\r\n    <pre id=\"metaData\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", whiteSpace:\"pre-wrap\"}}><b>Meta:</b></pre>\r\n    <pre id=\"metaData\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"96px\", marginTop:\"-10px\", textAlign:\"left\", whiteSpace:\"pre-wrap\"}}>{JSON.stringify(nftMeta)}</pre>\r\n  </div>\r\n)\r\n\r\nfunction NFTListings() {\r\n  const[debug, setDebug] = useState(\"\")\r\n  const [NFTCreated, setNFTCreated] = useState([]);\r\n  const [NFTOrdered, setNFTOrdered] = useState([]);\r\n  const [NFTSold, setNFTSold] = useState([]);\r\n  const [loading, setLoading] = useState(false)\r\n  const { Moralis, chainId, account, user } = useMoralis();\r\n  const [visible, setVisibility] = useState(false);\r\n  const [zoomCanvas, setZoomCanvas] = useState(false);\r\n  const [amountToSend, setAmount] = useState(null);\r\n  const [nftToSend, setNftToSend] = useState(null);\r\n  const [nftAssets, setNfAssets] = useState(null);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [reloadTracking, setReloadTracking] = useState(false);\r\n  \r\n  const [nftImage, setNftImage] = useState('');\r\n  const [utcTimeStamp, setUtcTimeStamp] = useState(null);\r\n  const contractProcessor = useWeb3ExecuteFunction()\r\n  const nativeCrypto = getNativeByChain(chainId)\r\n  const [fetchOrders, setFetchOrders] = useState([])\r\n  \r\n  const [Tracking, setTracking] = useState('');\r\n  const [SatelliteMap, setSatelliteMap] = useState('');\r\n  const [RoadMap, setRoadMap] = useState('');\r\n  const staticMapURI = \"https://maps.googleapis.com/maps/api/staticmap?&size=600x400&maptype=\"\r\n\r\n  let createdItems = []\r\n  let soldItems = []\r\n\r\n  useEffect( () => {\r\n    getNFTCreated()\r\n    getOrders()\r\n  }, [chainId, account])\r\n\r\n  function onRefresh(){\r\n    \r\n    getOrders()\r\n    setRefresh(true)\r\n    setTimeout(()=>setRefresh(false),800)\r\n  }\r\n  \r\n  var testInit = true\r\n  var testCycle = 3\r\n  let testPath = []\r\n  const [countCycle, setcountCycle] = useState(0);\r\n  const incrementCounter = () => setcountCycle(countCycle + 1);\r\n\r\n  async function onRefreshTracking(nft){\r\n\r\n    /*Simulated tracking....*/\r\n    if (testInit) { \r\n      testInit = false\r\n      for(var i = 0; i < nft.metaData.length - 1; i++){\r\n        var lat1, lat2, lng1, lng2, dlat, dlng\r\n        lat1  = nft.metaData[i].lat\r\n        lng1  = nft.metaData[i].lng\r\n        lat2  = nft.metaData[i+1].lat\r\n        lng2  = nft.metaData[i+1].lng\r\n\r\n        dlat = (parseFloat(lat2) - parseFloat(lat1)) / testCycle\r\n        dlng = (parseFloat(lng2) - parseFloat(lng1)) / testCycle\r\n\r\n        testPath.push({lat:parseFloat(lat1), lng: parseFloat(lng1)})\r\n        for(var j = 1; j<= testCycle; j++){\r\n          testPath.push({lat:parseFloat(lat1) + dlat*j, lng: parseFloat(lng1) + dlng*j})\r\n        }\r\n        testPath.push({lat:lat2, lng: lng2})\r\n      \r\n\r\n      }\r\n      \r\n    }\r\n    incrementCounter()\r\n    var packageDroped = false\r\n    // alert(countCycle)\r\n    let testRoute = []\r\n    \r\n    if(countCycle < testPath.length){\r\n      testRoute = testPath.slice(0, countCycle)\r\n    }\r\n    else if(countCycle > testPath.length - 1){\r\n      packageDroped = true\r\n      setTracking('')\r\n      // alert(packageDroped)\r\n      const OrdersList = Moralis.Object.extend(\"Orders\")\r\n      const reset = new Moralis.Query(OrdersList);\r\n      await reset.get(nft.objectId)\r\n        .then(obj => {\r\n          obj.set(\"tracking\", '')\r\n          obj.set(\"delivered\", false)\r\n          obj.save()\r\n\r\n        }).catch(function(error) {\r\n          // There was an error.\r\n          alert(\"Fail to reset Tracking #\" + nft.objectId + \"\\n\" + JSON.stringify(nft))\r\n        });\r\n        testPath = []\r\n        testInit = true\r\n        setcountCycle(0)\r\n    }\r\n    const OrdersList = Moralis.Object.extend(\"Orders\")\r\n    const update = new Moralis.Query(OrdersList);\r\n    await update.get(nft.objectId)\r\n      .then(obj => {\r\n        obj.set(\"tracking\", testRoute)\r\n        obj.set(\"delivered\", packageDroped)\r\n        obj.save()\r\n\r\n      }).catch(function(error) {\r\n        // There was an error.\r\n        alert(\"Fail to update Tracking #\" + nft.objectId + \"\\n\" + JSON.stringify(nft))\r\n      });\r\n\r\n    /*Simulated tracking....END*/\r\n\r\n    var path, trackPath = \"\"\r\n\r\n    const Tracking = Moralis.Object.extend(\"Orders\");\r\n    const query = new Moralis.Query(Tracking);\r\n    query.equalTo(\"objectId\", nft.objectId);\r\n    const route = await query.find();\r\n\r\n    var pathColor = \"0x828886bb\"\r\n    var fillColor = `|fillcolor:0xFFFF0033`\r\n    var icon\r\n\r\n    if(route[0].delivered === true){\r\n      icon = DRONE_DROP_ICON\r\n    }\r\n    else \r\n      icon = DRONE_DELIVERY_ICON\r\n\r\n    if(JSON.parse(JSON.stringify(route)).length > 0){\r\n      path = JSON.parse(JSON.stringify(route[0]), \"\", 2).tracking\r\n\r\n      setReloadTracking(true)\r\n      if(path.length > 0){\r\n        path.forEach((path, index) => {\r\n            trackPath += `|${path.lat},${path.lng}`\r\n        });\r\n\r\n        fillColor=\"\"\r\n        trackPath = `&path=color:${pathColor}|weight:5${fillColor}\r\n                    ${trackPath}&markers=anchor:center%7Cicon:${icon}%7c\r\n                    ${path[path.length - 1].lat},${path[path.length - 1].lng}`\r\n\r\n        setTracking(trackPath)\r\n\r\n      }\r\n      handleAssetsClick(nft, nft.image)\r\n    }\r\n    setTimeout(()=>setReloadTracking(false),800)\r\n  }\r\n\r\n  async function transfer(nft, amount, receiver) {\r\n    const options = {\r\n      type: nft.contract_type,\r\n      tokenId: nft.token_id,\r\n      receiver: receiver,\r\n      contractAddress: nft.token_address,\r\n    };\r\n\r\n    if (options.type === \"erc1155\") {\r\n      options.amount = amount;\r\n    }\r\n\r\n    setIsPending(true);\r\n    await Moralis.transfer(options)\r\n      .then((tx) => {\r\n        console.log(tx);\r\n        setIsPending(false);\r\n      })\r\n      .catch((e) => {\r\n        alert(e.message);\r\n        setIsPending(false);\r\n      });\r\n  }\r\n\r\n  const handleTransferClick = (nft) => {\r\n    setNftToSend(nft);\r\n    setVisibility(true);\r\n  };\r\n\r\n  function onCanvasClick(state, type){\r\n    setZoomCanvas(state)\r\n    setVisibility(!state)\r\n  }\r\n\r\n  async function onConfirmClick(state, nft){\r\n    setLoading(true)\r\n    if(nft.status === \"Pending\")\r\n      await createSale(nft)\r\n    else if(nft.status === \"In-Progress\")\r\n      await updateOrderProgress(nft)\r\n  }\r\n\r\n  async function updateOrderProgress(nft){\r\n    const orderList = Moralis.Object.extend(\"Orders\")\r\n    const update = new Moralis.Query(orderList);\r\n    await update.get(nft.objectId)\r\n      .then(obj => {\r\n        obj.set(\"status\", \"Completed\")\r\n        obj.save()\r\n        setLoading(false)\r\n      }).catch(function(error) {\r\n        // There was an error.\r\n        alert(\"Fail to update Order Status #\" + nft.objectId + \"\\n\" + JSON.stringify(error))\r\n        setLoading(false)\r\n      });\r\n  }\r\n\r\n  async function createSale(nft) {\r\n\r\n      /*create the item */\r\n      const options = {\r\n          contractAddress: nft.nftContract,\r\n          functionName: \"createToken\",\r\n          abi: NFT_ABI,\r\n          awaitReceipt: false,\r\n          params: {\r\n              tokenURI: nft.tokenURI\r\n          },\r\n        }\r\n\r\n      const transaction = await Moralis.executeFunction(options)\r\n      transaction\r\n      .on(\"receipt\", async(receipt) => {\r\n          \r\n          let txEvents = receipt.events\r\n          let txTransfer = txEvents.Transfer\r\n          let txReturnVal = txTransfer.returnValues\r\n          let tokenId = txReturnVal.tokenId\r\n          \r\n          createMarketItem(nft, tokenId)\r\n      })\r\n      .on(\"error\", (error) => {\r\n          setLoading(false)\r\n          setZoomCanvas(false)\r\n          alert( \"Error \" + JSON.stringify(error) )\r\n      });\r\n  }\r\n\r\n  async function createMarketItem(nft, tokenId){\r\n      \r\n      /* then list the item for sale on the marketplace */\r\n      const price = Moralis.Units.ETH(nft.priceEth)\r\n      const listingPrice = (price/10).toString()\r\n\r\n      const options = {\r\n          contractAddress: MARKETPLACE_ADDR,\r\n          functionName: \"createMarketItem\",\r\n          abi: MARKET_ABI,\r\n          msgValue: listingPrice,\r\n          awaitReceipt: false,\r\n          params: {\r\n              nftContract: nft.nftContract,\r\n              tokenId: tokenId,\r\n              price: price\r\n          },\r\n      }\r\n\r\n      const transaction = await Moralis.executeFunction(options)\r\n      transaction\r\n      .on(\"receipt\", async(receipt) => {\r\n          setLoading(false)\r\n          \r\n          setZoomCanvas(false)\r\n          setVisibility(false)\r\n          \r\n          updateMarketplace(nft, tokenId) \r\n      })\r\n      .on(\"error\", (error) => {\r\n          setLoading(false)\r\n          alert(\"Transaction Failed...\\n\" + JSON.stringify(error)) \r\n      })\r\n\r\n  }\r\n\r\n  async function updateMarketplace(nft, tokenId){\r\n\r\n    const queryMarket = Moralis.Object.extend(\"Assets\")\r\n    const market = new Moralis.Query(queryMarket);\r\n\r\n    market.matches(\"tokenId\", tokenId)\r\n    var result = await market.find()\r\n \r\n    const objId = JSON.parse(JSON.stringify(result[0])).objectId\r\n    const itemId = JSON.parse(JSON.stringify(result[0])).itemId\r\n\r\n    const updateMarket = Moralis.Object.extend(\"Assets\")\r\n    const update = new Moralis.Query(updateMarket);\r\n    result = await update.get(objId)\r\n      .then(obj => {\r\n        obj.set(\"target\", nft.target)\r\n        obj.set(\"orderId\", nft.objectId)\r\n        obj.save()\r\n        updateOrders(nft, itemId, tokenId, objId)\r\n        // setLoading(false)\r\n      }).catch(function(error) {\r\n        // There was an error.\r\n        alert(\"Fail to update Marketplace \\n\" + JSON.stringify(error))\r\n        setLoading(false)\r\n      });\r\n\r\n  }\r\n  \r\n  async function updateOrders(nft, itemId, tokenId, marketId){\r\n    \r\n    const id = nft.objectId\r\n\r\n    const updateOrders = Moralis.Object.extend(\"Orders\")\r\n    const query = new Moralis.Query(updateOrders);\r\n    await query.get(id)\r\n      .then(obj => {\r\n        obj.set(\"status\", \"Published\")\r\n        obj.set(\"itemId\", itemId)\r\n        obj.set(\"tokenId\", tokenId)\r\n        obj.set(\"marketId\", marketId)\r\n        obj.save()\r\n      })\r\n      .then((setOrder) => {\r\n        // The object was saved successfully.\r\n        alert(\"Order Published Successful!\")\r\n          getOrders()\r\n          setLoading(false)\r\n      }, (error) => {\r\n        // The save failed.\r\n        // error is a Moralis.Error with an error code and message.\r\n          alert('Error Publishing Order: ' + JSON.stringify(error, null, 2))\r\n          setLoading(false)\r\n      });\r\n      setLoading(false)\r\n  }\r\n\r\n  async function onRejectClick(state, nft){\r\n    \r\n    setLoading(true)\r\n    const id = nft.objectId\r\n\r\n    const updateOrders = Moralis.Object.extend(\"Orders\")\r\n    const query = new Moralis.Query(updateOrders);\r\n    await query.get(id)\r\n      .then(obj => {\r\n        obj.set(\"status\", \"Rejected\")\r\n        obj.save()\r\n      })\r\n      .then((setOrder) => {\r\n        // The object was saved successfully.\r\n        alert(\"Order Rejected Successful!\")\r\n          setLoading(false)\r\n          setZoomCanvas(state)\r\n          setVisibility(state)\r\n          getOrders()\r\n      }, (error) => {\r\n        // The save failed.\r\n        // error is a Moralis.Error with an error code and message.\r\n          alert('Error Rejecting Order: ' + JSON.stringify(error, null, 2))\r\n          setLoading(false)\r\n      });\r\n      setLoading(false)\r\n  }\r\n  \r\n\r\n  const geodeticFencePoints = (radius, lat, lng) => {\r\n    \r\n    var earth = 6378.137  //radius of the earth in kilometer\r\n    var geoFence = []\r\n    //For latitude\r\n    var pi = Math.PI\r\n    var cos = Math.cos\r\n    var sin = Math.sin\r\n    var _meters = (1 / ((2 * pi / 360) * earth)) / 1000;  //1 meter in degree\r\n\r\n    for(var i = 0; i < 51; i++){\r\n    \r\n        geoFence.push({\r\n            lat: lat + (radius * _meters * cos(i/8)), \r\n            lng: lng + (radius * _meters * sin(i/8)) / cos(lat * (pi / 180))\r\n        })\r\n      }\r\n    return geoFence\r\n  }\r\n\r\n  const handleAssetsClick = (nft, img) => {\r\n\r\n    var mapParameters = \"\"\r\n    var mapPath = \"\"\r\n    var dt = new Date((nft).timestamp)\r\n    var dt_str = dt.toString()// toUTCString()\r\n    if (dt_str === \"Invalid Date\") { dt_str = \"Timestamp Not Available!\" }\r\n\r\n    setUtcTimeStamp(dt_str)\r\n    \r\n    var pathColor = \"lightblue\"\r\n    var fillColor = \"lightblue\"\r\n    if(nft.type === \"GMAP\"){\r\n     \r\n      if(nft.subType === \"Observation\" || nft.subType === \"Communication\"){\r\n        pathColor = nft.subType === \"Observation\"? '0xee950a33' : '0x0aee8733'\r\n        fillColor = \"|fillcolor:\" + pathColor \r\n        \r\n        var markerColor = \"red\"\r\n        markerColor = \"red\"\r\n       \r\n        mapParameters += `&markers=color:${markerColor}%7Clabel:1%7C${nft.metaData[0].lat},${nft.metaData[0].lng}`\r\n        \r\n        geodeticFencePoints(2500, nft.metaData[0].lat, nft.metaData[0].lng).forEach((element, index) => {\r\n          mapPath += `|${element.lat},${element.lng}`\r\n        });\r\n        mapPath = `&path=color:${pathColor}|weight:5${fillColor}` + mapPath\r\n      }\r\n      else{\r\n        if(nft.subType === \"Courier\" || nft.subType === \"Navigation\"){\r\n          pathColor = 'lightblue' \r\n          fillColor = \"\"\r\n        }\r\n        else if(nft.subType === \"Emergency\") {\r\n          pathColor = 'red'\r\n          fillColor = \"\"\r\n        }\r\n        \r\n        nft.metaData.forEach((element, index) => {\r\n          markerColor = \"red\"\r\n          mapParameters += `&markers=color:${markerColor}%7Clabel:${index}%7C${element.lat},${element.lng}`\r\n\r\n          mapPath += `|${element.lat},${element.lng}`\r\n        });\r\n        mapPath = `&path=color:${pathColor}|weight:5${fillColor}` + mapPath\r\n\r\n      }\r\n\r\n      setSatelliteMap(`${staticMapURI}satellite${mapParameters}${mapPath}${Tracking}&key=${GMAP_API_KEY}`)\r\n      setRoadMap(`${staticMapURI}roadmap${mapParameters}${mapPath}${Tracking}&key=${GMAP_API_KEY}`)\r\n      \r\n      setNftImage(RoadMap)\r\n    }else\r\n      setNftImage(img)\r\n    \r\n    setNfAssets(nft);\r\n    setVisibility(true);\r\n  };\r\n  \r\n  const handleChange = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  async function getOrders() {\r\n\r\n    var keyIdx = 0\r\n\r\n    const Orders = Moralis.Object.extend(\"Orders\");\r\n    const queryTarget = new Moralis.Query(Orders);\r\n    queryTarget.equalTo(\"target\", account);\r\n    \r\n    const queryMarket = new Moralis.Query(Orders);\r\n    queryMarket.equalTo(\"marketplace\", user.attributes.marketplace);\r\n\r\n    const mainQuery = Moralis.Query.or(queryTarget, queryMarket);\r\n    const object = await mainQuery.find();\r\n\r\n    setFetchOrders(object)\r\n\r\n    if(fetchOrders !== null){\r\n        \r\n      const items = await Promise.all(fetchOrders?.map(async elm => {\r\n        \r\n        const element = JSON.parse(JSON.stringify(elm))\r\n        var metaData\r\n      \r\n        try {\r\n          metaData = JSON.parse(Get(element.tokenURI));\r\n        } catch (error) {\r\n          ;\r\n        }\r\n\r\n        const priceEth = Moralis.Units.FromWei(element.price? element.price : 0)\r\n        const priceUSD = \"\"\r\n      \r\n        let item = {\r\n          key: keyIdx++,\r\n          priceEth,\r\n          priceUSD,\r\n          priceWei: element.price,\r\n          objectId: element.objectId,\r\n          tokenId: element.tokenId,\r\n          itemId: element.itemId,\r\n          marketId: element.marketId,\r\n          company: element.company,\r\n          image: metaData?.image,\r\n          name: metaData?.name,\r\n          type: element.type,\r\n          subType: element.subType,\r\n          description: metaData?.description,\r\n          nftContract: element.nftContract,\r\n          tokenURI: element.tokenURI,\r\n          timestamp: element.createdAt,\r\n          metaData: metaData?.meta,\r\n          orderRequest: true,\r\n          status: element?.status,\r\n          target: element?.target,\r\n          bulk: element?.bulk,\r\n          tracking: element.tracking\r\n        }\r\n        \r\n        return item\r\n      }))\r\n      setNFTOrdered(items)       \r\n    }\r\n  }\r\n\r\n  async function getNFTCreated() {\r\n\r\n    const marketList = Moralis.Object.extend(\"Assets\")\r\n    const query = new Moralis.Query(marketList);\r\n    const marketData = await query.equalTo(\"seller\", account).find()\r\n\r\n    let tokens = []\r\n    marketData.forEach (elm => {\r\n      const i = JSON.parse(JSON.stringify(elm))\r\n       tokens.push(i.tokenId)\r\n    })\r\n    const nftTransaction = Moralis.Object.extend(\"AvaxNFTOwners\")\r\n    const query2 = new Moralis.Query(nftTransaction);\r\n    const tokenData = await query2.containedIn(\"token_id\", tokens).find()\r\n\r\n    if(marketData !== null){\r\n\r\n        var keyIdx = 0\r\n\r\n        marketData.forEach(elm => {\r\n          const i = JSON.parse(JSON.stringify(elm))\r\n          tokenData.forEach( item =>  {\r\n            const e = JSON.parse(JSON.stringify(item))\r\n            if(JSON.stringify(e.token_id) === JSON.stringify(i.tokenId)){\r\n\r\n              const price = i?.price? i.price : 0\r\n\r\n              const priceEth = Moralis.Units.FromWei(price)\r\n              const priceUSD = \"\"\r\n\r\n              var metaData\r\n\r\n              try {\r\n                metaData = JSON.parse(Get(e.token_uri));\r\n              } catch (error) {\r\n                ;\r\n              }\r\n            \r\n              let item = {\r\n                key: keyIdx++,\r\n                priceEth,\r\n                priceUSD,\r\n                objectId: i?.objectId,\r\n                tokenId: e.token_id,\r\n                itemId: i?.itemId,\r\n                company: metaData?.company,\r\n                seller: i?.seller,\r\n                owner: e.owner_of,\r\n                image: metaData?.image,\r\n                name: metaData?.name,\r\n                description: metaData?.description,\r\n                nftContract: i?.nftContract,\r\n                sold: i?.sold,\r\n                confirmed: i?.confirmed,\r\n                timestamp: i?.updatedAt,\r\n                metaData: metaData?.meta,\r\n              }\r\n\r\n              if(item.sold === false){\r\n                createdItems.push(item) \r\n                   \r\n              }else if(item.sold === true){\r\n                soldItems.push(item) \r\n              } \r\n\r\n            }\r\n          })\r\n      })\r\n    }\r\n    try {\r\n      setNFTCreated((createdItems))\r\n      setNFTSold(soldItems)\r\n     \r\n    } catch (error) {\r\n      setDebug(\"NFTList >> \" + JSON.stringify(error))\r\n    }\r\n  }\r\n\r\n  async function buyNFT(nft) {\r\n\r\n    setLoading(true)\r\n    const price = Moralis.Units.ETH(nft.priceEth)\r\n    const options = {\r\n      contractAddress: MARKETPLACE_ADDR,\r\n      functionName: \"createMarketSale\",\r\n      abi: MARKET_ABI,\r\n      msgValue: price,\r\n      params: {\r\n        nftContract: NFT_TOKEN_ADDR,\r\n        itemId: nft.itemId\r\n      },\r\n    }\r\n\r\n    await contractProcessor.fetch({\r\n      params: options,\r\n      onSuccess: () => {\r\n        alert(\"Transaction Successful, Item Purchased!\")\r\n        updateSoldMarketItem(nft)\r\n        setVisibility(false)\r\n        setLoading(false)\r\n      },\r\n      onError: (error) => {\r\n        alert(\"Transaction Failed!, something went wrong...\\n\" + JSON.stringify(error, null, 2))\r\n  \r\n        setVisibility(false)\r\n        setLoading(false)\r\n      }\r\n    })\r\n  }\r\n\r\n  async function updateSoldMarketItem(nft){\r\n\r\n    const id = nft.marketId\r\n    const marketList = Moralis.Object.extend(\"Assets\")\r\n    const query = new Moralis.Query(marketList);\r\n    await query.get(id)\r\n      .then(obj => {\r\n        obj.set(\"sold\", true)\r\n        obj.set(\"owner\", account)\r\n        obj.set(\"status\", \"Completed\")\r\n        obj.save()\r\n      })\r\n\r\n    const orderId = nft.objectId\r\n    const orderList = Moralis.Object.extend(\"Orders\")\r\n    const update = new Moralis.Query(orderList);\r\n    await update.get(orderId)\r\n      .then(obj => {\r\n        obj.set(\"status\", \"In-Progress\")\r\n        obj.set(\"tokenId\", nft.tokenId)\r\n        obj.save()\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  function Get(yourUrl){\r\n    var Httpreq = new XMLHttpRequest(); // a new request\r\n    Httpreq.open(\"GET\",yourUrl,false);\r\n    Httpreq.send(null);\r\n    return Httpreq.responseText;          \r\n  }\r\n  return (\r\n    <>\r\n       <div style={styles.NFTs}>\r\n        <div onClick={()=>onRefresh()} style={{cursor:\"pointer\", zIndex:\"1\", width:\"200px\", marginLeft:\"720px\", fontSize:\"xx-large\", fontWeight:\"bold\", color:\"gray\"}}>\r\n          <ReloadOutlined spin={refresh}/> Refresh\r\n        </div>\r\n        <div style={{width:\"100%\", textAlign:\"center\", zIndex:\"0\"}}> \r\n        {NFTOrdered.length > 0 && ( \r\n          <div style={{display:\"inline-block\", textAlign:\"center\", width:\"1080px\", transform: \"scale(0.8)\"}}>\r\n            <h1 style={{display:\"block\", textAlign:\"left\", fontSize:\"x-large\", color:\"gray\", textDecoration:\"underline\"}}>Orders</h1>\r\n              <ul id=\"grid\" style={{backGroundColor:\"black\"}} className=\"clear\">\r\n              \r\n                {NFTOrdered?.map((nft, index) => (                      \r\n                  <li key={nft.key} className=\"overflow-hidden\">\r\n                    <div className=\"hexagon\">\r\n                      \r\n                      <div className=\"hexText bg-black\" >\r\n                        <p className=\"font-xl\" >{(nft).name? getEllipsisNormal(nft.name, 12) : \"???\"}</p>\r\n                        <p className=\"font-large\">{nft.priceEth} {nativeCrypto}</p>\r\n                      </div>\r\n                      <img id={nft?.key} preview={false}\r\n                          src={nft.image? nft.image : \"\"}\r\n                          alt=\"\"\r\n                          className=\"zoomIn\" \r\n                          style={{cursor:\"pointer\", position:\"absolute\", marginTop:\"0\", zIndex:\"-1\"}} />\r\n                      {nft.status === \"Pending\" && (\r\n                        <button id=\"btn-orders\" className=\"rounded\" style={{zIndex:\"2\", marginTop:\"80%\"}} onClick={() => handleAssetsClick(nft, nft.image)}>Pending</button> \r\n                      )}\r\n                      {nft.status === \"Published\" && (\r\n                        <button id=\"btn-buy\" className=\"rounded\" style={{zIndex:\"2\", marginTop:\"80%\"}} onClick={() => handleAssetsClick(nft, nft.image)}>Buy</button>\r\n                      )}\r\n                      {nft.status === \"In-Progress\" && (\r\n                        <button id=\"btn-inProgress\" className=\"rounded\" style={{zIndex:\"2\", marginTop:\"80%\"}} onClick={() => handleAssetsClick(nft, nft.image)}>In-Progress</button>\r\n                      )}\r\n                      {nft.status === \"Completed\" && (\r\n                        <button id=\"btn-completed\" className=\"rounded\" style={{zIndex:\"2\", marginTop:\"80%\"}} onClick={() => handleAssetsClick(nft, nft.image)}>Completed</button>\r\n                      )}\r\n                      {nft.status === \"Rejected\" && (\r\n                        <button id=\"btn-rejected\" className=\"rounded\" style={{zIndex:\"2\", marginTop:\"80%\"}} onClick={() => handleAssetsClick(nft, nft.image)}>Rejected</button>\r\n                      )}\r\n                      \r\n                    </div>\r\n                  </li> \r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n        {NFTCreated.length > 0 && ( \r\n        <div style={{display:\"inline-block\", textAlign:\"center\", width:\"1080px\", transform: \"scale(0.8)\"}}>\r\n         \r\n          <h1 style={{display:\"block\", textAlign:\"left\", fontSize:\"x-large\", color:\"gray\", textDecoration:\"underline\"}}>Published</h1>\r\n            <ul id=\"grid\" style={{backGroundColor:\"black\"}} className=\"clear\">\r\n              \r\n                {NFTCreated?.map((nft, index) => (                      \r\n                  <li key={nft.key} className=\"overflow-hidden\">\r\n                    <div className=\"hexagon\">\r\n                      \r\n                      <div className=\"hexText bg-black\" >\r\n                        <p className=\"font-xl\" >{(nft).name? getEllipsisNormal(nft.name, 12) : \"???\"}</p>\r\n                        <p className=\"font-large\">{nft.priceEth} {nativeCrypto}</p>\r\n\r\n                      </div>\r\n                      <img id={nft.key} preview={false}\r\n                          src={nft.image? nft.image : \"\"}\r\n                          alt=\"\"\r\n                          className=\"zoomIn\" \r\n                          style={{cursor:\"pointer\", position:\"absolute\", marginTop:\"0\", zIndex:\"-1\"}} />\r\n                      <button id=\"btn-published\" className=\"rounded\" style={{zIndex:\"2\", marginTop:\"80%\"}} onClick={() => handleAssetsClick(nft, nft.image)}>Published</button> \r\n\r\n                    </div>\r\n                  </li> \r\n                ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n        \r\n        {NFTSold.length > 0 && ( \r\n          <div style={{display:\"inline-block\", textAlign:\"center\", width:\"1080px\", transform: \"scale(0.8)\"}}>\r\n          \r\n            <h1 style={{display:\"block\", textAlign:\"left\", fontSize:\"x-large\", color:\"gray\", textDecoration:\"underline\"}} >Sold</h1> \r\n            <ul id=\"grid\" style={{backGroundColor:\"black\"}} className=\"clear\">\r\n              \r\n                {NFTSold?.map((nft, index) => (\r\n                      \r\n                  <li key={nft.key} className=\"overflow-hidden\">\r\n                    <div className=\"hexagon\">\r\n                      \r\n                      <div className=\"hexText bg-black\" >\r\n                      <p className=\"font-xl\" >{(nft).name? getEllipsisNormal((nft).name, 12) : getEllipsisNormal(nft.name, 12)}</p>\r\n                      <p className=\"font-large\">{nft.priceEth} {nativeCrypto}</p>\r\n\r\n                      </div>\r\n                      <img id={nft.key} preview={false}\r\n                          src={nft.image? nft.image : \"\"}\r\n                          alt=\"\"\r\n                          className=\"zoomIn img-grayscale\" \r\n                          style={{cursor:\"pointer\", position:\"absolute\", marginTop:\"0\", zIndex:\"-1\"}} />\r\n                      <button id=\"btn-sold\" className=\"rounded\" style={{zIndex:\"2\", marginTop:\"80%\"}} onClick={() => handleAssetsClick(nft, (nft).image)}>Sold</button> \r\n\r\n                    </div>\r\n                  </li> \r\n                ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n        </div>\r\n      </div>\r\n  \r\n      {nftAssets !== undefined &&(\r\n      <Modal\r\n        title={(nftAssets)?.name? (nftAssets)?.name : nftAssets?.name }\r\n        visible={visible}\r\n        onCancel={() => setVisibility(false)}\r\n        cancelText = \"Return\"\r\n        onOk={() => (nftAssets?.status === \"Pending\" || nftAssets?.status === \"In-Progress\")? onCanvasClick(true, nftAssets.type) \r\n        : (nftAssets?.status === \"Published\")? buyNFT(nftAssets) : setVisibility(false)}\r\n        okText={(nftAssets?.status === \"Pending\" || nftAssets?.status === \"In-Progress\")? \"Options\" \r\n        : (nftAssets?.status === \"Published\")? \"Buy\" : \"OK\"}\r\n      >\r\n        <Spin spinning={loading} size=\"large\" tip=\"In Progress...\">\r\n          <div style={{display:\"block\",\r\n              width: \"250px\",\r\n              marginRight:\"auto\",\r\n              marginLeft:\"auto\",\r\n              textAlign:\"center\"}}>\r\n            <img\r\n              src={nftImage}\r\n              alt=\"\"\r\n              className={nftAssets?.sold ? \"img-grayscale\" : \"\"}\r\n              onClick={() => nftAssets?.sold ? onCanvasClick(false, nftAssets.type) : onCanvasClick(true, nftAssets.type)}\r\n              style={{display:\"block\",\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              overflow: \"hidden\",\r\n              borderRadius: \"10px\",\r\n              marginTop: \"-15px\",\r\n              marginBottom: \"15px\",\r\n              cursor:\"pointer\"}}\r\n            />\r\n            {nftAssets?.orderRequest ? (\r\n              <Badge.Ribbon \r\n                text={nftAssets.status} \r\n                color={nftAssets.status === \"Rejected\"? \"red\" \r\n                  : nftAssets.status === \"Published\"? \"volcano\" \r\n                  : nftAssets.status === \"In-Progress\"? \"purple\" \r\n                  : nftAssets.status === \"Completed\"? \"black\" : \"magenta\"}>\r\n\r\n              </Badge.Ribbon>\r\n                ) : ( \r\n                nftAssets?.sold ? (\r\n                  <Badge.Ribbon text=\"Sold!\" color=\"black\"></Badge.Ribbon>\r\n                  ) : (\r\n                  <Badge.Ribbon text=\"Published!\" color=\"orangered\"></Badge.Ribbon>\r\n                )\r\n              )\r\n            }\r\n          </div>\r\n\r\n          {nftAssets?.orderRequest ? (\r\n            <Alert\r\n              message={nftAssets.status === \"Rejected\" ? \"This order is Rejected\" \r\n                    : nftAssets.status === \"In-Progress\" ? \"This order is currently In-Progress!\"\r\n                    : nftAssets.status === \"Published\" ? \"This order is currently awaiting purchase or payment!\"\r\n                    : nftAssets.status === \"Completed\" ? \"This order has been Completed!\" \r\n                    : \"This order is currently Pending request approval!\"}\r\n              type={nftAssets.status === \"Rejected\" ? \"error\" : \"info\"}\r\n              style={{\r\n                textAlign:\"center\",\r\n                width: \"480px\",\r\n                margin: \"auto\",\r\n                borderRadius: \"10px\",\r\n                marginBottom: \"15px\",\r\n              }}\r\n            />\r\n            ) : ( \r\n            nftAssets?.sold ? (\r\n              <Alert\r\n                message=\"This NFT has been sold!\"\r\n                type=\"success\"\r\n                style={{\r\n                  textAlign:\"center\",\r\n                  width: \"480px\",\r\n                  margin: \"auto\",\r\n                  borderRadius: \"10px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              />\r\n              ) : (\r\n                <Alert\r\n                message=\"This NFT is currently published on the marketplace!\"\r\n                type=\"info\"\r\n                style={{\r\n                  textAlign:\"center\",\r\n                  width: \"480px\",\r\n                  margin: \"auto\",\r\n                  borderRadius: \"10px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              />\r\n              )\r\n            )}\r\n            <MetaInfo nftMeta={nftAssets} cryptoSymbol={nativeCrypto} utcTimeStamp={utcTimeStamp}/>\r\n          </Spin>\r\n        </Modal>\r\n        )}\r\n\r\n        {zoomCanvas && \r\n          <Modal\r\n            title={(nftAssets)?.name? (nftAssets).name : nftAssets.name }\r\n            visible={zoomCanvas? \"visible\" : \"hidden\"}\r\n            onCancel={() => onCanvasClick(false, nftAssets.type)}\r\n            cancelText=\"Return\"\r\n            onOk={() => onCanvasClick(false, nftAssets.type)}\r\n            okText={(nftAssets.status === \"Pending\")? \"Confirm\" : \"OK\"}\r\n            width={(nftAssets.type === \"Cafe\")? 1080 : window.innerWidth }\r\n            height={(nftAssets.type === \"Cafe\")? 800: window.innerHeight}\r\n            style={{top:0}}\r\n            \r\n            footer={[\r\n              <Button type=\"primary\" style={{visibility:(nftAssets.status === \"Pending\" || nftAssets.status === \"In-Progress\")? \"visible\" : \"hidden\"}} \r\n                onClick={() => {\r\n                  onRefreshTracking(nftAssets)\r\n                }}>\r\n                <ReloadOutlined spin={reloadTracking}/> Refresh\r\n              </Button>,\r\n              <Button type=\"primary\" style={{visibility:(nftAssets.status === \"Pending\" || nftAssets.status === \"In-Progress\")? \"visible\" : \"hidden\"}} onClick={() => onConfirmClick(false, nftAssets)}>\r\n                Confirm\r\n              </Button>,\r\n              <Button type=\"primary\" style={{visibility:(nftAssets.status === \"Pending\" || nftAssets.status === \"In-Progress\")? \"visible\" : \"hidden\"}} onClick={() => onRejectClick(false, nftAssets)}>\r\n                Reject\r\n              </Button>,\r\n              <Button onClick={() => onCanvasClick(false, nftAssets.type)}>\r\n                Return\r\n              </Button>,\r\n            ]}\r\n          >\r\n          <Spin spinning={loading} size=\"large\" tip=\"In Progress...\">\r\n            <div style={{display:\"block\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              marginRight:\"auto\",\r\n              marginLeft:\"auto\",\r\n              textAlign:\"center\"}}>\r\n              \r\n              {nftAssets.bulk? (\r\n                <>\r\n                <div className=\"sticky\"  style={{height:\"180px\", textAlign:\"center\", top:\"56px\", zIndex:\"2\"}}/>\r\n                <div style={{ position:\"absolute\", textAlign:\"center\", marginLeft:\"40%\", marginRight:\"auto\", top:\"-86px\", zIndex:\"10\"}}>\r\n                  <h1 style={{display:\"block\", fontSize:\"x-large\", color:\"gray\"}} >{(nftAssets.company)}</h1>     \r\n                  <div style={{width:\"100px\", marginLeft:\"auto\", marginRight:\"auto\"}}>\r\n                   <img src={nftAssets.image || require(\"../../img/hexic.png\").default} className=\"zoomIn\" style={{ textAlign:\"center\", alignContent:\"center\", width:\"150px\", height:\"100px\", borderRadius:\"50%\"}} />\r\n                  </div> \r\n                </div>\r\n                <div style={{marginTop:\"64px\", width:\"1080px\", transform: \"scale(0.8)\"}}>\r\n                  {nftAssets.metaData.map((nft, index) => (\r\n                    <div style={{height:\"240px\", marginLeft:\"0px\", paddingRight:\"20px\", display:\"inline-block\"}}>\r\n                      <ul id=\"grid\" style={{backGroundColor:\"black\", width:\"520px\", display:\"inline-block\"}} className=\"clear\">\r\n                        <li key={nft?.key} className=\"overflow-hidden\">\r\n                          <div className=\"hexagon\">\r\n                            <img id={nft?.key} src={nft?.meta?.image? nft?.meta.image : JSON.parse(nft?.meta)?.image} alt=\"\" className=\"zoomIn\" style={{cursor:\"pointer\", position:\"absolute\", marginTop:\"0\", zIndex:\"-1\"}} />\r\n                          </div>\r\n                        </li> \r\n                      </ul>\r\n                      <div style={{marginLeft:\"-368px\", marginTop:\"25px\", position:\"absolute\", display:\"inline-block\"}}>\r\n                        <Card size=\"small\"\r\n                          style={{width:\"380px\"}} \r\n                          >\r\n                          <div className=\"\" >\r\n                            <p className=\"\"  style={{textAlign:\"left\"}}>{nft?.meta?.name? nft.meta.name : nft?.name}</p>\r\n                            <p className=\"font-large\" style={{textAlign:\"left\"}}>{nft?.priceEth} {nativeCrypto}</p>\r\n                            <p className=\"font-large\" style={{textAlign:\"left\"}}>{getEllipsisNormal(nft?.meta.description, 45)}</p>  \r\n                          </div>\r\n                        </Card>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                </>\r\n              ) : (\r\n              <img\r\n                src={(nftAssets.type === \"GMAP\")? SatelliteMap : nftImage}\r\n                className={nftAssets.sold ? \"img-grayscale\" : \"\"}\r\n                style={{display:\"block\",\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                overflow: \"hidden\",\r\n                borderRadius: \"10px\",\r\n                marginTop: \"-15px\",\r\n                marginBottom: \"15px\",\r\n                }}\r\n              />\r\n              )}\r\n                \r\n            </div>\r\n          </Spin>\r\n          </Modal>\r\n    }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NFTListings;\r\n","import { Select } from 'antd';\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { getCollectionsByChain } from \"helpers/collections\";\r\n\r\nfunction SearchCollections({setInputValue}){\r\n    const { Option } = Select;\r\n    const { chainId } = useMoralis();\r\n    const NFTCollections = getCollectionsByChain(chainId);\r\n    \r\n    function onChange(value, collection, image, type) { \r\n        setInputValue(collection.collection);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Select\r\n            showSearch\r\n            style={{width: \"500px\",\r\n                    marginLeft: \"20px\",\r\n                    fontSize:\"large\",\r\n                    color:\"gray\" }}\r\n            placeholder=\"Find a Collection\"\r\n            optionFilterProp=\"children\"\r\n         onChange={onChange}\r\n        >   \r\n            {NFTCollections && \r\n                NFTCollections.map((asset, i) => \r\n                <Option value={asset.name} collection={asset} image={asset.image} type={asset.type} key= {i} style={{fontSize:\"large\", color:\"gray\"}}>\r\n                    <img src={asset.image || \"\" } style={{borderRadius:\"50%\", height:\"28px\", width:\"28px\", marginRight:\"25px\"}} />\r\n                    {asset.name}</Option>\r\n                )\r\n            }   \r\n        </Select>\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default SearchCollections;","import React, { useEffect, useState } from \"react\";\r\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\r\nimport { getNativeByChain } from \"helpers/networks\";\r\nimport { getEllipsisTxt, getEllipsisNormal } from \"helpers/formatters\";\r\nimport { Alert, Card, Modal, Badge, Spin, Button, notification  } from \"antd\";\r\nimport { ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport { getCollectionsByChain } from \"helpers/collections\";\r\nimport SearchCollections from \"../SearchCollections\";\r\n\r\n// import NFT_ABI from \"contracts/abi/NFT_ABI.json\"\r\nimport MARKET_ABI from  \"contracts/abi/MARKET_ABI.json\"\r\nimport \"../../cart.css\"\r\n\r\nconst MARKETPLACE_ADDR = process.env.REACT_APP_PANGEA_MARKETPLACE_ADDR\r\nconst NFT_TOKEN_ADDR = process.env.REACT_APP_PANGEA_TOKEN_ADDR;\r\nconst { Meta } = Card;\r\n\r\nconst key = 'updatable'\r\nlet cart = [] \r\nlet priceList = []\r\nvar totalPrice\r\n\r\n\r\nconst Cart = props => {\r\n\r\n  return (\r\n  <Modal\r\n  title={props.title}\r\n  visible={props.state}\r\n  onCancel={props.closeCart}\r\n  cancelText=\"Return\"\r\n  onOk={props.closeCart}\r\n  \r\n  footer={[\r\n    <Button type=\"primary\" onClick={props.buy}>\r\n      Order\r\n    </Button>,\r\n    <Button type=\"primary\" onClick={props.closeCart}>\r\n      Clear\r\n    </Button>,\r\n    <Button onClick={props.clear}>\r\n      Return\r\n    </Button>,\r\n  ]}\r\n  >\r\n    <Spin spinning={props.loading}>\r\n      \r\n        <div id=\"cartGrid\">\r\n            <div class=\"head\" style={{width:\"64px\", background:\"none\"}}></div>\r\n            <div class=\"head\" style={{width:\"64px\" }}>No.</div>\r\n            <div class=\"head\" style={{width:\"250px\"}}>Item</div>\r\n            <div class=\"head\" style={{width:\"80px\"}}>Price <p style={{fontSize:\"10px\"}}>(AVAX)</p></div>\r\n          {props.content}\r\n            \r\n        </div>\r\n      </Spin>\r\n    </Modal>\r\n    )\r\n  }\r\n\r\nconst MetaInfo = ({nftMeta, cryptoSymbol, utcTimeStamp}) => (\r\n  <div style={{width:\"450px\"}}>  \r\n    <pre id=\"metaAsset\"  style={{color:\"GrayText\", fontSize:\"20px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"center\", fontWeight: \"bolder\", textDecoration:\"underline\"}}>{nftMeta.meta?.name}</pre>\r\n    <pre id=\"metaSeller\" style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", overflow: \"hidden\", textOverflow: \"ellipsis\"}}><b>Company     : </b>{nftMeta.meta?.company? nftMeta.meta.company : nftMeta.name}</pre>\r\n    <pre id=\"metaSeller\" style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", overflow: \"hidden\", textOverflow: \"ellipsis\"}}><b>Account ID  : </b>{getEllipsisTxt(nftMeta.owner, 8)}</pre>\r\n    <pre id=\"metaPrice\"  style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\"}}><b>Token ID    : </b>{nftMeta.tokenId}</pre>\r\n    <pre id=\"metaPrice\"  style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\"}}><b>Price       : </b>{nftMeta.priceEth} {cryptoSymbol}</pre>\r\n    <pre id=\"metaTime\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", whiteSpace:\"pre-wrap\"}}><b>Timestamp   : </b>{utcTimeStamp}</pre>\r\n    <pre id=\"metaTime\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\"}}><b>Type        : </b>{nftMeta.meta?.type}</pre>\r\n    <pre id=\"metaDesc\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", whiteSpace:\"pre-wrap\"}}><b>Description : </b>{nftMeta.meta?.description}</pre>\r\n    <pre id=\"metaData\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", whiteSpace:\"pre-wrap\"}}><b>Meta:</b></pre>\r\n    <pre id=\"metaData\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"96px\", marginTop:\"-10px\", textAlign:\"left\", whiteSpace:\"pre-wrap\"}}>{JSON.stringify(nftMeta)}</pre>\r\n  </div>\r\n)\r\n\r\nconst MenuInfo = ({nftMeta, cryptoSymbol, utcTimeStamp}) => (\r\n  <div style={{width:\"450px\"}}>  \r\n    <pre id=\"metaAsset\"  style={{color:\"GrayText\", fontSize:\"20px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"center\", fontWeight: \"bolder\", textDecoration:\"underline\"}}>{nftMeta.meta?.name}</pre>\r\n    <pre id=\"metaPrice\"  style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\"}}><b>Price       : </b>{nftMeta.priceEth} {cryptoSymbol}</pre>\r\n    <pre id=\"metaTime\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\"}}><b>Type        : </b>{nftMeta.meta?.type}</pre>\r\n    <pre id=\"metaDesc\"   style={{color:\"GrayText\", fontSize:\"16px\", maxWidth:\"auto\", height:\"auto\", marginTop:\"-10px\", textAlign:\"left\", whiteSpace:\"pre-wrap\"}}><b>Description : </b>{nftMeta.meta?.description}</pre>\r\n  </div>\r\n)\r\n\r\nfunction NFTBalance() {\r\n  const[debug, setDebug] = useState(\"\")\r\n  const [utcTimeStamp, setUtcTimeStamp] = useState(null);\r\n  const { Moralis, chainId, account, web3, user } = useMoralis();\r\n  const [visible, setVisibility] = useState(false);\r\n\r\n  const [nftToBuy, setNftToBuy] = useState(null);\r\n  const [nftImage, setNftImage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [ordersUploading, setOrdersUploading] = useState(false);\r\n\r\n  const [setCart, resetCart] = useState(cart);\r\n  const [setTotalPrice, resetTotalPrice] = useState();\r\n  const contractProcessor = useWeb3ExecuteFunction()\r\n  const [cartVisible, setCartVisible] = useState(false)\r\n  const [nftCollections, setNftCollections] = useState([])\r\n  const NFTCollectionsList = getCollectionsByChain(chainId);\r\n  const [inputValue, setInputValue] = useState({addr:\"0x0\", name:\"Market\", image:\"\", type:\"Honeycomb\"})\r\n  const nativeCrypto = getNativeByChain(chainId)\r\n\r\n\r\n  useEffect(async () => {\r\n    getMarketNftCollections()\r\n\r\n  }, [inputValue, chainId, account])\r\n\r\n  useEffect(async () => {\r\n    setInputValue({addr:\"0x0\", name:\"Market\", image:\"\", type:\"Honeycomb\"})\r\n  }, [chainId])\r\n\r\n  useEffect(async () => {\r\n    resetCart(cart)\r\n  }, [cart])\r\n\r\n  \r\n  function removeFromCart(nft, index)\r\n  {\r\n    cart.splice(index, 1)\r\n    priceList.splice(index, 1)\r\n    resetTotalPrice(priceList.reduce((x,y) => x + parseFloat(y), 0)) \r\n    resetCart(cart)\r\n  }\r\n\r\n  function addingToCart(item){\r\n    cart.push(item)\r\n    priceList.push(item.priceEth)\r\n    totalPrice = priceList.reduce((x,y) => x + parseFloat(y), 0)\r\n    resetTotalPrice(totalPrice)\r\n\r\n    notification.open({\r\n      key,\r\n      message: 'Adding to Cart',\r\n      description: '🛒 ✚ Cart Count ' + cart.length,\r\n      placement: 'topLeft'\r\n    });\r\n\r\n  };\r\n\r\n  async function createBulkOrders(){\r\n    var description = \"Order request to \" + inputValue.name + \" from \" + user.attributes.username\r\n    const data = JSON.stringify({\r\n        name:user.attributes.username, \r\n        company:inputValue.name, \r\n        description: description, \r\n        meta: setCart, \r\n        type: inputValue.type, \r\n        image: inputValue.image, \r\n        timestamp: Date.now()\r\n    })    \r\n\r\n    try {\r\n      setOrdersUploading(true)\r\n\r\n        const metadataFile = new Moralis.File(\"metadata.json\", {base64 : btoa((data))});\r\n        await metadataFile.saveIPFS();\r\n        const metadataURI = metadataFile.ipfs();\r\n        \r\n        /* after file is uploaded to IPFS, pass the URL to save it on the blockchain */\r\n        submitBulkOrders(metadataURI)\r\n    } catch (error) {\r\n        alert('Error uploading metadataURI: ' + JSON.stringify(data, null, 2))\r\n        setOrdersUploading(false)\r\n    }  \r\n  }\r\n  \r\n  async function submitBulkOrders(metaURI){\r\n\r\n    const priceEth = Moralis.Units.ETH(setTotalPrice)\r\n    const Orders = Moralis.Object.extend(\"Orders\");\r\n    const newOrder = new Orders();\r\n    newOrder.save({\r\n        company: inputValue.name,\r\n        type: inputValue.type,\r\n        tokenURI: metaURI, \r\n        nftContract: NFT_TOKEN_ADDR, \r\n        marketplace: MARKETPLACE_ADDR, \r\n        price: priceEth, \r\n        target: account,\r\n        bulk: true\r\n    })\r\n    \r\n    newOrder.save()\r\n    .then((newOrder) => {\r\n      // The object was saved successfully.\r\n      alert(\"Order Created \" + JSON.stringify(newOrder, null, 2))\r\n      setOrdersUploading(false)\r\n    }, (error) => {\r\n      // The save failed.\r\n      // error is a Moralis.Error with an error code and message.\r\n        alert('Error uploading newOrder: ' + JSON.stringify(error, null, 2))\r\n        setOrdersUploading(false)\r\n    });\r\n    setOrdersUploading(false)\r\n    \r\n    resetCart([])\r\n    resetTotalPrice()\r\n  }\r\n\r\n  async function buyNFT(nft) {\r\n\r\n    setLoading(true)\r\n    const price = Moralis.Units.ETH(nft.priceEth)\r\n    const options = {\r\n      contractAddress: MARKETPLACE_ADDR,\r\n      functionName: \"createMarketSale\",\r\n      abi: MARKET_ABI,\r\n      msgValue: price,\r\n      params: {\r\n        nftContract: NFT_TOKEN_ADDR,\r\n        itemId: nft.itemId\r\n      },\r\n    }\r\n\r\n    await contractProcessor.fetch({\r\n      params: options,\r\n      onSuccess: () => {\r\n        alert(\"Transaction Successful, Item Purchased!\")\r\n        updateSoldMarketItem(nft)\r\n        setVisibility(false)\r\n        setLoading(false)\r\n      },\r\n      onError: (error) => {\r\n        alert(\"Transaction Failed!, something went wrong...\\n\" + JSON.stringify(error, null, 2))\r\n        setVisibility(false)\r\n        setLoading(false)\r\n      }\r\n    })\r\n  }\r\n\r\n  async function updateSoldMarketItem(nft){\r\n\r\n    const id = nft.objectId\r\n    const marketList = Moralis.Object.extend(\"Assets\")\r\n    const query = new Moralis.Query(marketList);\r\n    await query.get(id)\r\n      .then(obj => {\r\n        obj.set(\"sold\", true)\r\n        obj.set(\"owner\", account)\r\n        obj.set(\"status\", \"Completed\")\r\n        obj.save()\r\n      })\r\n\r\n    const orderId = nft.orderId\r\n    const orderList = Moralis.Object.extend(\"Orders\")\r\n    const update = new Moralis.Query(orderList);\r\n    await update.get(orderId)\r\n      .then(obj => {\r\n        obj.set(\"status\", \"In-Progress\")\r\n        obj.set(\"tokenId\", nft.tokenId)\r\n        obj.save()\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  async function getMarketNftCollections(){\r\n    var debug\r\n\r\n    const Assets = Moralis.Object.extend(\"Assets\");\r\n    const query = new Moralis.Query(Assets);\r\n    query.equalTo(\"confirmed\", true)\r\n    query.equalTo(\"sold\", false)\r\n    query.equalTo(\"brand\", inputValue.name)\r\n     \r\n    query.limit(200);\r\n    const fetchMarketItems = await query.find(); \r\n\r\n    const web3 = await Moralis.enableWeb3();\r\n    const optionsNFT = { chain: chainId, address: inputValue.addr, token_address: NFT_TOKEN_ADDR, limit:200 };\r\n    const marketNFTs = await Moralis.Web3API.account.getNFTsForContract(optionsNFT); \r\n   \r\n    const data = JSON.parse(JSON.stringify(fetchMarketItems))\r\n    if(marketNFTs?.result !== null){\r\n      \r\n      var items = await Promise.all(marketNFTs?.result?.map(async i => {\r\n        \r\n        var element = data.find(function (obj) {\r\n          debug += \"\\n find \" + i.token_id + \" \" + obj.tokenId\r\n          if (obj.tokenId === i.token_id){\r\n            return obj\r\n          }\r\n        })\r\n        if(element !== null){\r\n          if(element?.brand === inputValue.name || element?.target === account){\r\n            const price = element?.price? element.price : 0\r\n\r\n            const priceEth = Moralis.Units.FromWei(price)\r\n            const priceUSD = \"\"\r\n            \r\n            var keyIdx = 0\r\n            const meta = JSON.parse(i.metadata)\r\n            let item = {\r\n              key: keyIdx++,\r\n              priceEth,\r\n              priceUSD,\r\n              objectId: element?.objectId,\r\n              tokenId: i.token_id,\r\n              itemId: element?.itemId,\r\n              seller: element?.seller,\r\n              owner: i.owner_of,\r\n              image: meta?.image,\r\n              name: i.name,\r\n              nftContract: element?.token_address,\r\n              sold: element?.sold,\r\n              confirmed: element?.confirmed,\r\n              timestamp: element?.updatedAt,\r\n              meta: meta,\r\n              target: element?.target,\r\n              orderId: element?.orderId,\r\n              brand: element?.brand\r\n            }\r\n            return item\r\n          }\r\n        }\r\n      }))\r\n      items = items.filter(Boolean)\r\n      setNftCollections(items)\r\n    \r\n    }\r\n    \r\n  }\r\n\r\n  const handleBuyClick = (nft, img) => {\r\n    var dt = new Date(nft.meta?.timestamp)\r\n    var dt_str = dt.toString() \r\n    if (dt_str == \"Invalid Date\") { dt_str = \"Timestamp Not Available!\" }\r\n\r\n    setNftImage(img)\r\n    setUtcTimeStamp(dt_str)\r\n    setNftToBuy(nft)\r\n    setVisibility(true)\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sticky\"  style={{textAlign:\"center\", top:\"62px\", zIndex:\"1\"}}/>{debug}\r\n      <div style={{ position:\"absolute\", textAlign:\"center\", marginLeft:\"auto\", marginRight:\"auto\", top:\"62px\", zIndex:\"2\"}}>\r\n        <div style={{display:\"inline-block\", textAlign:\"center\", paddingTop:\"15px\", cursor:\"pointer\"}}\r\n          >\r\n          <Cart\r\n            title={inputValue.name}\r\n            content={cart}\r\n            buy={()=> createBulkOrders()}\r\n            itemKey={key}\r\n            clear={()=> setCartVisible(false)}\r\n            state={cartVisible}\r\n            closeCart={()=>setCartVisible(false)} \r\n            loading={ordersUploading}\r\n            content={\r\n              <>\r\n              {(setCart.length > 0)? setCart.map((nft, index) => (\r\n                <>\r\n                <div id={\"c0\" + nft.tokenId} class=\"cell\">\r\n                    <Button key={nft.tokenId} onClick={() => removeFromCart(nft,index)} style={{marginTop:\"-5px\"}}>🗑️</Button>\r\n                </div>\r\n                <div id={\"c1\" + nft.tokenId} class=\"cell\">x1</div>\r\n                <div id={\"c2\" + nft.tokenId} class=\"cell\">{nft.meta?.name}</div>\r\n                <div id={\"c3\" + nft.tokenId} class=\"cell\">{nft.priceEth}</div>\r\n                \r\n                </>\r\n            )) : (\r\n                <>\r\n                <div class=\"cell\"></div>\r\n                <div class=\"cell\"></div>\r\n                <h1 style={{display:\"block\", fontSize:\"large\", color:\"gray\", borderBottom:\"1px solid lightgray\"}} >Cart Is Empty...</h1>  \r\n                <div class=\"cell\"></div>   \r\n                </>\r\n            )}\r\n            {(setCart.length  > 0) &&(\r\n                <>\r\n                <div class=\"cell\"></div>\r\n                <div class=\"cell\">x{cart.length}</div>\r\n                <div class=\"cell\">Total Price</div>\r\n                <div id=\"sum\" class=\"cell\">{setTotalPrice}</div>\r\n                </>\r\n            )}\r\n            </>\r\n          }\r\n          />\r\n          <div>\r\n            <p style={{display:\"inline-block\", color:\"gray\", fontSize:\"18px\"}}>{cart.length > 0 ? \"x\" + cart.length : \"\"}</p>\r\n            <p onClick={()=>setCartVisible(true)} style={{display:\"inline-block\", color:\"gray\"}}>🛒</p>\r\n          </div>\r\n        </div>\r\n        <SearchCollections setInputValue={setInputValue}/>   \r\n        <h1 style={{display:\"block\", fontSize:\"x-large\", color:\"gray\"}} >{(inputValue.name)}</h1>     \r\n        <div style={{width:\"100px\", marginLeft:\"auto\", marginRight:\"auto\"}}>\r\n          <img src={inputValue.image || require(\"../../img/hexic.png\").default} className=\"zoomIn\" style={{ textAlign:\"center\", alignContent:\"center\", width:\"150px\", height:\"100px\", borderRadius:\"50%\"}} />\r\n        </div> \r\n      </div>\r\n      \r\n      <div style={{textAlign:\"center\", marginTop:\"125px\", zIndex:\"0\"}}>\r\n        {chainId && (\r\n        <div style={{display:\"block\", textAlign:\"center\", width:\"1080px\", transform: \"scale(0.8)\"}}>\r\n          {(inputValue.name !== \"Market\" && inputValue.type === \"Honeycomb\") && (\r\n          <ul id=\"grid\" style={{backGroundColor:\"black\", top:\"-580px\"}} className=\"clear\">\r\n            \r\n              { nftCollections && nftCollections.map((nft, index) => (\r\n                  \r\n                      <li key={nft?.key} className=\"overflow-hidden\">\r\n                        <div className=\"hexagon\">\r\n                          \r\n                          <div className=\"hexText bg-black\" >\r\n                            <p className=\"font-xl\" >{nft?.meta?.name? getEllipsisNormal(nft.meta.name, 12) : nft?.name}</p>\r\n                            <p className=\"font-large\">{nft?.priceEth} {nativeCrypto}</p>\r\n                            \r\n                          </div>\r\n                          <img id={nft?.key} src={nft?.meta?.image? nft?.meta.image : JSON.parse(nft?.meta)?.image} className=\"zoomIn\" style={{cursor:\"pointer\", position:\"absolute\", marginTop:\"0\", zIndex:\"-1\"}} />\r\n                          {(nft?.confirmed != false)? (\r\n                            <button id=\"btn-buy\" className=\"rounded\" style={{zIndex:\"2\", marginTop:\"80%\"}} onClick={() => handleBuyClick(nft, (nft.meta?.image? nft.meta.image : JSON.parse(nft.meta)?.image))}>Buy</button>\r\n                          ) : (\r\n                            <button id=\"btn-notForSale\" className=\"rounded\" style={{zIndex:\"2\", marginTop:\"80%\"}} onClick={() => handleBuyClick(nft, (nft.meta?.image? nft.meta?.image : JSON.parse(nft.meta)?.image))}>Buy</button>\r\n                          ) }\r\n                          \r\n                        </div>\r\n                      </li> \r\n              ))\r\n            }\r\n          </ul>)}\r\n          {(inputValue.name !== \"Market\" && inputValue.type === \"Cafe\") && (\r\n            <div style={{marginTop:\"-0px\"}}>\r\n              { nftCollections && nftCollections.map((nft, index) => (\r\n                <>\r\n                <div style={{height:\"240px\", marginLeft:\"15px\", display:\"inline-block\"}}>\r\n                  <ul id=\"grid\" style={{backGroundColor:\"black\", width:\"520px\", display:\"inline-block\"}} className=\"clear\">\r\n                    <li key={nft?.key} className=\"overflow-hidden\">\r\n                      <div className=\"hexagon\">\r\n                        <img id={nft?.key} src={nft?.meta?.image? nft?.meta.image : JSON.parse(nft?.meta)?.image} className=\"zoomIn\" style={{cursor:\"pointer\", position:\"absolute\", marginTop:\"0\", zIndex:\"-1\"}} />\r\n                      </div>\r\n                    </li> \r\n                  </ul>\r\n                  <div style={{marginLeft:\"-35%\", marginTop:\"0\", position:\"absolute\", display:\"inline-block\"}}>\r\n                    <Card size=\"small\"\r\n                      style={{width:\"380px\", paddingRight:\"15px\"}} \r\n                      actions={[\r\n                        <>\r\n                        {(nft?.confirmed != false)? (\r\n                          <button id=\"btn-buy\" className=\"rounded\" style={{zIndex:\"2\", marginTop:\"0\", width:\"88px\"}} onClick={() => handleBuyClick(nft, (nft.meta?.image? nft.meta.image : JSON.parse(nft.meta)?.image))}>Buy</button>\r\n                        ) : (\r\n                          <button id=\"btn-notForSale\" className=\"rounded\" style={{zIndex:\"2\"}} onClick={() => handleBuyClick(nft, (nft.meta?.image? nft.meta?.image : JSON.parse(nft.meta)?.image))}>Buy</button>\r\n                        ) }\r\n                        </>,\r\n                        <ShoppingCartOutlined style={{transform: \"scale(1.8)\"}} onClick={() => addingToCart(nft)}/>\r\n                      ]}\r\n                      >\r\n                      <div className=\"\" >\r\n                        <p className=\"\"  style={{textAlign:\"left\"}}>{nft?.meta?.name? nft.meta.name : nft?.name}</p>\r\n                        <p className=\"font-large\" style={{textAlign:\"left\"}}>{nft?.priceEth} {nativeCrypto}</p>\r\n                        <p className=\"font-large\" style={{textAlign:\"left\"}}>{getEllipsisNormal(nft?.meta.description, 45)}</p>  \r\n                      </div>\r\n                    </Card>\r\n                  </div>\r\n                </div>\r\n                  {/* )} */}\r\n                 </>\r\n              ))}\r\n              \r\n            </div>\r\n          )}\r\n          {inputValue.name == \"Market\" && (\r\n          <ul id=\"grid\" style={{backGroundColor:\"black\"}} className=\"clear\">\r\n            \r\n              { NFTCollectionsList && NFTCollectionsList.map((nft, index) => (\r\n                  \r\n                      <li key={nft.key} className=\"overflow-hidden\">\r\n                        <div className=\"hexagon\" style={{width:\"100%\", alignContent:\"center\"}}>\r\n                          \r\n                          <img id={nft.key} src={nft.image} className=\"zoomIn\" style={{cursor:\"pointer\", position:\"absolute\", marginTop:\"0\", zIndex:\"-1\"}} />\r\n                          <button id=\"btn-explore\" className=\"rounded\" style={{zIndex:\"1\"}} onClick={() => setInputValue({addr: nft.addr, name:nft.name, image:nft.image, type:nft.type})}><p id=\"btn-explore-txt\">{(nft.name)}</p></button>\r\n                          \r\n                        </div>\r\n                      </li> \r\n              ))\r\n            }\r\n          </ul>)}\r\n        </div> \r\n        )}\r\n        \r\n      </div>\r\n\r\n      {(nftToBuy?.confirmed != false) ? (\r\n        <Modal\r\n          title={`${nftToBuy?.meta?.name}`}\r\n          visible={visible}\r\n          onCancel={() => setVisibility(false)}\r\n          onOk={() => buyNFT(nftToBuy)}\r\n          okText=\"Buy\"\r\n          footer={[\r\n            <>\r\n            {(inputValue.type === \"Cafe\") && (\r\n            <ShoppingCartOutlined style={{transform: \"scale(1.8)\", marginRight:\"15px\"}} \r\n              onClick={() => addingToCart(nftToBuy)}/>\r\n            )}\r\n            </>,\r\n            <Button onClick={() => setVisibility(false)}>\r\n              Return\r\n            </Button>,\r\n            <Button type=\"primary\" onClick={() => buyNFT(nftToBuy)}>\r\n              Buy\r\n            </Button>,\r\n          ]}\r\n         >\r\n          <Spin spinning={loading} size=\"large\" tip=\"In Progress...\">\r\n            <div style={{display:\"block\",\r\n                width: \"250px\",\r\n                marginRight:\"auto\",\r\n                marginLeft:\"auto\",\r\n                textAlign:\"center\"}}>\r\n              <img\r\n                  src={nftImage}\r\n                  style={{ \r\n                  display:\"block\",\r\n                  width: \"250px\",\r\n                  borderRadius: \"10px\",\r\n                  marginTop: \"-15px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              />\r\n              <Badge.Ribbon text={`${nftToBuy?.priceEth} ${nativeCrypto}`} color=\"green\"></Badge.Ribbon>\r\n            </div>\r\n\r\n                <Alert\r\n                message=\"This NFT is for purchase\"\r\n                type=\"success\"\r\n                style={{\r\n                  width: \"480px\",\r\n                  margin: \"auto\",\r\n                  borderRadius: \"10px\",\r\n                  marginBottom: \"15px\",\r\n                  textAlign:\"center\"\r\n                }}\r\n              /> \r\n              {inputValue.type === \"Honeycomb\"? (\r\n                <MetaInfo nftMeta={nftToBuy} cryptoSymbol={nativeCrypto} utcTimeStamp={utcTimeStamp}/>\r\n              ) : (\r\n                <MenuInfo nftMeta={nftToBuy} cryptoSymbol={nativeCrypto} utcTimeStamp={utcTimeStamp}/>  \r\n              )}\r\n            </Spin>\r\n          </Modal>\r\n        ): (\r\n          <Modal\r\n            title={`${nftToBuy?.name} - ${nftToBuy?.meta?.name}`}\r\n            visible={visible}\r\n            onCancel={() => setVisibility(false)}\r\n            onOk={() => setVisibility(false)}\r\n            okText=\"Ok\"\r\n          >\r\n            <Spin spinning={loading} size=\"large\" tip=\"In Progress...\">\r\n              <div style={{display:\"block\",\r\n                  width: \"250px\",\r\n                  marginRight:\"auto\",\r\n                  marginLeft:\"auto\",\r\n                  textAlign:\"center\"}}>\r\n                <img\r\n                  src={nftImage}\r\n                  style={{display:\"block\",\r\n                    width: \"250px\",\r\n                    borderRadius: \"10px\",\r\n                    marginTop: \"-15px\",\r\n                    marginBottom: \"15px\",\r\n                  }}\r\n                />\r\n                <Badge.Ribbon text={`${nftToBuy?.priceEth} ${nativeCrypto}`} color=\"black\"></Badge.Ribbon>\r\n              </div>\r\n              <Alert\r\n                message=\"This NFT is currently not for purchase\"\r\n                type=\"warning\"\r\n                style={{\r\n                  width: \"480px\",\r\n                  margin: \"auto\",\r\n                  borderRadius: \"10px\",\r\n                  marginBottom: \"15px\",\r\n                  textAlign:\"center\"\r\n                }}\r\n                />\r\n                {inputValue.type === \"Honeycomb\"? (\r\n                  <MetaInfo nftMeta={nftToBuy} cryptoSymbol={nativeCrypto} utcTimeStamp={utcTimeStamp}/>\r\n                ) : (\r\n                  <MenuInfo nftMeta={nftToBuy} cryptoSymbol={nativeCrypto} utcTimeStamp={utcTimeStamp}/>  \r\n                )}\r\n            </Spin>\r\n          </Modal>\r\n            )\r\n          }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NFTBalance;\r\n","import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\r\nimport { getEllipsisTxt } from \"../helpers/formatters\";\r\nimport Blockie from \"./Blockie\";\r\nimport { Input } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nfunction AddressInput(props) {\r\n  const input = useRef(null);\r\n  const { web3 } = useMoralis();\r\n  const [address, setAddress] = useState(\"\");\r\n  const [validatedAddress, setValidatedAddress] = useState(\"\");\r\n  const [isDomain, setIsDomain] = useState(false);\r\n  const {\r\n    resolve: { resolveDomain },\r\n  } = useMoralisWeb3Api();\r\n\r\n  useEffect(() => {\r\n    if (validatedAddress) props.onChange(isDomain ? validatedAddress : address);\r\n  }, [props, validatedAddress, isDomain, address]);\r\n\r\n  const updateAddress = useCallback(\r\n    async (value) => {\r\n      setAddress(value);\r\n      if (isSupportedDomain(value)) {\r\n        const processPromise = function (promise) {\r\n          promise\r\n            .then((addr) => {\r\n              setValidatedAddress(addr);\r\n              setIsDomain(true);\r\n            })\r\n            .catch(() => {\r\n              setValidatedAddress(\"\");\r\n            });\r\n        };\r\n        if (value.endsWith(\".eth\")) {\r\n          processPromise(web3.eth.ens.getAddress(value));\r\n        } else {\r\n          processPromise(\r\n            resolveDomain({\r\n              domain: value,\r\n            }).then((r) => r.address)\r\n          );\r\n        }\r\n      } else if (value.length === 42) {\r\n        setValidatedAddress(getEllipsisTxt(value, 10));\r\n        setIsDomain(false);\r\n      } else {\r\n        setValidatedAddress(\"\");\r\n        setIsDomain(false);\r\n      }\r\n    },\r\n    [resolveDomain, web3.eth.ens]\r\n  );\r\n\r\n  const Cross = () => (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"22\"\r\n      height=\"22\"\r\n      viewBox=\"0 0 24 24\"\r\n      strokeWidth=\"2\"\r\n      stroke=\"#E33132\"\r\n      fill=\"none\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      onClick={() => {\r\n        setValidatedAddress(\"\");\r\n        setIsDomain(false);\r\n        setTimeout(function () {\r\n          input.current.focus();\r\n        });\r\n      }}\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n      <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\r\n      <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\r\n    </svg>\r\n  );\r\n\r\n  return (\r\n    <Input\r\n      ref={input}\r\n      size=\"large\"\r\n      placeholder={props.placeholder ? props.placeholder : \"Public address\"}\r\n      prefix={\r\n        isDomain || address.length === 42 ? (\r\n          <Blockie address={(isDomain ? validatedAddress : address).toLowerCase()} size={8} scale={3} />\r\n        ) : (\r\n          <SearchOutlined />\r\n        )\r\n      }\r\n      suffix={validatedAddress && <Cross />}\r\n      autoFocus={props.autoFocus}\r\n      value={isDomain ? `${address} (${getEllipsisTxt(validatedAddress)})` : validatedAddress || address}\r\n      onChange={(e) => {\r\n        updateAddress(e.target.value);\r\n      }}\r\n      disabled={validatedAddress}\r\n      style={validatedAddress ? { ...props?.style, border: \"1px solid rgb(33, 191, 150)\" } : { ...props?.style }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction isSupportedDomain(domain) {\r\n  return [\".eth\", \".crypto\", \".coin\", \".wallet\", \".bitcoin\", \".x\", \".888\", \".nft\", \".dao\", \".blockchain\"].some((tld) =>\r\n    domain.endsWith(tld)\r\n  );\r\n}\r\n\r\nexport default AddressInput;\r\n","import { useERC20Balance } from \"hooks/useERC20Balance\";\r\nimport { useMoralis, useNativeBalance } from \"react-moralis\";\r\nimport { Image, Select } from \"antd\";\r\nimport { useMemo } from \"react\";\r\n\r\nexport default function AssetSelector({ setAsset, style }) {\r\n  const { assets } = useERC20Balance();\r\n  const { data: nativeBalance, nativeToken } = useNativeBalance();\r\n  const { Moralis } = useMoralis();\r\n\r\n  const fullBalance = useMemo(() => {\r\n    if (!assets || !nativeBalance) return null;\r\n    return [\r\n      ...assets,\r\n      {\r\n        balance: nativeBalance.balance,\r\n        decimals: null ? nativeToken.decimals : 18,//nativeToken.decimals,\r\n        name: null ? nativeToken.name : \"avax\",\r\n        symbol: null ? nativeToken.symbol : \"eth\",\r\n        token_address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\r\n      },\r\n    ];\r\n  }, [assets, nativeBalance, nativeToken]);\r\n\r\n  function handleChange(value) {\r\n    const token = fullBalance.find((token) => token.token_address === value);\r\n    setAsset(token);\r\n  }\r\n\r\n  return (\r\n    <Select onChange={handleChange} size=\"large\" style={style}>\r\n      {fullBalance &&\r\n        fullBalance.map((item, key) => (\r\n          <Select.Option value={item[\"token_address\"]} key={item[\"token_address\"]}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                width: \"100%\",\r\n                gap: \"8px\",\r\n              }}\r\n            >\r\n              <Image\r\n                src={item.logo || \"https://etherscan.io/images/main/empty-token.png\"}\r\n                alt=\"nologo\"\r\n                width=\"24px\"\r\n                height=\"24px\"\r\n                preview={false}\r\n                style={{ borderRadius: \"15px\" }}\r\n              />\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  width: \"90%\",\r\n                }}\r\n              >\r\n                <p>{item.symbol}</p>\r\n                <p style={{ alignSelf: \"right\" }}>\r\n                  ({parseFloat(Moralis.Units.FromWei(item.balance, item.decimals).toFixed(6))})\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Select.Option>\r\n        ))}\r\n    </Select>\r\n  );\r\n}\r\n","import { CreditCardOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input, notification } from \"antd\";\r\nimport Text from \"antd/lib/typography/Text\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport AddressInput from \"../../AddressInput\";\r\nimport AssetSelector from \"./AssetSelector\";\r\n\r\nconst styles = {\r\n  card: {\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    outline: \"none\",\r\n    fontSize: \"16px\",\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    textverflow: \"ellipsis\",\r\n    appearance: \"textfield\",\r\n    color: \"#041836\",\r\n    fontWeight: \"700\",\r\n    border: \"none\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  select: {\r\n    marginTop: \"20px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  textWrapper: { maxWidth: \"80px\", width: \"100%\" },\r\n  row: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    gap: \"10px\",\r\n    flexDirection: \"row\",\r\n  },\r\n};\r\n\r\nfunction Transfer() {\r\n  const { Moralis } = useMoralis();\r\n  const [receiver, setReceiver] = useState();\r\n  const [asset, setAsset] = useState();\r\n  const [tx, setTx] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [isPending, setIsPending] = useState(false);\r\n\r\n  useEffect(() => {\r\n    asset && amount && receiver ? setTx({ amount, receiver, asset }) : setTx();\r\n  }, [asset, amount, receiver]);\r\n\r\n  const openNotification = ({ message, description }) => {\r\n    notification.open({\r\n      placement: \"bottomRight\",\r\n      message,\r\n      description,\r\n      onClick: () => {\r\n        console.log(\"Notification Clicked!\");\r\n      },\r\n    });\r\n  };\r\n\r\n  async function transfer() {\r\n    const { amount, receiver, asset } = tx;\r\n\r\n    let options = {};\r\n\r\n    switch (asset.token_address) {\r\n      case \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\":\r\n        options = {\r\n          native: \"native\",\r\n          amount: Moralis.Units.ETH(amount),\r\n          receiver,\r\n          awaitReceipt: false,\r\n        };\r\n        break;\r\n      default:\r\n        options = {\r\n          type: \"erc20\",\r\n          amount: Moralis.Units.Token(amount, asset.decimals),\r\n          receiver,\r\n          contractAddress: asset.token_address,\r\n          awaitReceipt: false,\r\n        };\r\n    }\r\n\r\n    setIsPending(true);\r\n    const txStatus = await Moralis.transfer(options);\r\n\r\n    txStatus\r\n      .on(\"transactionHash\", (hash) => {\r\n        openNotification({\r\n          message: \"🔊 New Transaction\",\r\n          description: `${hash}`,\r\n        });\r\n        console.log(\"🔊 New Transaction\", hash);\r\n      })\r\n      .on(\"receipt\", (receipt) => {\r\n        openNotification({\r\n          message: \"📃 New Receipt\",\r\n          description: `${receipt.transactionHash}`,\r\n        });\r\n        console.log(\"🔊 New Receipt: \", receipt);\r\n        setIsPending(false);\r\n      })\r\n      .on(\"error\", (error) => {\r\n        openNotification({\r\n          message: \"📃 Error\",\r\n          description: `${error.message}`,\r\n        });\r\n        console.error(error);\r\n        setIsPending(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div style={styles.card}>\r\n      <div style={styles.tranfer}>\r\n        <div style={styles.header}>\r\n          <h3>Transfer Assets</h3>\r\n        </div>\r\n        <div style={styles.select}>\r\n          <div style={styles.textWrapper}>\r\n            <Text strong>Address:</Text>\r\n          </div>\r\n          <AddressInput autoFocus onChange={setReceiver} />\r\n        </div>\r\n        <div style={styles.select}>\r\n          <div style={styles.textWrapper}>\r\n            <Text strong>Amount:</Text>\r\n          </div>\r\n          <Input\r\n            size=\"large\"\r\n            prefix={<CreditCardOutlined />}\r\n            onChange={(e) => {\r\n              setAmount(`${e.target.value}`);\r\n            }}\r\n          />\r\n        </div>\r\n        <div style={styles.select}>\r\n          <div style={styles.textWrapper}>\r\n            <Text strong>Asset:</Text>\r\n          </div>\r\n          <AssetSelector setAsset={setAsset} style={{ width: \"100%\" }} />\r\n        </div>\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          loading={isPending}\r\n          style={{ width: \"100%\", marginTop: \"25px\" }}\r\n          onClick={() => transfer()}\r\n          disabled={!tx}\r\n        >\r\n          Transfer💸\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Transfer;\r\n","export default __webpack_public_path__ + \"static/media/drone-comm.bb8b7f6b.png\";","export default __webpack_public_path__ + \"static/media/drone-nav.ac4526d9.png\";","export default __webpack_public_path__ + \"static/media/drone-delivery.9de0b843.png\";","import comm from \"../../src/img/tokens/drone-comm.png\"\r\nimport nav from \"../../src/img/tokens/drone-nav.png\"\r\nimport delivery from \"../../src/img/tokens/drone-delivery.png\"\r\nimport recon from \"../../src/img/tokens/drone-recon.png\"\r\nimport dispatch from \"../../src/img/tokens/drone-dispatch.png\"\r\n\r\nexport const assetType = {\r\n    \"Pangea\": [\r\n      //Add Your Collections here\r\n      {\r\n        image: comm,\r\n        name: \"Communication\",\r\n      },\r\n      {\r\n        image: recon,\r\n        name: \"Observation\",\r\n      },\r\n      {\r\n        image: delivery,\r\n        name: \"Courier\",\r\n      },\r\n      {\r\n        image: nav,\r\n        name: \"Navigation\",\r\n      },\r\n      {\r\n        image: dispatch,\r\n        name: \"Emergency\",\r\n      },\r\n    ],\r\n\r\n  };\r\n  \r\n  export const getAssetType = (company) => assetType[company];","export default __webpack_public_path__ + \"static/media/drone-recon.4fcb2d67.png\";","export default __webpack_public_path__ + \"static/media/drone-dispatch.66f3f147.png\";","import { Select } from 'antd';\r\nimport { getAssetType } from \"helpers/assetType\";\r\n\r\n\r\nfunction SearchAssetType({setInputValue}){\r\n    const { Option } = Select;\r\n    const company = \"Pangea\";\r\n    const Assets = getAssetType(company);\r\n    \r\n    function onChange(value, collection, image) { \r\n        setInputValue(collection.collection);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Select\r\n            showSearch\r\n            style={{width: \"500px\",\r\n                    marginLeft: \"20px\",\r\n                    fontSize:\"large\",\r\n                    color:\"gray\" }}\r\n            placeholder=\"Select Mission Type\"\r\n            optionFilterProp=\"children\"\r\n            onChange={onChange}\r\n        >   \r\n            {Assets && \r\n                Assets.map((asset, i) => \r\n                <Option value={asset.name} collection={asset} image={asset.image} key= {i} style={{fontSize:\"large\", color:\"gray\"}}>\r\n                    <img src={asset.image || \"\" }style={{borderRadius:\"50%\", height:\"28px\", width:\"28px\", marginRight:\"25px\"}} />\r\n                    {asset.name}</Option>\r\n                )\r\n            }   \r\n        </Select>\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default SearchAssetType;","import React, { Component, useState, useEffect, memo } from 'react'\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.assetBrand = React.createRef();\r\n        this.assetName  = React.createRef();\r\n        this.assetDesc  = React.createRef();\r\n        this.assetPrice = React.createRef();\r\n        this.assetType  = React.createRef();\r\n        this.assetWeight  = React.createRef();\r\n        this.assetUnit  = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        price: \"\", \r\n        brand: \"\",\r\n        name: \"\", \r\n        description: \"\",\r\n        type: \"\",\r\n        weight: \"\",\r\n        unit: \"\"\r\n    }\r\n\r\n    onChange = (e) => { \r\n        var val = e.target.value\r\n        this.state.unit = val\r\n    }\r\n\r\n    handleSubmit = () => {\r\n\r\n        this.state.price = this.assetPrice.current.value\r\n        this.state.brand = this.assetBrand.current.value\r\n        this.state.name = this.assetName.current.value\r\n        this.state.description = this.assetDesc.current.value\r\n        this.state.type = this.assetType.current.value\r\n        this.state.weight = this.assetWeight.current.value\r\n    }\r\n    render() {\r\n        return (\r\n        <div>\r\n            <div style={{display:\"inline-block\", float:\"left\", marginTop:\"10px\", width:\"250px\"}}>\r\n            <div style={{opacity:\"0.7\"}}>\r\n                <input \r\n                    id=\"assetBrand\"\r\n                    placeholder=\"Company/Brand Name\"\r\n                    className=\"\"\r\n                    type=\"text\"\r\n                    style={{width:\"300px\"}}\r\n                    ref={this.assetBrand}\r\n                />\r\n            </div>\r\n            <div style={{opacity:\"0.7\", marginTop:\"10px\"}}>\r\n                <input \r\n                    id=\"assetName\"\r\n                    placeholder=\"Asset Name\"\r\n                    className=\"\"\r\n                    type=\"text\"\r\n                    style={{width:\"300px\"}}\r\n                    ref={this.assetName}\r\n                />\r\n            </div>\r\n            <div style={{opacity:\"0.7\", marginTop:\"10px\"}}>\r\n                <input \r\n                    id=\"assetType\"\r\n                    placeholder=\"Asset Type\"\r\n                    className=\"\"\r\n                    type=\"text\"\r\n                    style={{width:\"300px\"}}\r\n                    ref={this.assetType}\r\n                />\r\n            </div>\r\n            <div style={{display:\"inline-flex\"}}>\r\n                <div style={{opacity:\"0.7\", marginTop:\"10px\", display:\"inline-block\"}}>\r\n                    <input \r\n                        id=\"assetWeight\"\r\n                        placeholder=\"Asset Weight\"\r\n                        className=\"\"\r\n                        type=\"text\"\r\n                        style={{width:\"240px\", marginRight:\"10px\"}}\r\n                        ref={this.assetWeight}\r\n                    />\r\n                </div>\r\n                <select\r\n                    id=\"assetUnit\"\r\n                    onChange={this.onChange}\r\n                    className=\"form-control\"\r\n                    ref={this.assetUnit}\r\n                    style={{display:\"inline-block\", width:\"50px\", height:\"28px\", marginTop:\"10px\"}}\r\n                >\r\n                    <option value=\"kg\">kg</option>\r\n                    <option value=\"lb\">lb</option>\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <textarea\r\n                    id=\"assetDesc\"\r\n                    placeholder=\"Asset Description\"\r\n                    className=\"\"\r\n                    style={{width:\"300px\", height:\"120px\", marginTop:\"10px\"}}\r\n                    ref={this.assetDesc}\r\n                />\r\n            </div>\r\n            <div>\r\n                <input \r\n                    id=\"assetPrice\"\r\n                    placeholder={`Asset Price`}\r\n                    className=\"\"\r\n                    type=\"text\"\r\n                    style={{width:\"300px\"}}\r\n                    ref={this.assetPrice}\r\n                />\r\n            </div>\r\n            \r\n        </div>\r\n\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default Form;","// Autocomplete.js\r\nimport React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  padding: 5px;\r\n  text-align:center;\r\n  position:absolute;\r\n  font-size:small;\r\n  z-index:2;\r\n`;\r\n\r\nclass AutoComplete extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.clearSearchBox = this.clearSearchBox.bind(this);\r\n    }\r\n\r\n    componentDidMount({ map, mapApi } = this.props) {\r\n        const options = {\r\n            // restrict your search to a specific type of result\r\n            types: ['address'],\r\n            // restrict your search to a specific country, or an array of countries\r\n            // componentRestrictions: { country: ['gb', 'us'] },\r\n        };\r\n        this.autoComplete = new mapApi.places.Autocomplete(\r\n            this.searchInput,\r\n            options,\r\n        );\r\n        this.autoComplete.addListener('place_changed', this.onPlaceChanged);\r\n        this.autoComplete.bindTo('bounds', map);\r\n    }\r\n\r\n    componentWillUnmount({ mapApi } = this.props) {\r\n        mapApi.event.clearInstanceListeners(this.searchInput);\r\n    }\r\n\r\n    onPlaceChanged = ({ map, addplace } = this.props) => {\r\n        const place = this.autoComplete.getPlace();\r\n\r\n        if (!place.geometry) return;\r\n        if (place.geometry.viewport) {\r\n            map.fitBounds(place.geometry.viewport);\r\n        } else {\r\n            map.setCenter(place.geometry.location);\r\n            map.setZoom(17);\r\n        }\r\n\r\n        addplace(place);\r\n        this.searchInput.blur();\r\n    };\r\n\r\n    clearSearchBox() {\r\n        this.searchInput.value = '';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Wrapper>\r\n                <input\r\n                    className=\"search-input\"\r\n                    ref={(ref) => {\r\n                        this.searchInput = ref;\r\n                    }}\r\n                    type=\"text\"\r\n                    onFocus={this.clearSearchBox}\r\n                    placeholder=\"Enter a location\"\r\n                />\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AutoComplete;","// Marker.js\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    position: absolute;\r\n    width: 38px;\r\n    height: 37px;\r\n    background-image: url(https://icon-library.com/images/pin-icon-png/pin-icon-png-9.jpg);\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    -webkit-transform: translate(-50%,-50%);\r\n    -ms-transform: translate(-50%,-50%);\r\n    transform: translate(-50%,-50%);\r\n    cursor: grab;\r\n`;\r\n\r\nconst Marker = ({ text, onClick }) => (\r\n    <Wrapper\r\n        alt={text}\r\n        onClick={onClick}\r\n    />\r\n);\r\n\r\nMarker.defaultProps = {\r\n    onClick: null,\r\n};\r\n\r\nMarker.propTypes = {\r\n    onClick: PropTypes.func,\r\n    text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Marker;","export const MarkerWaypoint = ({ text }) => (\r\n\r\n    <div style={{\r\n      zIndex:1,\r\n      color: 'white',\r\n      background: 'rgba(25, 25, 25, 0.577)',\r\n      padding: '15px 10px',\r\n      display: 'inline-flex',\r\n      width:'40px',\r\n      height:'40px',\r\n      marginTop: '-22px',\r\n      position: 'absolute',\r\n      textAlign: 'center',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderRadius: '100%',\r\n      borderStyle:'solid',\r\n      borderColor:'#fd005f',\r\n      borderWidth: '3px',\r\n      transform: 'translate(-50%, -50%)',\r\n      cursor: 'pointer'\r\n  \r\n    }}>\r\n      <div style={{\r\n        zIndex:1,\r\n        position: 'absolute',\r\n        top: '4.5%',\r\n        left: '26.5%',\r\n        marginTop: '100%',\r\n        height:\"20px\",\r\n        borderWidth: '8px',\r\n        borderStyle: 'solid',\r\n        transform: 'rotate(0deg)',\r\n        borderColor:'#fd005f transparent transparent transparent',\r\n       }}>\r\n       </div>\r\n      {text}\r\n    </div>\r\n  );\r\n\r\n  \r\n  \r\nexport const MarkerInfo = ({ text, header }) => (\r\n\r\n    <div style={{\r\n      className:\"infoPanel valigndiv\",\r\n      zIndex:10,\r\n      color: 'black',\r\n      background: 'rgba(255, 255, 255, 1)',\r\n      padding: '0px 0px 0px 0px',\r\n      display: 'absolute',\r\n      width:'180px',\r\n      height:'90px',\r\n      minHeight:'70px',\r\n      maxHeight:'140px',\r\n      fontSize: \"12px\",\r\n      marginTop: '-100px',\r\n      marginLeft: '55px',\r\n      textAlign: 'center',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      verticalAlign: 'middle',\r\n      paddingBottom:\"60px\",\r\n      borderRadius: '10px',\r\n      transform: 'translate(-50%, -50%)',\r\n      visibility:'visible',\r\n      borderStyle:'solid',\r\n      borderColor:'rgba(255,255,255,1)',\r\n      borderWidth: '3px',\r\n      whiteSpace: 'pre-wrap'\r\n  \r\n    }}>\r\n      <div style={{\r\n        className:\"infoPanel\",\r\n        zIndex:10,\r\n        position: 'absolute',\r\n        top: '103%',\r\n        left: '15%',\r\n        borderStyle:'solid',\r\n        borderBlockColor:'white',\r\n        borderWidth: '8px',\r\n        borderStyle: 'solid',\r\n        transform: 'rotate(0deg)',\r\n        borderColor:'rgba(255,255,255,1) transparent transparent transparent',\r\n       }}>\r\n       </div>\r\n        <p style={{fontWeight:\"bold\", fontSize:\"14px\", textDecorationLine:\"underline\", overflow: \"hidden\", textOverflow: \"ellipsis\", width:\"180px\", height:\"32px\"}}>{header}</p>\r\n        <p style={{width:'180px', height:\"auto\", fontSize:\"12px\"}}> {text} </p>\r\n      \r\n    </div>\r\n  );\r\n\r\n  ","import React, { Component, useState, useEffect, memo } from 'react'\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { Card, Spin, Alert, Modal } from \"antd\";\r\nimport { FullscreenOutlined, FullscreenExitOutlined } from \"@ant-design/icons\";\r\nimport SearchAssetType from './SearchAssetType';\r\nimport Form from './Form';\r\n\r\nimport NFT_ABI from '../../../contracts/abi/NFT_ABI.json'\r\nimport MARKET_ABI from  '../../../contracts/abi/MARKET_ABI.json'\r\nimport styled from 'styled-components';\r\n\r\nimport GoogleMapReact from 'google-map-react';\r\nimport AutoComplete from '../../GoogleMap/Autocomplete';\r\nimport Map_Noir from '../../GoogleMap/Theme/Map_Noir';\r\nimport Marker from '../../GoogleMap/Markers';\r\nimport {MarkerWaypoint, MarkerInfo} from '../../GoogleMap/CustomMarkers';\r\n\r\nconst Wrapper = styled.main`\r\n  width: 400px;\r\n  height: 200px;\r\n`;\r\n\r\n//const [LatLon, setLatLon] = useState({lat:\"\", lon:\"\"})\r\nvar wayPoints = []\r\nvar coordinates\r\n\r\nconst GMAP_API_KEY = process.env.REACT_APP_GMAP_API_KEY\r\n\r\nconst NFT_TOKEN_ADDR = process.env.REACT_APP_PANGEA_TOKEN_ADDR\r\nconst MARKETPLACE_ADDR = process.env.REACT_APP_PANGEA_MARKETPLACE_ADDR\r\n\r\nconst styles = {\r\n    title: {\r\n      fontSize: \"30px\",\r\n      fontWeight: \"600\",\r\n    },\r\n    header: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      gap: \"5px\",\r\n    },\r\n    card: {\r\n      boxShadow: \"0 0.5rem 1.2rem rgb(189 197 209 / 20%)\",\r\n      border: \"1px solid #e7eaf3\",\r\n      borderRadius: \"1rem\",\r\n      width: \"800px\",\r\n      fontSize: \"16px\",\r\n      fontWeight: \"500\",\r\n      textAlign:\"center\",\r\n      marginLeft:\"auto\",\r\n      marginRight:\"auto\",\r\n      marginTop:\"-30px\", \r\n      opacity:\"1.0\",\r\n    },\r\n  };\r\n\r\nconst typeList = {Communication:1, Observation:1, Navigation:2, Courier:2, Emergency:3}\r\nvar gCenter = {center:[]}\r\n\r\nfunction MintFactory() {\r\n  \r\n    var debug = document.getElementById(\"debug\")    \r\n    const { Moralis, user } = useMoralis();\r\n    const [fileUrl, setFileUrl] = useState(null)\r\n    const [loading, setLoading] = useState(false);\r\n    const [imageUploading, setImageUploading] = useState(false);\r\n\r\n    const [currentLoc, setCurrentLoc] = useState({lat: 3.14777, lng: 101.69403})\r\n    const [typeNo, setTypeNo] = useState(10)\r\n    const [coordinateList, setCoordinateList] = useState([])\r\n    const [geoFenceList, setGeofenceList] = useState([])\r\n    const [infoMeta, setInfoMeta] = useState({point:\"Point #\", addr:\"\", lat:\"\", lng:\"\"})\r\n    const [inputValue, setInputValue] = useState({name:\"Pangea\", image:\"\", type:\"1\"})\r\n    const [infoActive, setInfoActive] = useState(true)\r\n    const [mapFullscreen, setMapFullscreen] = useState(false)\r\n   \r\n    const lat = document.getElementById(\"lat\")\r\n    \r\n    // var gMap = new GoogleMap()    \r\n    var InputForm = new Form()\r\n    \r\n    useEffect(async () => {\r\n        CurrentLoc()\r\n        // setDebugLog(typeNo + \"\\n\" + JSON.stringify(gCenter))\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        setTypeNo(typeList[inputValue.name])\r\n\r\n        setFileUrl(inputValue.image)\r\n        //Clear waypoint list\r\n\r\n        wayPoints = []\r\n        setCoordinateList(wayPoints)\r\n        setGeofenceList([])\r\n    }, [inputValue])\r\n\r\n    function CurrentLoc() {\r\n        if ('geolocation' in navigator) {\r\n          navigator.geolocation.getCurrentPosition((position) => {\r\n            setCurrentLoc ({\r\n                  center: {lat: position.coords.latitude, lng: position.coords.longitude}\r\n              });\r\n          });\r\n        }\r\n    }\r\n\r\n    class GoogleMap extends Component {\r\n    \r\n        state = {\r\n            mapApiLoaded: false,\r\n            mapInstance: null,\r\n            mapApi: GMAP_API_KEY,\r\n            geoCoder: null,\r\n            places: [],\r\n            center: {lat: 3.14777, lng: 101.69403},\r\n            zoom: 17,\r\n            address: '',\r\n            draggable: true,\r\n            lat: null,\r\n            lng: null\r\n        };\r\n    \r\n         \r\n        renderPolylines (map, maps, type) {\r\n            // this.apiHasLoaded(map, maps)\r\n            /** Example of rendering geodesic polyline */\r\n            if(typeNo == 2){\r\n                let geodesicPolyline = new maps.Polyline({\r\n                    path: coordinateList,\r\n                    geodesic: false,\r\n                    strokeColor: '#00a1e1',\r\n                    strokeOpacity: 1.0,\r\n                    strokeWeight: 4\r\n                })\r\n                geodesicPolyline.setMap(map)\r\n            } else if(typeNo == 3){\r\n                /** Example of rendering non geodesic polyline (straight line) */\r\n                let nonGeodesicPolyline = new maps.Polyline({\r\n                    path: coordinateList,\r\n                    geodesic: true,\r\n                    strokeColor: 'red',\r\n                    strokeOpacity: 0.7,\r\n                    strokeWeight: 3\r\n                })\r\n                nonGeodesicPolyline.setMap(map)\r\n            } else {\r\n                /** Example of rendering non geodesic polyline (straight line) */\r\n                let nonGeodesicPolyline = new maps.Polyline({\r\n                    path: geoFenceList,\r\n                    geodesic: false,\r\n                    fillColor: (inputValue.name == \"Observation\") ? 'yellow' : \"lightgreen\",\r\n                    strokeColor: (inputValue.name == \"Observation\") ? 'yellow' : \"lightgreen\",\r\n                    strokeOpacity: 0.3,\r\n                    strokeWeight: 20\r\n                })\r\n                nonGeodesicPolyline.setMap(map)\r\n            }\r\n            // this.fitBounds(map, maps)\r\n        }\r\n\r\n        async geodeticFencePoints (radius, lat, lng) {\r\n    \r\n            var earth = 6378.137  //radius of the earth in kilometer\r\n            var new_latitude = [], new_longitude = []\r\n            var geoFence = []\r\n            var staticFence = []\r\n            //For latitude\r\n            var pi = Math.PI\r\n            var cos = Math.cos\r\n            var sin = Math.sin\r\n            var _meters = (1 / ((2 * pi / 360) * earth)) / 1000;  //1 meter in degree\r\n        \r\n            //For longitude\r\n            \r\n            for(var i = 0; i < 2880; i++){\r\n            \r\n                geoFence.push({\r\n                    lat: lat + (radius * _meters * cos(i/8)), \r\n                    lng: lng + (radius * _meters * sin(i/8)) / cos(lat * (pi / 180))\r\n                })\r\n                geoFence.push({lat: lat, lng: lng })\r\n              }\r\n            // setStaticFence(staticFence)\r\n            setGeofenceList(geoFence)\r\n        }\r\n        \r\n        fitBounds (map, maps) {\r\n            var bounds = new maps.LatLngBounds()\r\n            for (let marker of coordinateList) {\r\n              bounds.extend(\r\n                new maps.LatLng(marker.lat, marker.lng)\r\n              )\r\n            }\r\n            map.fitBounds(bounds)\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.setCurrentLocation();\r\n        }\r\n    \r\n        onMarkerInteraction = (childKey, childProps, mouse) => {\r\n            this.setState({\r\n                draggable: false,\r\n                lat: mouse.lat,\r\n                lng: mouse.lng\r\n            });\r\n        }\r\n\r\n        onMarkerInteractionMouseUp = (childKey, childProps, mouse) => {\r\n            this.setState({ draggable: true });\r\n            this._generateAddress();\r\n        }\r\n    \r\n        onMarkerClick = (ev, map, maps) => {\r\n            if(!infoActive){\r\n                var markerInfo = {marker: ev, point: \"Point #\" + ev, add:\"\", lat: coordinateList[ev].lat, lng: coordinateList[ev].lng}\r\n                setInfoMeta(markerInfo)\r\n                setInfoActive(true)\r\n            }\r\n        };\r\n\r\n        onMarkerMouseLeave (ev) {\r\n        };\r\n        \r\n        onMarkerMouseEnter (ev) {\r\n\r\n        };\r\n\r\n        _onChange = ({ center, zoom }) => {\r\n            this.setState({\r\n                center: center,\r\n                zoom: zoom,\r\n            });\r\n        }\r\n    \r\n        _onClick = (value) => {\r\n            this.setState({\r\n                lat: value.lat,\r\n                lng: value.lng\r\n            });\r\n            this.addWayPoints({\r\n                lat: value.lat,\r\n                lng: value.lng\r\n            })\r\n        }\r\n    \r\n        addWayPoints = (waypoint) => {\r\n            if(typeNo > 1){\r\n                wayPoints.push(waypoint)\r\n                setCoordinateList(wayPoints)\r\n            } else if (typeNo == 1){\r\n                wayPoints = []\r\n                wayPoints.push(waypoint)\r\n                setCoordinateList(wayPoints)\r\n                this.geodeticFencePoints(2500, waypoint.lat, waypoint.lng)\r\n            }\r\n            setInfoMeta({marker: coordinateList.length, point: \"Point #\" + coordinateList.length, lat: waypoint.lat, lng: waypoint.lng})\r\n        }\r\n\r\n        apiHasLoaded = (map, maps) => {\r\n            this.setState({\r\n                mapApiLoaded: true,\r\n                mapInstance: map,\r\n                mapApi: maps,\r\n            });\r\n            this.renderPolylines (map, maps, typeNo)\r\n            this._generateAddress();\r\n        };\r\n    \r\n        addPlace = (place) => {\r\n            this.setState({\r\n                places: [place],\r\n                lat: place.geometry.location.lat(),\r\n                lng: place.geometry.location.lng()\r\n            });\r\n            this._generateAddress()\r\n        };\r\n    \r\n        _generateAddress() {\r\n            const {\r\n                mapApi\r\n            } = this.state;\r\n    \r\n            const geocoder = new mapApi.Geocoder;\r\n    \r\n            geocoder.geocode({ 'location': { lat: this.state.lat, lng: this.state.lng } }, (results, status) => {\r\n                console.log(results);\r\n                console.log(status);\r\n                if (status === 'OK') {\r\n                    if (results[0]) {\r\n                        this.zoom = 12;\r\n                        this.setState({ address: results[0].formatted_address });\r\n                    } else {\r\n                        window.alert('No results found');\r\n                    }\r\n                } else {\r\n                    window.alert('Geocoder failed due to: ' + status);\r\n                }\r\n    \r\n            });\r\n            this.setCurrentLocation()\r\n            //this.addWayPoints({ lat: this.state.lat, lng: this.state.lng })\r\n        }\r\n    \r\n        // Get Current Location Coordinates\r\n        setCurrentLocation() {\r\n            if ('geolocation' in navigator) {\r\n                navigator.geolocation.getCurrentPosition((position) => {\r\n                    this.setState({\r\n                        center: {lat: position.coords.latitude, lng: position.coords.longitude},\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const {\r\n                places, mapApiLoaded, mapInstance, mapApi,\r\n            } = this.state;\r\n\r\n    \r\n            return (\r\n                <>\r\n                    {mapApiLoaded && (\r\n                        <div>\r\n                            <AutoComplete map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />\r\n                        </div>\r\n                    )}\r\n                    <GoogleMapReact\r\n                        // style={Map_Noir}\r\n                        center={this.state.center}\r\n                        zoom={this.state.zoom}\r\n                        draggable={this.state.draggable}\r\n                        onChange={this._onChange}\r\n                        onChildMouseDown={this.onMarkerInteraction}\r\n                        onChildMouseUp={this.onMarkerInteractionMouseUp}\r\n                        onChildMouseMove={this.onMarkerInteraction}\r\n                        onChildClick={this.onMarkerClick}\r\n                        onChildMouseEnter={this.onMarkerMouseEnter}\r\n                        onChildMouseLeave={this.onMarkerMouseLeave}\r\n                        onClick={this._onClick}\r\n                        bootstrapURLKeys={{\r\n                            key: 'AIzaSyDe-rYFxtl6-10vZ6wr9Fcn2ye_RmUVw_4',\r\n                            libraries: ['places', 'geometry'],\r\n                        }}\r\n                        \r\n                        yesIWantToUseGoogleMapApiInternals\r\n                        onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\r\n                        >\r\n\r\n                        {coordinateList && coordinateList.map((waypoint, index) => {\r\n                            return(\r\n                            <MarkerWaypoint\r\n                                key={index}\r\n                                text={`Point #${index}`}\r\n                                lat={waypoint.lat}\r\n                                lng={waypoint.lng}\r\n                            />\r\n                            )}\r\n                        )}\r\n                    </GoogleMapReact>\r\n                    {!mapFullscreen &&(\r\n                    <div className=\"info-wrapper\">\r\n                        <div className=\"map-details\" style={{fontSize:\"small\"}}>Latitude: <span id=\"lat\">{this.state.lat}</span>, Longitude: <span id=\"lng\" >{this.state.lng}</span></div>\r\n                        <div id=\"zoom\" className=\"map-details\" style={{fontSize:\"small\"}}>Zoom: <span>{this.state.zoom}</span></div>\r\n                        <div id=\"addr\" className=\"map-details\" style={{fontSize:\"small\"}}>Address: <span>{this.state.address}</span></div>\r\n                    </div>\r\n                    )}\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    async function onChange(e) {\r\n        const file = e.target.files[0]\r\n        try {\r\n            setImageUploading(true)\r\n            const imageFile = new Moralis.File(file.name, file)\r\n            await imageFile.saveIPFS()\r\n            const imageURI = imageFile.ipfs()\r\n\r\n            setFileUrl(imageURI)\r\n            \r\n        } catch (error) {\r\n            setImageUploading(false)\r\n            alert('Error uploading imageURI: ' + JSON.stringify(error))\r\n        }  \r\n        setImageUploading(false)\r\n    }\r\n    \r\n     async function createMarket() {\r\n        InputForm.handleSubmit()\r\n\r\n        const { name, description, price, brand, weight } = InputForm.state//formInput\r\n        if (!name || !description || !price || !fileUrl) {\r\n            alert('Form Incomplete\\nPlease fill in the missing fields\\nImage: ' + (fileUrl? fileUrl : \"<Missing>\") + \"\\n\" + JSON.stringify({company:(brand? brand : \"<Missing>\") ,name:(name? name : \"<Missing>\") , description:(description? description : \"<Missing>\") , price:(price? price : \"<Missing>\") } , null, 2));\r\n            return\r\n        }\r\n\r\n        /* first compile metadata, then upload to IPFS */\r\n        /* first, upload to IPFS */\r\n        const data = JSON.stringify({\r\n            name, company:InputForm.state.brand? InputForm.state.brand : \"Public\", description, meta:coordinateList, type: InputForm.state.type? InputForm.state.type : \"TOKEN\", subType: inputValue.name, weight: weight, image: fileUrl, timestamp: Date.now()\r\n        })    \r\n\r\n        try {\r\n            setLoading(true)\r\n\r\n            const metadataFile = new Moralis.File(\"metadata.json\", {base64 : btoa((data))});\r\n            await metadataFile.saveIPFS();\r\n            const metadataURI = metadataFile.ipfs();\r\n            \r\n        // /* after file is uploaded to IPFS, pass the URL to save it on the blockchain */\r\n        createSale(metadataURI)\r\n        } catch (error) {\r\n            alert('Error uploading metadataURI: ' + JSON.stringify(error))\r\n            setLoading(false)\r\n        }  \r\n    }\r\n  \r\n    async function createSale(url) {\r\n\r\n        /*create the item */\r\n        const options = {\r\n            contractAddress: NFT_TOKEN_ADDR,\r\n            functionName: \"createToken\",\r\n            abi: NFT_ABI,\r\n            awaitReceipt: false,\r\n            params: {\r\n                tokenURI: url\r\n            },\r\n          }\r\n\r\n        const transaction = await Moralis.executeFunction(options)\r\n        transaction\r\n\r\n        .on(\"receipt\", async(receipt) => {\r\n  \r\n            let txEvents = receipt.events\r\n            let txTransfer = txEvents.Transfer\r\n            let txReturnVal = txTransfer.returnValues\r\n            let tokenId = txReturnVal.tokenId\r\n            createMarketItem(tokenId)\r\n        })\r\n        .on(\"error\", (error) => {\r\n            setLoading(false) \r\n        });\r\n    }\r\n\r\n    async function createMarketItem(tokenId){\r\n        \r\n        /* then list the item for sale on the marketplace */\r\n        const price = Moralis.Units.ETH(InputForm.state.price)\r\n        const listingPrice = (price/10).toString()\r\n\r\n        const options = {\r\n            contractAddress: MARKETPLACE_ADDR,\r\n            functionName: \"createMarketItem\",\r\n            abi: MARKET_ABI,\r\n            msgValue: listingPrice,\r\n            awaitReceipt: false,\r\n            params: {\r\n                nftContract: NFT_TOKEN_ADDR,\r\n                tokenId: tokenId,\r\n                price: price\r\n            },\r\n        }\r\n\r\n        const transaction = await Moralis.executeFunction(options)\r\n        transaction\r\n\r\n        .on(\"receipt\", async(receipt) => {\r\n            updateMarketplace(tokenId)\r\n            setLoading(false)\r\n        })\r\n        .on(\"error\", (error) => {\r\n            setLoading(false)\r\n            alert(\"Transaction Failed...\\n\" + JSON.stringify(error)) \r\n        })\r\n\r\n    }\r\n\r\n    async function updateMarketplace(tokenId){\r\n\r\n        const queryMarket = Moralis.Object.extend(\"Assets\")\r\n        const market = new Moralis.Query(queryMarket);\r\n\r\n        market.matches(\"tokenId\", tokenId)\r\n        var result = await market.find()\r\n        \r\n        const objId = JSON.parse(JSON.stringify(result[0])).objectId\r\n        const itemId = JSON.parse(JSON.stringify(result[0])).itemId\r\n\r\n        const updateMarket = Moralis.Object.extend(\"Assets\")\r\n        const update = new Moralis.Query(updateMarket);\r\n        result = await update.get(objId)\r\n            .then(obj => {\r\n            obj.set(\"brand\", InputForm.state.brand? InputForm.state.brand : \"Pangea\")\r\n            obj.save()\r\n            // setLoading(false)\r\n            }).catch(function(error) {\r\n            // There was an error.\r\n            alert(\"Fail to update Marketplace \\n\" + JSON.stringify(error))\r\n            setLoading(false)\r\n        });\r\n\r\n    }\r\n    return (\r\n        <>\r\n        <div style={{\r\n            cursor:\"pointer\", \r\n            zIndex:\"2\", \r\n            width:\"100%\",\r\n            left:\"0\",\r\n            textAlign:\"center\",\r\n            position:mapFullscreen? \"absolute\" : \"relative\",\r\n            bottom:mapFullscreen? \"46px\" : \"\",\r\n            fontSize:\"32px\"}}>\r\n            <SearchAssetType setInputValue={setInputValue}/>   \r\n        </div>\r\n        {mapFullscreen &&(\r\n            <div className=\"main-wrapper\" \r\n                style={{\r\n                    position:\"absolute\", \r\n                    textAlign:\"center\", \r\n                    zIndex:\"1\", \r\n                    top:\"58px\", \r\n                    left:\"0\", \r\n                    width:\"calc(100vw - 12px)\", \r\n                    height:\"calc(100vh - 76px)\"}}>\r\n                \r\n                    <GoogleMap/>\r\n        \r\n                    <FullscreenExitOutlined \r\n                        onClick={()=> setMapFullscreen(false)}\r\n                        style={{cursor:\"pointer\", \r\n                            position:\"absolute\", \r\n                            zIndex:\"2\", \r\n                            top:\"15px\",\r\n                            right:\"15px\", \r\n                            fontSize:\"32px\"}}/>\r\n            </div>\r\n        )}\r\n        {!mapFullscreen &&(\r\n        <>\r\n            <div style={{display:\"inline-block\",width:\"400px\", position:\"relative\", \r\n                marginLeft:\"40%\", marginRight:\"auto\", textAlign:\"center\", overflow:\"hidden\", zIndex:\"1\"}}>\r\n                <ul id=\"grid\" style={{backGroundColor:\"black\", width:\"360px\", marginLeft:\"20px\", marginTop:\"-0px\"}} class=\"clear\">\r\n                    <li className=\"overflow-hidden\">\r\n                        <div className=\"hexagon\" style={{width:\"100%\", alignContent:\"center\"}}>\r\n                            <img id=\"token\" className=\"zoomIn\" style={{cursor:\"pointer\", opacity:\"1.0\"}} src={fileUrl || require(\"../../../img/hexic.png\").default} />            \r\n                        </div>\r\n                    </li> \r\n                </ul>\r\n            </div>\r\n            <Card style={styles.card}>\r\n                <Spin spinning={loading} size=\"large\" tip=\"In Progress...\">\r\n                \r\n                <div className=\"\" style={{textAlign:\"center\", height:\"auto\", zIndex:\"1\"}}>\r\n                    <div style={{display:\"inline-block\", width:\"800px\"}}>\r\n                        {InputForm.render()}\r\n                        <div className=\"main-wrapper\" style={{display:\"inline-block\", width:\"400px\", marginRight:\"-30px\"}}>\r\n                            <FullscreenOutlined \r\n                                onClick={()=> setMapFullscreen(true)}\r\n                                style={{cursor:\"pointer\", \r\n                                    position:\"absolute\", \r\n                                    zIndex:\"3\", \r\n                                    right:\"0\", \r\n                                    fontSize:\"32px\"}}/>\r\n                            <GoogleMap/>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            id=\"assetFile\"\r\n                            style={{display:\"none\"}}\r\n                            type=\"file\"\r\n                            name=\"Asset\"\r\n                            className=\"\"\r\n                            accept=\"image/*\"\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div htmlFor=\"assetFile\" style={{width:\"400px\", zIndex:\"2\", marginLeft:\"auto\", marginRight:\"auto\", textAlign:\"center\"}} >\r\n                        \r\n                        <Spin spinning={imageUploading} size=\"large\" tip=\"Uploading...\">\r\n                            <button id=\"pulse\" htmlFor=\"assetFile\" style={{margin:\"10px 0px\"}}>\r\n                                <label htmlFor=\"assetFile\" style={{zIndex:\"1\", cursor:\"pointer\", width:\"380px\", height:\"28px\"}}>Select Token Image</label>\r\n                            </button>\r\n                            <button id=\"load-btnAsset\" onClick={createMarket} className=\"btnMintAsset\">\r\n                                <label style={{zIndex:\"1\", cursor:\"pointer\", width:\"400px\", height:\"25px\"}}><span></span></label>\r\n                            </button>\r\n                        </Spin>\r\n                    </div>\r\n\r\n                </div>\r\n                </Spin>\r\n            </Card>\r\n            </>\r\n        )}\r\n        </>\r\n  );\r\n}\r\n\r\nexport default memo(MintFactory);\r\n","import React, { Component, useState, useEffect, memo } from 'react'\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { Card, Spin, Alert, Modal, Tabs } from \"antd\";\r\nimport { FullscreenOutlined, FullscreenExitOutlined } from \"@ant-design/icons\";\r\n\r\nimport SearchAssetType from './SearchAssetType';\r\nimport Form from './Form';\r\nimport { getNativeByChain } from \"helpers/networks\";\r\nimport { getEllipsisTxt, getEllipsisNormal } from \"helpers/formatters\";\r\n\r\nimport NFT_ABI from '../../../contracts/abi/NFT_ABI.json'\r\nimport MARKET_ABI from  '../../../contracts/abi/MARKET_ABI.json'\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport GoogleMapReact from 'google-map-react';\r\nimport AutoComplete from '../../GoogleMap/Autocomplete';\r\nimport Map_Noir from '../../GoogleMap/Theme/Map_Noir';\r\nimport Marker from '../../GoogleMap/Markers';\r\nimport {MarkerWaypoint, MarkerInfo} from '../../GoogleMap/CustomMarkers';\r\nconst GMAP_API_KEY = process.env.REACT_APP_GMAP_API_KEY\r\n\r\nconst Wrapper = styled.main`\r\n  width: 400px;\r\n  height: 200px;\r\n`;\r\n\r\nvar wayPoints = []\r\n\r\nconst NFT_TOKEN_ADDR = process.env.REACT_APP_PANGEA_TOKEN_ADDR\r\nconst MARKETPLACE_ADDR = process.env.REACT_APP_PANGEA_MARKETPLACE_ADDR\r\n\r\nconst styles = {\r\n    title: {\r\n      fontSize: \"30px\",\r\n      fontWeight: \"600\",\r\n    },\r\n    header: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      gap: \"5px\",\r\n    },\r\n    card: {\r\n      boxShadow: \"0 0.5rem 1.2rem rgb(189 197 209 / 20%)\",\r\n      border: \"1px solid #e7eaf3\",\r\n      borderRadius: \"1rem\",\r\n      width: \"800px\",\r\n      fontSize: \"16px\",\r\n      fontWeight: \"500\",\r\n      textAlign:\"center\",\r\n      marginLeft:\"auto\",\r\n      marginRight:\"auto\",\r\n      marginTop:\"-30px\", \r\n      opacity:\"1.0\",\r\n    },\r\n  };\r\n\r\nconst typeList = {Communication:1, Observation:1, Navigation:2, Courier:2, Emergency:3}\r\nvar gMap, gMaps, gCenter = {center:[]}\r\n\r\nfunction OrderRequest() {\r\n  \r\n    var debug = document.getElementById(\"debug\")    \r\n    const { account, chainId, Moralis, user } = useMoralis();\r\n    const nativeCrypto = getNativeByChain(chainId)\r\n    const [fileUrl, setFileUrl] = useState(null)\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [imageUploading, setImageUploading] = useState(false);\r\n\r\n    const [mapFullscreen, setMapFullscreen] = useState(false)\r\n    const [currentLoc, setCurrentLoc] = useState({lat: 3.14777, lng: 101.69403})\r\n    const [geoFenceList, setGeofenceList] = useState([])\r\n    const [typeNo, setTypeNo] = useState(10)\r\n    const [coordinateList, setCoordinateList] = useState([])\r\n    const [tokenType, setTokenType] = useState(\"TOKEN\")\r\n    const [inputValue, setInputValue] = useState({name:\"Pangea\", image:\"\"})\r\n    const [infoActive, setInfoActive] = useState(true)\r\n    const [infoMeta, setInfoMeta] = useState({point:\"Point #\", addr:\"\", lat:\"\", lng:\"\"})\r\n    const [debugLog, setDebugLog] = useState(\"log\")\r\n   \r\n    const Orders = Moralis.Object.extend(\"Orders\");\r\n    const newOrder = new Orders();\r\n    \r\n    useEffect(async () => {\r\n        CurrentLoc() \r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        setTypeNo(typeList[inputValue.name])\r\n        setFileUrl(inputValue.image)\r\n        //Clear waypoiny list\r\n        wayPoints = []\r\n        setGeofenceList([])\r\n        setCoordinateList(wayPoints)\r\n    }, [inputValue])\r\n\r\n    function CurrentLoc() {\r\n        if ('geolocation' in navigator) {\r\n          navigator.geolocation.getCurrentPosition((position) => {\r\n            setCurrentLoc ({\r\n                  center: {lat: position.coords.latitude, lng: position.coords.longitude}\r\n              });\r\n          });\r\n        }\r\n    }\r\n\r\n    class GoogleMap extends Component {\r\n    \r\n        state = {\r\n            mapApiLoaded: false,\r\n            mapInstance: null,\r\n            mapApi: GMAP_API_KEY,\r\n            geoCoder: null,\r\n            places: [],\r\n            center: {lat: 3.14777, lng: 101.69403},\r\n            zoom: 17,\r\n            address: '',\r\n            draggable: true,\r\n            lat: null,\r\n            lng: null\r\n        };\r\n    \r\n        renderPolylines (map, maps, type) {\r\n            /** Example of rendering geodesic polyline */\r\n            if(typeNo == 2){\r\n                let geodesicPolyline = new maps.Polyline({\r\n                    path: coordinateList,\r\n                    geodesic: false,\r\n                    strokeColor: '#00a1e1',\r\n                    strokeOpacity: 1.0,\r\n                    strokeWeight: 4\r\n                })\r\n                geodesicPolyline.setMap(map)\r\n            } else if(typeNo == 3){\r\n                /** Example of rendering non geodesic polyline (straight line) */\r\n                let nonGeodesicPolyline = new maps.Polyline({\r\n                    path: coordinateList,\r\n                    geodesic: true,\r\n                    strokeColor: 'red',\r\n                    strokeOpacity: 0.7,\r\n                    strokeWeight: 3\r\n                })\r\n                nonGeodesicPolyline.setMap(map)\r\n            } else {\r\n                /** Example of rendering non geodesic polyline (straight line) */\r\n                let nonGeodesicPolyline = new maps.Polyline({\r\n                    path: geoFenceList,\r\n                    geodesic: false,\r\n                    fillColor: (inputValue.name == \"Observation\") ? 'yellow' : \"magenta\",\r\n                    strokeColor: (inputValue.name == \"Observation\") ? 'yellow' : \"magenta\",\r\n                    strokeOpacity: 0.3,\r\n                    strokeWeight: 20\r\n                })\r\n                nonGeodesicPolyline.setMap(map)\r\n            }\r\n            // this.fitBounds(map, maps)\r\n        }\r\n\r\n        async geodeticFencePoints (radius, lat, lng) {\r\n    \r\n            var earth = 6378.137  //radius of the earth in kilometer\r\n            var geoFence = []\r\n            //For latitude\r\n            var pi = Math.PI\r\n            var cos = Math.cos\r\n            var sin = Math.sin\r\n            var _meters = (1 / ((2 * pi / 360) * earth)) / 1000;  //1 meter in degree\r\n        \r\n            for(var i = 0; i < 2880; i++){\r\n            \r\n                geoFence.push({\r\n                    lat: lat + (radius * _meters * cos(i/8)), \r\n                    lng: lng + (radius * _meters * sin(i/8)) / cos(lat * (pi / 180))\r\n                })\r\n                geoFence.push({lat: lat, lng: lng })\r\n              }\r\n            setGeofenceList(geoFence)\r\n        }\r\n        \r\n        componentWillMount() {\r\n        }\r\n    \r\n        onMarkerInteraction = (childKey, childProps, mouse) => {\r\n            this.setState({\r\n                draggable: false,\r\n                lat: mouse.lat,\r\n                lng: mouse.lng\r\n            });\r\n        }\r\n\r\n        onMarkerInteractionMouseUp = (childKey, childProps, mouse) => {\r\n            this.setState({ draggable: true });\r\n            this._generateAddress();\r\n        }\r\n    \r\n        onMarkerClick = (ev, map, maps) => {\r\n            if(!infoActive){\r\n                var markerInfo = {marker: ev, point: \"Point #\" + ev, add:\"\", lat: coordinateList[ev].lat, lng: coordinateList[ev].lng}\r\n                setInfoMeta(markerInfo)\r\n\r\n                setInfoActive(true)\r\n            }\r\n        };\r\n\r\n        onMarkerMouseLeave (ev) {\r\n        };\r\n        \r\n        onMarkerMouseEnter (ev) {\r\n\r\n\r\n        };\r\n\r\n        _onChange = ({ center, zoom }) => {\r\n            this.setState({\r\n                center: center,\r\n                zoom: zoom,\r\n            });\r\n        }\r\n    \r\n        _onClick = (value) => {\r\n            this.setState({\r\n                lat: value.lat,\r\n                lng: value.lng\r\n            });\r\n            this.addWayPoints({\r\n                lat: value.lat,\r\n                lng: value.lng\r\n            })\r\n            this.renderPolylines (this.state.mapInstance, this.state.mapApi, typeNo)\r\n \r\n        }\r\n    \r\n        addWayPoints = (waypoint) => {\r\n            if(typeNo > 1){\r\n                wayPoints.push(waypoint)\r\n                setCoordinateList(wayPoints)\r\n            } else if (typeNo == 1){\r\n                wayPoints = []\r\n                wayPoints.push(waypoint)\r\n                setCoordinateList(wayPoints)\r\n                this.geodeticFencePoints(2500, waypoint.lat, waypoint.lng)\r\n            }\r\n            setInfoMeta({marker: coordinateList.length, point: \"Point #\" + coordinateList.length, lat: waypoint.lat, lng: waypoint.lng})\r\n        }\r\n\r\n        apiHasLoaded = (map, maps) => {\r\n            this.setState({\r\n                mapApiLoaded: true,\r\n                mapInstance: map,\r\n                mapApi: maps,\r\n            });\r\n            this.renderPolylines (map, maps, typeNo)\r\n            this._generateAddress();\r\n        };\r\n    \r\n        addPlace = (place) => {\r\n            this.setState({\r\n                places: [place],\r\n                lat: place.geometry.location.lat(),\r\n                lng: place.geometry.location.lng()\r\n            });\r\n            this._generateAddress()\r\n        };\r\n    \r\n        _generateAddress() {\r\n            const {\r\n                mapApi\r\n            } = this.state;\r\n    \r\n            const geocoder = new mapApi.Geocoder;\r\n    \r\n            geocoder.geocode({ 'location': { lat: this.state.lat, lng: this.state.lng } }, (results, status) => {\r\n                console.log(results);\r\n                console.log(status);\r\n                if (status === 'OK') {\r\n                    if (results[0]) {\r\n                        this.zoom = 12;\r\n                        this.setState({ address: results[0].formatted_address });\r\n                    } else {\r\n                        window.alert('No results found');\r\n                    }\r\n                } else {\r\n                    window.alert('Geocoder failed due to: ' + status);\r\n                }\r\n    \r\n            });\r\n            this.setCurrentLocation()\r\n        }\r\n    \r\n        // Get Current Location Coordinates\r\n        setCurrentLocation() {\r\n            if ('geolocation' in navigator) {\r\n                navigator.geolocation.getCurrentPosition((position) => {\r\n                    this.setState({\r\n                        center: [position.coords.latitude, position.coords.longitude],\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude\r\n                    });\r\n\r\n                });\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const {\r\n                places, mapApiLoaded, mapInstance, mapApi,\r\n            } = this.state;\r\n\r\n    \r\n            return (\r\n                <>\r\n                    {mapApiLoaded && (\r\n                        <div>\r\n                            <AutoComplete map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />\r\n                        </div>\r\n                    )}\r\n                    <GoogleMapReact\r\n                        // style={Map_Noir}\r\n                        center={this.state.center}\r\n                        zoom={this.state.zoom}\r\n                        draggable={this.state.draggable}\r\n                        onChange={this._onChange}\r\n                        onChildMouseDown={this.onMarkerInteraction}\r\n                        onChildMouseUp={this.onMarkerInteractionMouseUp}\r\n                        onChildMouseMove={this.onMarkerInteraction}\r\n                        onChildClick={this.onMarkerClick}\r\n                        onChildMouseEnter={this.onMarkerMouseEnter}\r\n                        onChildMouseLeave={this.onMarkerMouseLeave}\r\n                        onClick={this._onClick}\r\n                        bootstrapURLKeys={{\r\n                            key: 'AIzaSyDe-rYFxtl6-10vZ6wr9Fcn2ye_RmUVw_4',\r\n                            libraries: ['places', 'geometry'],\r\n                        }}\r\n                        yesIWantToUseGoogleMapApiInternals\r\n                        onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}>\r\n\r\n                        {coordinateList && coordinateList.map((waypoint, index) => {\r\n                            return(\r\n                            <MarkerWaypoint\r\n                                key={index}\r\n                                text={`Point #${index}`}\r\n                                lat={waypoint.lat}\r\n                                lng={waypoint.lng}\r\n                            />\r\n                            )}\r\n                        )}\r\n                    </GoogleMapReact>\r\n    \r\n                    {!mapFullscreen &&(\r\n                    <div className=\"info-wrapper\">\r\n                        <div className=\"map-details\" style={{fontSize:\"small\"}}>Latitude: <span id=\"lat\">{this.state.lat}</span>, Longitude: <span id=\"lng\" >{this.state.lng}</span></div>\r\n                        <div id=\"zoom\" className=\"map-details\" style={{fontSize:\"small\"}}>Zoom: <span>{this.state.zoom}</span></div>\r\n                        <div id=\"addr\" className=\"map-details\" style={{fontSize:\"small\"}}>Address: <span>{this.state.address}</span></div>\r\n                    </div>\r\n                    )}\r\n                </>\r\n            );\r\n        }\r\n    }\r\n    var RequestForm = new Form()\r\n    \r\n    async function onChange_Order(e) {\r\n        const file = e.target.files[0]\r\n        try {\r\n            setImageUploading(true)\r\n            const imageFile = new Moralis.File(file.name, file)\r\n            await imageFile.saveIPFS({useMasterKey:true});\r\n            const imageURI = imageFile.ipfs()\r\n\r\n            setFileUrl(imageURI)\r\n            \r\n            setImageUploading(false)\r\n        } catch (error) {\r\n            setImageUploading(false)\r\n            alert('Error uploading imageURI: ' + error)\r\n        }  \r\n        setImageUploading(false)\r\n    }\r\n    \r\n     async function createOrder() {\r\n\r\n        RequestForm.handleSubmit()\r\n        setDebugLog(\"Test \\nForm State: \" + JSON.stringify(RequestForm.state))\r\n\r\n        const { name, description, price, brand, weight } = RequestForm.state//formInput\r\n        if (!name || !description || !price) {\r\n            alert('Form Incomplete\\nPlease fill in the missing fields\\nImage: ' + (fileUrl? fileUrl : \"<Missing>\") + \"\\n\" + JSON.stringify({company:(brand? brand : \"<Missing>\") ,name:(name? name : \"<Missing>\") , description:(description? description : \"<Missing>\") , price:(price? price : \"<Missing>\") } , null, 2));\r\n            return\r\n        }\r\n\r\n        /* first compile metadata, then upload to IPFS */\r\n        /* first, upload to IPFS */\r\n        \r\n        const data = JSON.stringify({\r\n            name, company: RequestForm.state.brand? RequestForm.state.brand : \"Pangea\", description, meta:coordinateList, type: tokenType, subType: inputValue.name, weight: weight, image: fileUrl, timestamp: Date.now()\r\n        })    \r\n        try {\r\n            setLoading(true)\r\n\r\n            const metadataFile = new Moralis.File(\"metadata.json\", {base64 : btoa((data))});\r\n            await metadataFile.saveIPFS();\r\n            const metadataURI = metadataFile.ipfs();\r\n            \r\n            setDebugLog(\"createOrder \" + metadataURI)\r\n            /* after file is uploaded to IPFS, pass the URL to save it on the blockchain */\r\n            submitOrder(metadataURI)\r\n        } catch (error) {\r\n            alert('Error uploading metadataURI: ', JSON.stringify(error, null, 2))\r\n            setLoading(false)\r\n        }  \r\n    }\r\n    \r\n    async function submitOrder(metaURI){\r\n        const priceEth = Moralis.Units.ETH(RequestForm.state.price)\r\n        \r\n        newOrder.save({\r\n            company: RequestForm.state.brand? RequestForm.state.brand : \"Pangea\",\r\n            type: tokenType,\r\n            subType: inputValue.name,\r\n            tokenURI: metaURI, \r\n            nftContract: NFT_TOKEN_ADDR, \r\n            marketplace: MARKETPLACE_ADDR, \r\n            price: priceEth.toString(), \r\n            target: account\r\n        })\r\n\r\n        newOrder.save()\r\n        .then((newOrder) => {\r\n          // The object was saved successfully.\r\n          alert(\"Order Created \" + JSON.stringify(newOrder, null, 2))\r\n            setLoading(false)\r\n        }, (error) => {\r\n          // The save failed.\r\n          // error is a Moralis.Error with an error code and message.\r\n            alert('Error uploading newOrder: ' + JSON.stringify(error, null, 2))\r\n            setLoading(false)\r\n        });\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div style={{\r\n            cursor:\"pointer\", \r\n            zIndex:\"2\", \r\n            width:\"100%\",\r\n            left:\"0\",\r\n            textAlign:\"center\",\r\n            position:mapFullscreen? \"absolute\" : \"relative\",\r\n            bottom:mapFullscreen? \"46px\" : \"\",\r\n            fontSize:\"32px\"}}>\r\n            <SearchAssetType setInputValue={setInputValue}/>   \r\n        </div>\r\n        {mapFullscreen &&(\r\n            <div className=\"main-wrapper\" \r\n                style={{\r\n                    position:\"absolute\", \r\n                    textAlign:\"center\", \r\n                    zIndex:\"1\", \r\n                    top:\"58px\", \r\n                    left:\"0\", \r\n                    width:\"calc(100vw - 12px)\", \r\n                    height:\"calc(100vh - 76px)\"}}>\r\n                \r\n                    <GoogleMap/>\r\n        \r\n                    <FullscreenExitOutlined \r\n                        onClick={()=> setMapFullscreen(false)}\r\n                        style={{cursor:\"pointer\", \r\n                            position:\"absolute\", \r\n                            zIndex:\"2\", \r\n                            top:\"15px\",\r\n                            right:\"15px\", \r\n                            fontSize:\"32px\"}}/>\r\n            </div>\r\n        )}\r\n\r\n        {!mapFullscreen &&(\r\n        <>\r\n        <div style={{display:\"inline-block\",width:\"400px\", position:\"relative\", marginLeft:\"40%\", marginRight:\"auto\", textAlign:\"center\", overflow:\"hidden\", zIndex:\"2\"}}>\r\n                <ul id=\"grid\" style={{zIndex:\"0\",backGroundColor:\"black\", width:\"360px\", marginLeft:\"20px\", marginTop:\"-0px\"}} class=\"clear\">\r\n                    <li className=\"overflow-hidden\">\r\n                        <div className=\"hexagon\" style={{width:\"100%\", alignContent:\"center\"}}>\r\n                        <img id=\"token\" className=\"zoomIn\" style={{cursor:\"pointer\", opacity:\"1.0\"}} src={fileUrl || require(\"../../../img/hexic.png\").default} />\r\n                        </div>\r\n                      </li> \r\n                </ul>\r\n        </div>\r\n        <Card style={styles.card}>\r\n            <Spin spinning={loading} size=\"large\" tip=\"In Progress...\">\r\n            \r\n            <div className=\"\" style={{textAlign:\"center\", height:\"auto\", zIndex:\"1\"}}>\r\n                <div style={{display:\"inline-block\", width:\"800px\"}}>\r\n                    {RequestForm.render()}\r\n                    <div className=\"main-wrapper\" style={{display:\"inline-block\", marginRight:\"-30px\"}}>\r\n                        \r\n                        <Tabs defaultActiveKey={tokenType} style={{marginTop:\"-14px\"}} indicatorColor={{backgroundColor: 'gray'}}>\r\n                            <Tabs.TabPane key=\"TOKEN\" tab={<h1 onClick={()=>setTokenType(\"TOKEN\")} style={tokenType === \"TOKEN\"? {fontSize:\"large\", color:\"gray\"}:{fontSize:\"18px\", color:\"lightgray\"}}>Token</h1>} >\r\n                            <div style={{display:\"inline-block\",width:\"400px\", position:\"relative\", marginLeft:\"0%\", marginRight:\"auto\", textAlign:\"center\", overflow:\"hidden\", zIndex:\"2\"}}>\r\n                                <ul id=\"grid\" style={{zIndex:\"0\",backGroundColor:\"black\", width:\"640px\", marginLeft:\"25%\", marginTop:\"-0px\"}} class=\"clear\">\r\n                                    <li className=\"overflow-hidden\">\r\n                                        <div className=\"hexagon\" style={{width:\"100%\", alignContent:\"center\"}}>\r\n                                        <img id=\"tokenTab\" className=\"zoomIn\" style={{cursor:\"pointer\", opacity:\"1.0\"}} src={fileUrl || require(\"../../../img/hexic.png\").default} />\r\n                                        </div>\r\n                                    </li> \r\n                                </ul>\r\n                            </div>\r\n                            </Tabs.TabPane>\r\n                            <Tabs.TabPane key=\"GMAP\" tab={<h1 onClick={()=>setTokenType(\"GMAP\")} style={tokenType === \"GMAP\"? {fontSize:\"large\", color:\"gray\"}:{fontSize:\"18px\", color:\"lightgray\"}}>Map</h1>} >\r\n                            <div className=\"main-wrapper\" style={{display:\"inline-block\", width:\"400px\", marginRight:\"30px\"}}>\r\n                                <FullscreenOutlined \r\n                                    onClick={()=> setMapFullscreen(true)}\r\n                                    style={{cursor:\"pointer\", \r\n                                        position:\"absolute\", \r\n                                        zIndex:\"3\", \r\n                                        right:\"0\", \r\n                                        fontSize:\"32px\"}}/>\r\n                                <GoogleMap/>\r\n                            </div>\r\n                            </Tabs.TabPane>\r\n                        </Tabs>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        id=\"requestFile\"\r\n                        style={{display:\"none\"}}\r\n                        type=\"file\"\r\n                        name=\"Asset\"\r\n                        className=\"\"\r\n                        accept=\"image/*\"\r\n                        onChange={onChange_Order}\r\n                    />\r\n                </div>\r\n                <div htmlFor=\"requestFile\" style={{width:\"400px\", zIndex:\"2\", marginLeft:\"auto\", marginRight:\"auto\", textAlign:\"center\"}} >\r\n                    \r\n                    <Spin spinning={imageUploading} size=\"large\" tip=\"Uploading...\">\r\n                        <button id=\"pulse\" htmlFor=\"requestFile\" style={{margin:\"10px 0px\"}}>\r\n                            <label htmlFor=\"requestFile\" style={{zIndex:\"1\", cursor:\"pointer\", width:\"380px\", height:\"28px\"}}>Select Token Image</label>\r\n                        </button>\r\n                        <button id=\"load-btnOrder\" onClick={createOrder} className=\"btnOrder\">\r\n                            <label style={{zIndex:\"1\", cursor:\"pointer\", width:\"400px\", height:\"25px\"}}><span></span></label>\r\n                        </button>\r\n                    </Spin>\r\n                </div>\r\n\r\n            </div>\r\n            </Spin>\r\n        </Card>\r\n        </>\r\n        )}\r\n        \r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(OrderRequest);\r\n","import { useNativeBalance } from \"react-moralis\";\r\n\r\nfunction NativeBalance(props) {\r\n  const { data: balance } = useNativeBalance(props);\r\n\r\n  return <div style={{ textAlign: \"center\", whiteSpace: \"nowrap\" }}>{balance.formatted}</div>;\r\n}\r\n\r\nexport default NativeBalance;\r\n","import { useEffect, useState } from \"react\";\r\nimport Transfer from \"./components/Transfer\";\r\nimport MintFactory from \"./components/MintFactory\"\r\nimport OrderRequest from \"./components/OrderRequest\"\r\nimport NativeBalance from \"../NativeBalance\";\r\nimport Address from \"../Address/Address\";\r\nimport Blockie from \"../Blockie\";\r\nimport { Card, Layout, Tabs } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst styles = {\r\n  title: {\r\n    fontSize: \"30px\",\r\n    fontWeight: \"600\",\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    gap: \"5px\",\r\n  },\r\n  card: {\r\n    boxShadow: \"0 0.5rem 1.2rem rgb(189 197 209 / 20%)\",\r\n    border: \"1px solid #e7eaf3\",\r\n    borderRadius: \"1rem\",\r\n    width: \"450px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"500\",\r\n    textAlign:\"center\",\r\n    marginLeft:\"auto\",\r\n    marginRight:\"auto\",\r\n    opacity:\"0.7\",\r\n  },\r\n};\r\n\r\nfunction Dashboard() {\r\n  const [tabSelected, setTabSelected] = useState(\"1\")\r\n  return (\r\n    <div style={{width:\"1000px\"}}> \r\n      <Tabs defaultActiveKey=\"1\" style={{marginTop:\"-14px\"}} indicatorColor={{backgroundColor: 'gray'}}>\r\n        <Tabs.TabPane key=\"1\" tab={<h1 onClick={()=>setTabSelected(\"1\")} style={tabSelected === \"1\"? {fontSize:\"x-large\", color:\"gray\"}:{fontSize:\"18px\", color:\"lightgray\"}}>Mint Factory</h1>} >\r\n            <MintFactory/>\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane key=\"2\" tab={<h1 onClick={()=>setTabSelected(\"2\")} style={tabSelected === \"2\"? {fontSize:\"x-large\", color:\"gray\"}:{fontSize:\"18px\", color:\"lightgray\"}}>Order Request</h1>} >\r\n            <OrderRequest/>\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane key=\"3\" tab={<h1 onClick={()=>setTabSelected(\"3\")} style={tabSelected === \"3\"? {fontSize:\"x-large\", color:\"gray\"}:{fontSize:\"18px\", color:\"lightgray\"}}>Wallet</h1>}>\r\n          <div style={{width:\"1000px\", textAlign:\"center\", alignContent:\"center\"}}>\r\n            <Card \r\n              style={styles.card}\r\n              title={\r\n                <div style={styles.header}>\r\n                  <Blockie scale={5} avatar currentWallet style />\r\n                  <Address size=\"6\" copyable />\r\n                  <NativeBalance />\r\n                </div>\r\n                }\r\n                >\r\n                <Transfer />\r\n              </Card>\r\n          </div>\r\n        </Tabs.TabPane>\r\n      </Tabs>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useMoralis, useMoralisQuery } from \"react-moralis\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nimport { PolygonCurrency } from \"./Chains/Logos\";\r\nimport moment from \"moment\";\r\nimport { AvaxLogo, PolygonLogo, BSCLogo, ETHLogo } from \"./LogosGlobal\";\r\nimport { getCollectionsByChain } from \"helpers/collections\";\r\n\r\nconst netIcons = [\r\n    {\r\n      key: \"0x1\",\r\n      value: \"Ethereum\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x539\",\r\n      value: \"Local Chain\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x3\",\r\n      value: \"Ropsten Testnet\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x4\",\r\n      value: \"Rinkeby Testnet\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x2a\",\r\n      value: \"Kovan Testnet\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x5\",\r\n      value: \"Goerli Testnet\",\r\n      icon: <ETHLogo />,\r\n    },\r\n    {\r\n      key: \"0x38\",\r\n      value: \"Binance\",\r\n      icon: <BSCLogo />,\r\n    },\r\n    {\r\n      key: \"0x61\",\r\n      value: \"Smart Chain Testnet\",\r\n      icon: <BSCLogo />,\r\n    },\r\n    {\r\n      key: \"0x89\",\r\n      value: \"Polygon\",\r\n      icon: <PolygonLogo />,\r\n    },\r\n    {\r\n      key: \"0x13881\",\r\n      value: \"Mumbai\",\r\n      icon: <PolygonLogo />,\r\n    },\r\n    {\r\n      key: \"0xa86a\",\r\n      value: \"Avalanche\",\r\n      icon: <AvaxLogo />,\r\n    },\r\n    {\r\n      key: \"0xa869\",\r\n      value: \"Fuji\",\r\n      icon: <AvaxLogo />,\r\n    },\r\n  ];\r\n  \r\nconst styles = {\r\n  table: {\r\n    margin: \"0 auto\",\r\n    width: \"1000px\",\r\n  },\r\n};\r\n\r\nfunction NFTMarketTransactions() {\r\n    const { Moralis, chainId, account } = useMoralis();\r\n    const NFTCollectionsList = getCollectionsByChain(chainId)\r\n    const [iconSelected, setIconSelected] = useState(netIcons[10]);\r\n    const queryItemImages = useMoralisQuery(\"ItemImages\");\r\n    const fetchItemImages = JSON.parse(\r\n      JSON.stringify(queryItemImages.data, [\r\n        \"nftContract\",\r\n        \"tokenId\",\r\n        \"name\",\r\n        \"image\",\r\n      ])\r\n    );\r\n    const queryMarketItems = useMoralisQuery(\"Assets\");\r\n    const fetchMarketItems = JSON.parse(\r\n      JSON.stringify(queryMarketItems.data, [\r\n        \"updatedAt\",\r\n        \"price\",\r\n        \"nftContract\",\r\n        \"address\",\r\n        \"itemId\",\r\n        \"sold\",\r\n        \"tokenId\",\r\n        \"seller\",\r\n        \"owner\",\r\n      ])\r\n    )\r\n      .sort((a, b) =>\r\n        a.updatedAt < b.updatedAt ? 1 : b.updatedAt < a.updatedAt ? -1 : 0\r\n      );\r\n  \r\n    useEffect(() => {\r\n    if (!chainId) return netIcons[11];\r\n    const newSelected = netIcons.find((item) => item.key === chainId);\r\n    setIconSelected(newSelected);\r\n    }, [chainId]);\r\n    \r\n    function getImage(addrs, id) {\r\n        const element = NFTCollectionsList.find(\r\n            function (e) {\r\n                if( e.addr.toLowerCase() === addrs){\r\n                    return e\r\n                }\r\n            }\r\n        )\r\n        return element?.image;\r\n    }\r\n  \r\n    function getName(addrs, id) {\r\n        const element = NFTCollectionsList.find(\r\n            (e) => {\r\n                if( e.addr.toLowerCase() == addrs){\r\n                    return e\r\n                }\r\n            }\r\n        )\r\n        return element?.name;\r\n    }\r\n  \r\n    const columns = [\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n      },\r\n      {\r\n        title: \"Token ID\",\r\n        key: \"tokenId\",\r\n        render: (text, record) => (\r\n          <Space size=\"middle\">\r\n            <img src={getImage(record.collection, record.tokenId)} style={{ width: \"30px\", height:\"30px\", borderRadius:\"4px\"}} />\r\n            <span>#{record.tokenId}</span>\r\n          </Space>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Collection\",\r\n        key: \"collection\",\r\n        render: (text, record) => (\r\n          <Space size=\"middle\">\r\n            <span>{getName(record.collection, record.tokenId)}</span>\r\n          </Space>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Transaction Status\",\r\n        key: \"tags\",\r\n        dataIndex: \"tags\",\r\n        render: (tags) => (\r\n          <>\r\n            {tags.map((tag) => {\r\n                let color = \"purple\" //\"volcano\"\r\n                let status = \"WAITING\"\r\n                if (String(tag).startsWith(\"seller\")) \r\n                    {\r\n                    if (String(tag).startsWith(\"seller\" + \"true\")) {\r\n                        color = \"green\"\r\n                        status = \"SOLD\"\r\n                    }\r\n                    else if (String(tag).startsWith(\"seller\" + \"false\")) {\r\n                        color = \"volcano\"\r\n                        status = \"WAITING\"\r\n                    }           \r\n                }\r\n                else if (String(tag).startsWith(\"owner\")) \r\n                    {\r\n                    if (tag === \"owner\" + \"true\" + account) {\r\n                        color = \"geekblue\"\r\n                        status = \"OWNED\"\r\n                    }\r\n                    else if (String(tag).startsWith(\"owner\" + \"false\")) {\r\n                        color = \"purple\"\r\n                        status = \"BUY\"\r\n                    }\r\n                    else if (String(tag).startsWith(\"owner\" + \"true\")) {\r\n                        color = \"grey\"\r\n                        status = \"N/A\"\r\n                    }\r\n                }\r\n      \r\n                return (\r\n                <Tag color={color} key={tag}>\r\n                  {status.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Price\",\r\n        key: \"price\",\r\n        dataIndex: \"price\",\r\n        render: (e) => (\r\n          <Space size=\"small\">\r\n            {iconSelected.icon}\r\n            <span>{e}</span>\r\n          </Space>\r\n        ),\r\n      }\r\n    ];\r\n  \r\n    const data = fetchMarketItems?.map((item, index) => ({\r\n      key: index,\r\n      date: moment(item.updatedAt).format(\"DD-MM-YYYY HH:mm\"),\r\n      token: item.nftContract,\r\n      collection: item.address,\r\n      tokenId: item.tokenId,\r\n      tags: [\r\n        \"owner\"+ item.sold + item.owner, \r\n        \"seller\"+ item.sold + item.seller, \r\n        //item.sold\r\n        ],\r\n      price: item.price / (\"1e\" + 18)\r\n    }));\r\n  \r\n    return (\r\n      <>\r\n      <div style={{zIndex:\"1\"}}>\r\n            <div style={{width:\"100%\"}}> \r\n            {/* 💸Transactions */}\r\n                <h1 style={{fontSize:\"x-large\", color:\"gray\"}}>Transactions</h1>\r\n            </div>\r\n            <div style={styles.table}>\r\n            <Table columns={columns} dataSource={data} style={{opacity:\"0.7\"}}/>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default NFTMarketTransactions;\r\n","import { Card, Timeline, Typography } from \"antd\";\r\nimport React, { useMemo } from \"react\";\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function Home({ isServerInfo }) {\r\n  const { Moralis } = useMoralis();\r\n\r\n  return (\r\n    <>\r\n    <div style={{ gap: \"10px\", marginTop:\"20%\", verticalAlign:\"middle\", textAlign:\"center\", zIndex:\"1\" }}>\r\n      <div style={{transform:\"scale(4.5)\", verticalAlign:\"middle\"}}>\r\n        <p strong style={{display:\"inline-block\", fontFamily:\"D3Honeycombism\", fontSize:\"32px\", color:\"black\"}}>P</p>\r\n        <p strong style={{display:\"inline-block\", fontFamily:\"D3Honeycombism\", fontSize:\"16px\", color:\"black\"}}>ANGEA</p>\r\n      </div>\r\n      <div style={{transform:\"scale(0.45)\", verticalAlign:\"middle\", width:\"850px\", marginTop:\"10px\"}}>\r\n        <img src={require('../img/Avalanche.png').default} alt='' style={{width:\"375px\", height:\"110px\", float:\"left\"}}></img>\r\n        <p strong style={{display:\"inline-block\", fontFamily:\"D3Honeycombism\", fontSize:\"64px\", marginTop:\"15px\", color:\"black\"}}>+</p>\r\n        <img src={require('../img/Moralis.png').default} alt='' style={{width:\"375px\", height:\"110px\", float:\"right\"}}></img>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import { useLocation } from \"react-router\";\r\nimport { Menu } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction MenuItems() {\r\n  const { pathname } = useLocation();\r\n\r\n  return (\r\n    <Menu\r\n      theme=\"light\"\r\n      mode=\"horizontal\"\r\n      style={{\r\n        display: \"flex\",\r\n        fontSize: \"17px\",\r\n        fontWeight: \"500\",\r\n        width: \"100%\",\r\n        height: \"64px\",\r\n        justifyContent: \"center\",\r\n        color: \"white\",\r\n        background: \"#000\"\r\n      }}\r\n      \r\n      defaultSelectedKeys={[pathname]}\r\n    >\r\n      <Menu.Item key=\"/home\" style={{backgroundColor:\"transparent\"}}>\r\n        <NavLink to=\"/home\" style={{backgroundColor:\"black\", color:\"white\", fontWeight:\"normal\"}}>Home</NavLink>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/marketplace\" style={{backgroundColor:\"transparent\"}}>\r\n        <NavLink to=\"/marketplace\" style={{backgroundColor:\"black\", color:\"white\", fontWeight:\"normal\"}}>Market Place</NavLink>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/dashboard\" style={{backgroundColor:\"transparent\"}}>\r\n        <NavLink to=\"/dashboard\" style={{backgroundColor:\"black\", color:\"white\", fontWeight:\"normal\"}}>Dashboard</NavLink>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/myAccount\" style={{backgroundColor:\"transparent\"}}>\r\n        <NavLink to=\"/myAccount\" style={{backgroundColor:\"black\", color:\"white\", fontWeight:\"normal\"}}>My Account</NavLink>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/transactions\" style={{backgroundColor:\"transparent\"}}>\r\n        <NavLink to=\"/transactions\" style={{background:\"black\", color:\"white\", padding:\"0,10px,0,10px\", fontWeight:\"normal\"}}>Transactions</NavLink>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default MenuItems;\r\n","import Particles from \"react-tsparticles\";\r\n\r\nexport default function PolygonWeb() {\r\n  const particlesInit = (main) => {\r\n    console.log(main);\r\n\r\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\r\n  };\r\n\r\n  const particlesLoaded = (container) => {\r\n    console.log(container);\r\n  };\r\n  return (\r\n    <Particles\r\n      id=\"tsparticles\"\r\n      init={particlesInit}\r\n      loaded={particlesLoaded}\r\n      \r\n      options={{\r\n        background: {\r\n          color: {\r\n            value: [\"#ffffff\"]\r\n          },\r\n        },\r\n        fpsLimit: 30,\r\n        interactivity: {\r\n          events: {\r\n            onClick: {\r\n              enable: true,\r\n              mode: \"push\",\r\n            },\r\n            onHover: {\r\n              enable: true,\r\n              mode: \"repulse\",\r\n            },\r\n            resize: true,\r\n          },\r\n          modes: {\r\n            bubble: {\r\n              distance: 400,\r\n              duration: 5,\r\n              opacity: 0.8,\r\n              size: 40,\r\n            },\r\n            push: {\r\n              quantity: 4,\r\n            },\r\n            repulse: {\r\n              distance: 200,\r\n              duration: 5.4,\r\n            },\r\n          },\r\n        },\r\n        particles: {\r\n          color: {\r\n            value: \"#777\",//\"#6074ba\",\r\n          },\r\n          links: {\r\n            color: \"#000\",//\"#042cba\",\r\n            distance: 150,\r\n            enable: true,\r\n            opacity: 0.25,\r\n            width: 1,\r\n          },\r\n          collisions: {\r\n            enable: true,\r\n          },\r\n          move: {\r\n            direction: \"none\",\r\n            enable: true,\r\n            outMode: \"bounce\",\r\n            random: false,\r\n            speed: 0.15,\r\n            straight: false,\r\n          },\r\n          number: {\r\n            density: {\r\n              enable: true,\r\n              value_area: 80,\r\n            },\r\n            value: 10,\r\n          },\r\n          opacity: {\r\n            value: 0.5,\r\n          },\r\n          shape: {\r\n            type: \"circle\",\r\n          },\r\n          size: {\r\n            random: true,\r\n            value: 5,\r\n          },\r\n        },\r\n        detectRetina: true,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Account from \"components/Account\";\r\nimport Chains from \"components/Chains\";\r\nimport MyAccount from \"components/MyAccount/MyAccount\";\r\nimport MyOrders from \"components/MyAccount/MyOrders\";\r\nimport NFTCollections from \"components/MyAccount/NFTCollections\";\r\nimport NFTListings from \"components/MyAccount/NFTListings\";\r\nimport NFTMarketPlace from \"components/Marketplace/NFTMarketPlace\";\r\nimport { Layout, Tabs } from \"antd\";\r\nimport { TwitterSquareFilled, FacebookFilled, YoutubeOutlined, InstagramFilled, LinkedinOutlined } from '@ant-design/icons';\r\nimport \"antd/dist/antd.css\";\r\nimport \"./style.css\";\r\nimport \"./custom.css\";\r\nimport \"./gmap.css\";\r\nimport \"./honeycomb.css\";\r\nimport CreatorsDashboard from \"components/CreatorsDashboard/CreatorsDashboard\";\r\nimport NFTMarketTransactions from \"components/Transactions\";\r\nimport Home from \"components/Home\";\r\nimport MenuItems from \"./components/MenuItems\";\r\nimport PolygonWeb from './components/PolygonWeb'\r\n\r\n// import { ReactSVG as LogoM } from \"./img/metamsk.svg\";\r\nconst { Header, Footer } = Layout;\r\n\r\nconst styles = {\r\n  content: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    fontFamily: \"Roboto, sans-serif\",\r\n    color: \"#041836\",\r\n    marginTop: \"130px\",\r\n    padding: \"15px\",\r\n  },\r\n  header: {\r\n    position: \"fixed\",\r\n    width: \"100%\",\r\n    height: \"62px\",\r\n    background: \"#000\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    fontFamily: \"Roboto, sans-serif\",\r\n    borderBottom: \"0px solid rgba(0, 0, 0, 0.06)\",\r\n    padding: \"0 10px\",\r\n    boxShadow: \"0 1px 10px rgb(151 164 175 / 10%)\",\r\n    zIndex:\"10\"\r\n  },\r\n  headerRight: {\r\n    display: \"flex\",\r\n    gap: \"20px\",\r\n    alignItems: \"center\",\r\n    fontSize: \"15px\",\r\n    fontWeight: \"600\",\r\n    zIndex:\"10\"\r\n  },\r\n  footer: { textAlign: \"center\", \r\n    position:\"absolute\", \r\n    background:\"transparent\", \r\n    bottom:\"0px\",\r\n    zIndex:\"10\", \r\n    width:\"100%\", \r\n    height:\"64px\" },\r\n  socialMedia: { cursor:\"pointer\", fontSize:\"36px\", paddingRight:\"10px\", color:\"black\" }\r\n};\r\nconst App = ({ isServerInfo }) => {\r\n  const { isWeb3Enabled, enableWeb3, isAuthenticated, isWeb3EnableLoading } = useMoralis();\r\n  const [tabSelected, setTabSelected] = useState(\"1\")\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated && !isWeb3Enabled && !isWeb3EnableLoading) enableWeb3();\r\n  }, [isAuthenticated, isWeb3Enabled]);\r\n\r\n  return (\r\n    <Layout style={{ height: \"100vh\", overflow: \"auto\"}}>\r\n      <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"/>\r\n      <script src=\"https://cdn.ethers.io/lib/ethers-5.2.umd.min.js\"\r\n        type=\"application/javascript\"></script>\r\n      <div style={{position:\"absolute\"}}><PolygonWeb/></div>\r\n      <Router>\r\n        <Header style={styles.header}>\r\n          <Logo />\r\n          <MenuItems/>\r\n          <div style={styles.headerRight}>\r\n            <Chains />\r\n            <Account />\r\n          </div>\r\n        </Header>\r\n\r\n        <div style={styles.content}>\r\n          <Switch>\r\n            <Route exact path=\"/home\">\r\n              <Home isServerInfo={isServerInfo} />\r\n            </Route>\r\n            <Route path=\"/marketplace\">              \r\n              <NFTMarketPlace/>\r\n            </Route>\r\n            <Route path=\"/dashboard\">\r\n              <CreatorsDashboard/>\r\n            </Route>\r\n            <Route path=\"/myAccount\">\r\n              <Tabs defaultActiveKey=\"1\" style={{marginTop:\"-14px\"}} indicatorColor={{backgroundColor: 'gray'}}>\r\n                <Tabs.TabPane key=\"1\" tab={<h1 onClick={()=>setTabSelected(\"1\")} style={tabSelected === \"1\"? {fontSize:\"x-large\", color:\"gray\"}:{fontSize:\"18px\", color:\"lightgray\"}}>Collections</h1>} >\r\n                  <NFTCollections/>\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane key=\"2\" tab={<h1 onClick={()=>setTabSelected(\"2\")} style={tabSelected === \"2\"? {fontSize:\"x-large\", color:\"gray\"}:{fontSize:\"18px\", color:\"lightgray\"}}>Listings</h1>} >\r\n                  <NFTListings/>\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane key=\"4\" tab={<h1 onClick={()=>setTabSelected(\"4\")} style={tabSelected === \"4\"? {fontSize:\"x-large\", color:\"gray\"}:{fontSize:\"18px\", color:\"lightgray\"}}>Orders</h1>}>\r\n                  <MyOrders/>\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane key=\"3\" tab={<h1 onClick={()=>setTabSelected(\"3\")} style={tabSelected === \"3\"? {fontSize:\"x-large\", color:\"gray\"}:{fontSize:\"18px\", color:\"lightgray\"}}>Transactions</h1>}>\r\n                  <MyAccount/>\r\n                </Tabs.TabPane>\r\n              </Tabs>\r\n            </Route>\r\n            <Route path=\"/transactions\">\r\n              <NFTMarketTransactions/>\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Redirect to=\"/home\" />\r\n            </Route>\r\n            <Route path=\"/home\">\r\n              <Redirect to=\"/home\" />\r\n            </Route>\r\n            <Route path=\"/nonauthenticated\">\r\n              <>Please login using the \"Authenticate\" button</>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n\r\n      <Footer style={styles.footer}>\r\n        <FacebookFilled style={styles.socialMedia}/>\r\n        <InstagramFilled style={styles.socialMedia}/>\r\n        <TwitterSquareFilled style={styles.socialMedia}/>  \r\n        <YoutubeOutlined style={styles.socialMedia}/>    \r\n        <LinkedinOutlined style={styles.socialMedia}/>   \r\n          \r\n      </Footer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const Logo = () => (\r\n  <div style={{ display: \"flex\" }}>\r\n  <p strong style={{display:\"inline-block\", fontFamily:\"D3Honeycombism\", fontSize:\"56px\", marginTop:\"20px\", color:\"white\"}}>P</p>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { MoralisProvider } from \"react-moralis\";\r\nimport \"./index.css\";\r\nimport Home from \"components/Home\";\r\n\r\n/** Get your free Moralis Account https://moralis.io/ */\r\n\r\nconst APP_ID = process.env.REACT_APP_AVALANCHE_FUJI_MORALIS_APP_ID;\r\nconst SERVER_URL = process.env.REACT_APP_AVALANCHE_FUJI_MORALIS_SERVER_URL;\r\n\r\nconst Application = () => {\r\n  const isServerInfo = APP_ID && SERVER_URL ? true : false;\r\n  if (isServerInfo)\r\n    return (\r\n      <MoralisProvider appId={APP_ID} serverUrl={SERVER_URL}>\r\n        <script src=\"https://cdn.ethers.io/lib/ethers-5.2.umd.min.js\"\r\n        type=\"application/javascript\"></script>\r\n        <App isServerInfo />\r\n      </MoralisProvider>\r\n    );\r\n  else {\r\n    return (\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <Home/>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <Application />,\r\n  // </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","export default __webpack_public_path__ + \"static/media/hexic.1d295e3d.png\";","export default __webpack_public_path__ + \"static/media/metamask.3a664705.svg\";"],"sourceRoot":""}